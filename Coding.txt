Gerald Brose


                   JacORB Coding Conventions
                   =========================

The goal of this little style guide is enhance code readability by
using a common style. Coding style in the JacORB project is not meant
a way of expressing oneself's views on aesthetics, but a means of
communication between physically distributed
developers. Performance-related code obfuscation should be limited to
a few sensitive places - and explained in comments!)

A useful tool is astyle (http://astyle.sourceforge.net/), which can be
used to format source code:

       astyle -j -s4 -b -P --convert-tabs --break-blocks 

1) Use (plenty of) whitespace to make the text more readable.
-------------------------------------------------------------

    a) indentation: 4 spaces, no tabs!

    b) Open curly brackets on a *new* line without further indentation

       if( x )
       {
       }

     
    c) always write the body of an if-, for-, while- ... statmement 
       on a new line, never on the same!

       for( ;; )
       {
	  ...
       }

    d) write: x = y, not: x=y, it's simpler and faster to read!

    e) Include extra spaces between parenthesis and expression, and
       around operators

       For example:
 
             calculate( foo );
             a = b * c;

    f) No spaces between method names and opening brackets, e.g:
 
             a.method( arg1 );

             public int myMethod( int param 1, ... )

       Reason: Instantaneaously makes clear that something is a method
       call and not a field access.

    g) break lines that get too long (around column 100).

    h) insert empty lines freely wherever you think it helps.


2) Comments:
------------

    - as much as you can, 
         public and package local methods and fields!!!
         private and protected ones also

    - add javadoc wherever you modify code

3) Place the JacORB LGPL license header on all files
----------------------------------------------------

[ More suggestions? ... ]

