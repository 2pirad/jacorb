gerald.brose@acm.org


                JacORB 1.4 RELEASE NOTES

                      www.jacorb.org
        ________________________________________

 Features

        - free CORBA 2.0 implementation (LGPL license)

        - 100% Java, no native code
        - fully multithreaded, very good performance

        - IDL compiler, complies to rev. 2.3 of the Java language mapping
        - DII, DSI, 
        - native IIOP, supports IIOP 1.2 Code sets and IIOP over SSL 
        - GIOP 1.2, Bidirectional GIOP
        - POA
       ´- OBV
        - DynAny
        - Implementation Repository with GUI 
        - Interface Repository with GUI 
        - Applet support and HTTP tunneling 

        - Portable Interceptors (for service context passing)
        - Domain Management

        - Object Service implementations
                - Interoperable Naming Service (with graphical interface)
                - Trading Service (extension of Mark Spruiell's JTrader)
                - Event Service
                - Transaction, collection and concurrency services
                    (by Alex Sinishin and Viacheslav Tararin of DekaSoft 
                    Ltd., Ukraine,taras@deka.kp.km.ua)


   H I S T O R Y      O F     C H A N G E S
 -------------------------------------------

        - Local Objects: 
                The org.jacorb.orb.LocalityConstrainedObject class has
                been superseded by org.omg.CORBA.LocalObject class as
                defined in the CORBA 2.4 IDL to Java mapping specification.
                Locally constrained objects, such as portable interceptors,
                should now extend this class.

        - bug fixes
                ORB:
                        - Passing null to object_to_string.
                        - Passing local object to object_to_string.
                DynAnys:
                        - All operations called on a DynAny that has been 
                          destroyed correctly throw an OBJECT_NOT_EXIST
                          exception
                        - The get_dyn_any/insert_dyn_any operations have been
                          correctly implemented
                        - The get/insert base type operations correctly throw
                          a TypeMismatch exception if a type-incorrect
                          operation is used to get/insert a value

1.4 beta 2:
=================

        - bug fixes
                ImR: used wrong name for property jacorb.implname
                Marshalling: 
                        - occasionally, wrong buffer sizes were
                          calculated in CDROutputStream
                        - more bugs fixed for recursive and 
                          repeated TypeCode               

        - Added build compatibility to the JDK 1.4 and fixed 
          compatibility problems with JDK 1.2
        
        - Portable Interceptors: 
                   - Adapted to new IDL which requires interceptors 
                     to implement operation destroy().

                   - Merged module IOP_N (Codecs, etc.) into module 
                     IOP for JDK 1.4 compatibility.

        - SSL Support changes:
                   - Dropped direct support for the separately
                     downloadable jsse1.0.2 (please see
                     README.jsse_1_0_2 in the sun_jsse dir).

                   - Added support for the JDK 1.4, which now also
                     includes generic access to the peers certificates
                     via our partial Security Level 2 implementation.

        - new OBV demo

1.4 beta 1:

        - This beta compiles only on JDK 1.3 or greater. We will also 
          support JDK 1.2 in the next release, but will give up
          backwards compatibility with JDK 1.1.

        - bug fixes:
                in Any (equals()) and TypeCode (equivalent)
                marshalling streams: 
                        recursive and repeated TypeCodes
                DynAnys: 
                        diverse bugs, e.g., treat aliased types correctly
                        made implementations purely local
                IDL compiler: 
                        name resolution bugs
                POA and ORB: 
                        memory leaks, local invocations
                IAIK SSL:
                        fixed bug that prevented mutual authentication
                        in non-role-change mode.         
                Delegate/ImR:
                        fixed bug that caused exceptions when multiple
                        concurrent requests were issued to the ImR.

        - Appligator/HTTP tunneling:
                not supported in this beta ! (please wait for the next
                release...)

        - SSL support changes:                

                - added support for Suns SSL implementation
                  JSSE. Please note that for technical reasons, it
                  isn't possible to access the clients certificates on
                  the server side when Sun JSSE is used. To use Sun
                  JSSE instead of IAIKs classes, please set the
                  following properties:

                  jacorb.ssl.socket_factory=org.jacorb.security.ssl.sun_jsse.SSLSocketFactory
                  jacorb.ssl.server_socket_factory=org.jacorb.security.ssl.sun_jsse.SSLServerSocketFactory
                  
                - Made a change in the SSL package structure: classes
                  for IAIKs libraries that were formerly in package
                  org.jacorb.security.ssl are now in the package
                  org.jacorb.security.ssl.iaik. This makes it
                  necessary to adapt the socket facory properties:

                  jacorb.ssl.socket_factory=org.jacorb.security.ssl.iaik.SSLSocketFactory
                  jacorb.ssl.server_socket_factory=org.jacorb.security.ssl.iaik.SSLServerSocketFactory

                - Removed property

                  jacorb.security.enforce_ssl 

                  Enforcing SSL can now be achieved by setting the
                  required and supported options. Please see the
                  Programming Guide for more details on these
                  properties. 
                  
                - Replaced properties

                  jacorb.security.ssl.supported_options
                  jacorb.security.ssl.requireded_options   

                  by

                  jacorb.security.ssl.client.supported_options
                  jacorb.security.ssl.client.required_options
                  jacorb.security.ssl.server.supported_options
                  jacorb.security.ssl.server.required_options

                  This allows for a more fine-grained setup of
                  SSL. Please see the Programming Guide for more 
                  details on these properties.

                - modified the property "jacorb.security.keystore". It
                  now allows three ways of specifying the keystore
                  location: 
                  a) absolute path 
                  b) relative path to current dir
                  c) relative path to users home dir
                  These possibilities are searched in the order give above.
        
        - OBV support added
                some feature are still unimplemented:
                  - valuetype inheritance
                  - value factories (use causes npe's in the compiler!)
                  - code downloading
                  - custom marshalling

        - GIOP 1.2 and bidirectional GIOP

1.3.30

        - fixed a problem with client-side connection time outs (clients
             would only time out once, and not also after subsequent 
             reconnects).       

             Involved changing some of COMM_FAILURE exceptions thrown 
             in the runtime to IMP_LIMIT for tiemouts - these are the
             ones yu want to catch! Also changed a few others to 
             TRANSIENT where they are appropriate for failures in 
             the *initial* connection setup.

        - IDL compiler bug fixes:

             fixed bugs in constant expressions

             Compiler now resets internal table between IDL files passed
                on the same command line

             Compiler did not complain if oneway operations declare 
                exceptions or return types other than void. Now it does.

             Compiler did not complain about identifiers in the same
                scope that differed only in case, which it should according
                to the spec. Now it correctly rejects definitions like 
                "teST" and "TEst".

             Compiler did not check the IDL 2.3 rules for redefinition of
                interfaces etc. in nested scopes, now it does. (If that 
                breaks your IDL files, use the new switch -sloppy_names
                to have the compiler behave as before.)

             Fixed Problems in generated code
                - String members in exceptions and structs are now initialized 
                  to "", otherwise there can be CORBA.MARSHAL exceptions 
                  at runtime because of null values.
                - generated code in multi-dimensional sequences now 
                  compiles with javac.
                - Arrays of anys: generated code now compiles with javac.
                - Corrected references to holder classes for out 
                  parameters for types aliased to string

             Additional bug fixes...

        - added support for inverse DNS lookup of IP addresses, so IORs
          contain fully qualified host names instead of IP numbers. See
          INSTALL file for details.
        
        - added properties "jacorb.ior_proxy_[host|port]" that replace
          the actual host/port where the ORB listens for requests. This
          is for cases where servers are hidden behind proxies / firewalls.
        
        - fixed a bug where a release() or a LocationForward on a shared
          object reference caused the irregular termination of other 
          concurrent requests over that reference.
  
        - added property "custom.props" which can contain a comma separated
          list of additional properties files. These properties will override
          properties set in the jacorb.properties file. This is useful for 
          setups with multiple servers/clients, where each process needs its
          own configuration.   

        - fixed bugs in trader build files (leftover from "org" change).

        - added "auto-register" feature to the ImR. This will register
          servers, that don't need to be restarted automatically, on their 
          first startup, so they don't have to be registered manually. This 
          feature is activated  via a  "-a" switch  to the  ImR process  or 
          by  setting the property "jacorb.imr.allow_auto_register" to "on".

        - renamed property "jacorb.ImplementationRepositoryURL" to 
          "ORBInitRef.ImplementationRepository", so the ImR is available 
          through resolve_initial_references().

        - accepting now ORBInitializer class properties in the form of 
          "org.omg.PortableInterceptor.ORBInitializerClass.<class name>"
          for compliance reasons. Old form of 
          "org.omg.PortableInterceptor.ORBInitializerClass.<name>=<class name>"
          is still supported.


1.3.21
        - internal redesign: all package names now begin with "org.jacorb"
          NOTE: You MUST change existing jacorb.properties files to 
          reflect these changes where property values point to JacORB
          classes, e.g. the value for property:

              org.omg.PortableInterceptor.ORBInitializerClass.standard_init

          must be changed to:

              org.jacorb.orb.standardInterceptors.IORInterceptorInitializer

        - IDL compiler:
                . added the -nostub switch to suppress generation of client stubs
                . added the -sloppy_forward switch for forward declared interfaces
                  without definitions
                . name resolution bug fixed
                . stricter checks in lots of places (thanks to Paul Locke)
                . minor bug fixes

        - Any marshalling bugs for alias types fixed

        - fixed diverse bugs in wstring support

        - enhanced dior tool to display character codeset information

        - fixed minor bug in internal buffer management

        - fixed bug in fallback code after a non-permanent ForwardRequest
          by a portable interceptor

        - added few properties to allow for tailor-made authentication
          implementations (aka PrincipalAuthenticator). Also fixed a 
          few minor glitches in the SSL setup, so that we can now 
          interoperate with, e.g., Orbacus' SSL.

1.3.11:

        - fixed two minor but annoying syntax errors in the source
          code... (jacorb/ir/gui/ModelBuilder.java and 
          jacorb/orb/domain/gui/BrowserFrame.java). Also fixed
          broken jacorb.jar file


Changes for 1.3.0:

        new: 
                - Interface Repository with GUI Browser

        improvements and bug fixes:
                - Programming Guide:
                        - new chapter, update
                        - now in HTML
                - fixed a memory leak
                - Implementation Repository now uses a thread pool internally
                - IDL compiler
                        - function of -i2jpackage switch fixed
                        - code generated for helper method narrow()
                          now compliant (throw BAD_PARAM rather than 
                          return null)
                - name server: fixed a problem with reloading persistent state  
                        after restarting
                - dior utility (ParsedIOR class) now corretcly
                  displays multiple profiles
                - updated build files
                - ...

Changes for 1.2.3:

        moved build files to Ant 1.2

        fixed build files for Linux with JDK 1.3

        fixed bug: too many client-side releases of object references
                (could result in INV_OBJREF exceptions)


Changes for 1.2.2:

        fixed memory leaks
                server: properly release servant delegated
                client: added a finalizer to generated stubs

        allow "file:/"-IORs again

        added client-side time outs (see properties file)

        changed check for OAIAddr property (address selection 
                on multi-homed hosts)

        IDL compiler:
                fixed bug in code generated for multi-dimensional sequences
                fixed bug in escapeing mechanism for reserved words

        fixed bug in LocateRequest code

        fixed bug in CorbaLoc

        fixed debug output for applets (thanks to Frank Lange of Philips)

Changes for 1.2.1:

        fixed a bug in connection management (null pointer in
                reconnect())

        removed a few build problems (dependance on non-security
                package from within orb, generate idl and jaco scripts
                automatically)

        updated compiler version number


Changes for 1.2:
================

        - new:
                - Domain Service
                - HTTP tunneling
                - improved SSL integration

        - IDL compiler: 
                - #pragma version works now
                - accepts value type definitions 
                  (but only syntacically :-), no code is generated)
                - bug fixes (typedefs, any)

        - Implementation Repository: minor changes and fixes

        - ORB: fixed ORBInitRef, now a Java property       

        - bug fixes:
                - Any/TypeCode bug
                - ServiceContext bug (alignment)

        - lots of minor stuff

Changes for 1.1:
================

        - Interoperable Naming Service extensions
                - standardized name-to-string conversions
                - convenient URL schemes for object references

        - IIOP over SSL
                - first alpha release, includes a KeyStoreManager GUI

        - Portable Interceptors

        - Collection and Concurrency services

        - Appligator bug fixes and resource usage improvements

        - IDL compiler improvements (by Matt Briggs, Vertel Inc.)
                - new compiler switch no_skel to suppress skeleton 
                  code generation
                - extended preprocessor support
                - removed inter-package dependencies

        - Improved Language Mapping compliance and IDL compiler bug fixes
                - correct helper generation for typedef's
                - ...

        - much easier to install and configure, (no more bootclasspath
          fiddling, coexist with Sun JDK CORBA classes)

        - new, platform-independent build files (for Jakarta's Ant)
                
        - internal bug fixes (memory managament, memory leaks, 
          CDR encapsulation size  tolerance, ...)

