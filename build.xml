<?xml version="1.0"?>

<!DOCTYPE project [ <!ENTITY common SYSTEM "file:./etc/common.xml"> ]>

<project name="main" default="all" basedir=".">

   <!-- ==================================================== -->
   <!--            JacORB build file                         -->
   <!-- $Id: build.xml,v 1.55 2005-10-02 20:33:40 alphonse.bendt Exp $ -->
   <!-- ==================================================== -->

   &common;

   <!-- top-level target -->
   <target name="all" depends="init,compiler,omg_idl,jacorb,libs"
      description="Build JacORB. Use -Ddebug=lines,vars,source to compile code with full debugging."/>


   <!-- ==================================================== -->
   <!--                   IDL compiler                       -->
   <!-- ==================================================== -->

   <target name="compiler" depends="init,idlsrc,idllib,idlcmd"/>

   <target name="idlcmd">
        <copy overwrite="yes" file="bin/idltemplate" tofile="bin/idl" />
        <copy overwrite="yes" file="bin/idltemplate.bat" tofile="bin/idl.bat" />
        <replace file="bin/idl" token="@@@" value="${basedir}"/>
        <replace file="bin/idl.bat" token="@@@" value="${basedir}"/>
        <chmod file="bin/idl" perm="ugo+rx"/>
   </target>

   <!-- package idl.jar -->
   <target name="idllib" depends="idlsrc" >
        <jar jarfile="${lib}/idl.jar"
             basedir="${classdir}"
             includes="org/jacorb/idl/**"
       />
   </target>

   <target name="idlsrc">
      <ant antfile="${src}/org/jacorb/idl/build.xml" dir="${basedir}" />
   </target>



   <!-- ==================================================== -->
   <!--                   OMG IDL files                      -->
   <!-- ==================================================== -->

   <target name="omg_idl" depends="init">
        <ant antfile="${basedir}/idl/build.xml" dir="${basedir}"/>
   </target>


   <!-- ==================================================== -->
   <!--                   JacORB implementation              -->
   <!-- ==================================================== -->

   <target name="jacorb" depends="init">
        <ant antfile="${src}/org/jacorb/build.xml" dir="${basedir}"/>
   </target>


   <!-- ==================================================== -->
   <!--                  Libraries                           -->
   <!-- ==================================================== -->

   <target name="libs" depends="init,jar,jaco"/>

   <target name="jar" depends="init">
      <delete file="${lib}/jacorb.jar" failonerror="false"/>
       <jar jarfile="${lib}/jacorb.jar"
      basedir="${classdir}"
      includes="org/jacorb/**,org/omg/**"
      excludes="org/jacorb/idl/**,org/jacorb/demo/**,org/jacorb/test/**"
      manifest="${basedir}/etc/jacorb_jar.manifest"
      index="true"
      />
   </target>

   <target name="jaco" depends="init">
      <!-- Use the java.endorsed.dirs mechanism to replace the SDK CORBA classes with those in jacorb.jar for SDK 1.4 -->

   	 <path id="cp.raw" >
   	 	<pathelement location="${basedir}/lib/jacorb.jar" />
   	 	<pathelement location="${basedir}/lib/logkit-1.2.jar" />
   	 	<pathelement location="${basedir}/lib/avalon-framework-4.1.5.jar" />
	 </path>
   	
   	<pathconvert targetos="unix" property="cp.unix" refid="cp.raw" >
		<map from="${basedir}" to="${JACORB_HOME}" />
   	</pathconvert>
   	
   	<pathconvert targetos="windows" property="cp.windows" refid="cp.raw" >
   	</pathconvert>
   	
      <condition property="jaco.classpath" value="-Djava.endorsed.dirs=${JACORB_HOME}/lib -classpath ${cp.unix}:${CLASSPATH}">
         <equals arg1="${ant.java.version}" arg2="1.4"/>
      </condition>
      <condition property="jacobat.classpath" value="-Djava.endorsed.dirs=&quot;${basedir}\lib&quot; -classpath &quot;${cp.windows};%CLASSPATH%&quot;">
         <equals arg1="${ant.java.version}" arg2="1.4"/>
      </condition>
      <!-- ... else use -Xbootclasspath for older SDKs -->
      <property name="jaco.classpath" value="-Xbootclasspath/p:${cp.unix}:${JRE_HOME}/lib/rt.jar:${CLASSPATH}"/>
      <property name="jacobat.classpath" value="-Xbootclasspath/p:&quot;${cp.windows};${java.home}\lib\rt.jar;%CLASSPATH%&quot;"/>
      <copy overwrite="yes" file="bin/jacotemplate" tofile="bin/jaco" />
      <copy overwrite="yes" file="bin/jacotemplate.bat" tofile="bin/jaco.bat" />

    <copy overwrite="yes" 
      file="bin/ntfy-wrapper.template"
      tofile="bin/ntfy-wrapper" />

    <replace file="bin/ntfy-wrapper" 
      token="@@@JACORB_HOME@@@"
      value="${basedir}" />

    <copy overwrite="yes" 
      file="bin/ns-wrapper.template"
      tofile="bin/ns-wrapper" />

    <replace file="bin/ns-wrapper" 
      token="@@@JACORB_HOME@@@"
      value="${basedir}" />


    <replace file="bin/jaco.bat" token="@@@CLASSPATH@@@" 
             value="${jacobat.classpath}"/>
    <replace file="bin/jaco.bat" token="@@@JACORB_HOME@@@"
             value="${basedir}" />    

    <replace file="bin/jaco" token="@@@JACORB_HOME@@@"
             value="${basedir}" />
    <replace file="bin/jaco" token="@@@JRE_HOME@@@"
             value="${java.home}" />
    <replace file="bin/jaco" token="@@@CLASSPATH@@@"
             value="${jaco.classpath}" />

    <condition property="eol" value="crlf">
        <or>
            <os family="windows"/>
            <os family="dos"/>
        </or>
    </condition>
    
    <!-- shell scripts should always be set to LF -->
    <property name="eol" value="lf" />
    
    <fixcrlf srcDir="bin"
             includes="*"
             excludes="*.exe,*.conf,*template*"
	         eol="${eol}" />

    <chmod perm="ugo+rx">
      <fileset dir="bin">
        <include name="*" />
        <exclude name="*.bat" />
        <exclude name="*.exe" />
        <exclude name="*.conf" />
        <exclude name="*template*" />
      </fileset>
    </chmod>
    </target>

   <!-- This target creates a jar file that contains the -->
   <!-- core ORB components and (generated) OMG classes -->
   <target name="core_jacorb_jar" depends="init">
      <delete file="${lib}/core_jacorb.jar"/>
       <jar jarfile="${lib}/core_jacorb.jar"
      basedir="${classdir}"
      includes="org/jacorb/orb/**,org/jacorb/poa/**,org/jacorb/util/**,org/jacorb/security/ssl/**,org/omg/CONV_FRAME/**,org/omg/CORBA/**,org/omg/CORBA_2_3/**,org/omg/CosNaming/**,org/omg/Dynamic/**,org/omg/DynamicAny/**,org/omg/GIOP/**,org/omg/IIOP/**,org/omg/IOP/**,org/omg/Portable*/**,org/omg/BiDirPolicy/**,org/omg/ETF/**,org/omg/SSLIOP/**,org/omg/TimeBase/**"
            excludes="org/jacorb/poa/gui/*,org/jacorb/util/tracing/*"
      />
   </target>

   <!-- This target creates a jar file that contains the -->
   <!-- following JacORB services and utilities: -->
   <!-- ImR + GUI, IR + GUI, POA GUI, Tracing, Proxy -->
   <target name="jacorb_services_jar" depends="init">
      <delete file="${lib}/jacorb_services.jar"/>
       <jar jarfile="${lib}/jacorb_services.jar"
      basedir="${classdir}"
      includes="org/jacorb/imr/**,org/jacorb/ir/**,org/jacorb/poa/gui/*,org/jacorb/util/CAD*,org/jacorb/util/tracing/*,org/jacorb/proxy/*"
      />
   </target>

   <!-- This target creates a jar file that contains the -->
   <!-- following OMG services: -->
   <!-- Concurrency, Events, Trading, Transaction, but not Naming -->
   <target name="omg_services_jar" depends="init">
      <delete file="${lib}/omg_services.jar"/>
       <jar jarfile="${lib}/omg_services.jar"
      basedir="${classdir}"
      includes="org/jacorb/concurrency/**,org/jacorb/events/**,org/jacorb/trading/**,org/jacorb/transaction/**,org/omg/Cos*/**"
            excludes="org/omg/CosNaming/**"
      />
   </target>


   <!-- This target creates a jar file that contains the -->
   <!-- (genrated) OMG and JacORB security classes -->
   <target name="security_jar" depends="init">
      <delete file="${lib}/security.jar"/>
       <jar jarfile="${lib}/security.jar"
      basedir="${classdir}"
      includes="org/jacorb/security/**,org/omg/Security*/**,org/omg/SSLIOP/**,org/omg/TimeBase/**"
      />
   </target>


   <!-- ==================================================== -->
   <!--                   clean up                           -->
   <!-- ==================================================== -->

   <target name="clean" depends="init" description="Clean the checkout">
      <delete file="${basedir}/bin/idl"/>
      <delete file="${basedir}/bin/idl.bat"/>
      <delete file="${basedir}/bin/jaco"/>
      <delete file="${basedir}/bin/jaco.bat"/>
      <delete file="${basedir}/bin/ntfy-wrapper" />
      <delete file="${basedir}/bin/ns-wrapper" />
      <delete dir="${classdir}/demo"/>
      <delete dir="${classdir}/org"/>
      <delete dir="${src}/generated/org"/>
      <delete dir="${src}/generated/CORBA"/>
      <ant antfile="build.xml" dir="${src}/org/jacorb" target="clean"/>
   </target>

   <target name="realclean" depends="clean" description="Clean the checkout including generated jars">
      <delete failonerror="false" >
        <fileset dir="lib/" includes="jacorb.jar, idl.jar"/>
      </delete >
   </target>


   <!-- ==================================================== -->
   <!--                  API documentation                   -->
   <!-- ==================================================== -->

   <target name="doc" depends="init" description="Create the Javadoc">
        <mkdir dir="${basedir}/doc/api"/>
        <javadoc destdir="${basedir}/doc/api"
            additionalparam="-breakiterator"
            classpathref="path.base"
            Splitindex="Yes"
            Use="Yes"
            maxmemory="256m"
            packagenames="org.jacorb.idl.*,org.jacorb.util.*,org.jacorb.orb.*,org.jacorb.imr.*,org.jacorb.ir.*,org.jacorb.poa.*,org.jacorb.events.*,org.jacorb.naming.*,org.jacorb.security.level2.*,org.jacorb.security.sas.*,org.omg.*,org.jacorb.notification.*">
            <!--               packagenames="org.jacorb.*,org.omg.*,java_cup.*"> -->
            <sourcepath>
                <path refid="sourcepath.base" />
                <!--            <pathelement path="${src}/java_cup" /> -->
            </sourcepath>
        </javadoc>
   </target>
	
  <target name="convert.jdk5" description="convert sources to use java.util.concurrent (JDK 1.5+)">
	<replace dir="${basedir}" token="edu.emory.mathcs.backport." value="">
		<include name="**/notification/**/*.java" />
	</replace>
  </target>

  <target name="convert.jdk4" description="convert sources to use backport-util-concurrent (pre JDK 1.5)">
	<replace dir="${basedir}" token=" java.util.concurrent." value=" edu.emory.mathcs.backport.java.util.concurrent.">
		<include name="**/notification/**/*.java" />
	</replace>
  </target>
</project>
