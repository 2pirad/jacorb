
<!-- This is a common initialization file for JacORB     -->
<!--                                                     -->
<!-- This should not be called directly; instead it      -->
<!-- should be included with '&common;' syntax.          -->

<target name="base-init" unless="BASE-INIT">
    <property name="dirs.base" value="${basedir}"/>
    <property name="src" value="${dirs.base}/src"/>
    <property name="lib" value="${dirs.base}/lib"/>
    <property name="idl" value="${dirs.base}/idl"/>
</target>


<!-- Call base-init first. The regression tests call this but -->
<!-- have their own base-init                                 -->
<target name="init" depends="base-init">
    <property name="debug" value="off"/>
 
    <!-- This value only used under Ant 1.5 -->
    <property name="debuglevel" value="lines,source"/>
 
    <available classname="org.apache.tools.ant.filters.ClassConstants" 
        property="ant15"/>
    <antcall target="ant-version"/>
 
    <condition property="architecture" value="windows">
        <or>
            <os family="windows"/>
            <os family="dos"/>
        </or>
    </condition>
 
    <property name="architecture" value="unix"/>
 
    <!-- Location of the compiled classes -->
    <pathconvert property="classdir" targetos="${architecture}">
        <path>
            <pathelement location="${dirs.base}/classes"/>
        </path>
    </pathconvert>
 
    <path id="path.base" >
        <pathelement location="${dirs.base}/classes"/>
        <pathelement location="${basedir}/classes"/>
        <pathelement location="${lib}/logkit-1.2.jar"/>
        <pathelement location="${lib}/idl.jar"/>
        <pathelement location="${lib}/antlr-2.7.2.jar"/>
        <pathelement location="${lib}/avalon-framework-4.1.5.jar"/>
        <pathelement location="${lib}/concurrent-1.3.2.jar"/>
        <pathelement location="${lib}/picocontainer-1.2-021105.jar" />
        <pathelement path="${sun.boot.class.path}"/>
        <pathelement path="${java.class.path}"/>
    </path>

    <path id="sourcepath.base">
      <pathelement location="${src}" />
      <pathelement location="${src}/generated" />
    </path>

    <!-- The 'classpath' property is used as the run time for some tests -->
    <pathconvert property="classpath" targetos="${architecture}">
        <path refid="path.base" />
    </pathconvert>
    
    <mkdir dir="${classdir}"/>
    <mkdir dir="${src}/generated"/>
    <filter token="path" value="basedir"/>
    
     <!-- = = = = = = = = = = = = = = = = =
          macrodef: jacorb-javac          
      = = = = = = = = = = = = = = = = = -->
	<macrodef name="jacorb-javac">
    		<attribute name="javac-includes" />
                <attribute name="javac-encoding" default="ISO-8859-1" />
    		<attribute name="javac-excludes" default="" />
    		<attribute name="javac-src" default="${src}" />
    		<attribute name="javac-sourcepath" default="sourcepath.base" />
    		<attribute name="javac-classpathref" default="path.base" />
	
    		<sequential>
        		<echo message="Compiling for ${ant.project.name}"/>
        
        		<javac srcdir="@{javac-src}"
               encoding="@{javac-encoding}"
               destdir="${classdir}"
               debug="${debug}"
               classpathref="@{javac-classpathref}"
               debuglevel="${debuglevel}"
               sourcepathref="@{javac-sourcepath}"
               includes="@{javac-includes}"
               excludes="@{javac-excludes}" />
    		</sequential>
	</macrodef>
</target>

<target name="whats-my-classpath" depends="init"
        description="Outputs the classpath that will be used for compilation of the JacORB">
         <echo message="JacORB will be built with the following classpath:${line.separator}${classpath}"/>
</target>

<!-- check if a regexp library is available -->
<target name="check-regexp">

   <condition property="available.regexp.jdk" value="true" >
      <or>
         <equals arg2="${ant.java.version}" arg1="1.4"/>
         <available classname="java.util.regex.Pattern"
         classpathref="path.base" />
      </or>
   </condition>

  <available classname="gnu.regexp.RE"
    property="available.regexp.gnu"
    classpathref="path.base" />

    <available classname="org.apache.regexp.RE"
      property="available.regexp.jakarta-regexp"
      classpathref="path.base" />

  <condition property="regexp.available">
    <or>
      <isset property="available.regexp.jdk" />
      <isset property="available.regexp.gnu" />
      <isset property="available.regexp.jakarta-regexp" />
    </or>
  </condition>
</target>


<target name="load-taskdef" depends="init">
   <taskdef name="jacidl" classname="org.jacorb.idl.JacIDL" classpathref="path.base"/>
</target>

<target name="ant-version" unless="ant15">
   <fail message="Install Ant version 1.5 or later (See http://ant.apache.org/)"/>
</target>


<target name="check-src" unless="javac-src">
   <property name="javac-src" value="${src}"/>
</target>


<target name="check-excludes" unless="javac-excludes">
   <property name="javac-excludes" value=""/>
</target>


<target name="check-includes" unless="javac-includes">
   <fail message="Pass javac-includes to target"/>
</target>


<target name="check-sourcepath" depends="init" unless="javac-sourcepath">
  <property name="javac-sourcepath" value="sourcepath.base" />
</target>


<!-- This target is a compatibility wrapper to allow either                  -->
<!-- a Ant 14 or Ant                                                         -->
<!-- 15 to be used. Optional parameters are:                                 -->
<!-- javac-src        Defaults to ${src}                                     -->
<!-- javac-excludes   For file selection; defaults to ''                     -->
<!-- javac-sourcepath  Compile Option Sourcepath; defaults to ''              -->
<!-- javac-classpathref Classpath Ref; defaults to path.base -->
<!-- Mandatory parameter is:                                                 -->
<!-- javac-includes   Specifies which files to compile.                      -->
<!--                                                                         -->
<target name="jacorb-javac" depends="check-includes,check-sourcepath,check-src,check-excludes">
   <jacorb-javac javac-src="${javac-src}"
          javac-classpathref="path.base"
          javac-sourcepath="${javac-sourcepath}"
          javac-includes="${javac-includes}"
          javac-excludes="${javac-excludes}">
   </jacorb-javac>
</target>

