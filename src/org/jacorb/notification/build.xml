<?xml version="1.0"?>

<!DOCTYPE project [
  <!ENTITY common SYSTEM "file:../../../../common.xml"> 
]>

<project name="notification" default="notification.all" basedir="../../../..">

<!-- ============================================================= -->
<!--              JacORB - NotificationService build file          -->
<!-- $Id: build.xml,v 1.9 2003-07-17 15:36:01 alphonse.bendt Exp $ -->
<!-- ============================================================= -->

  &common;

  <property name="notification.dir"
    value="${basedir}/src/org/jacorb/notification" />

  <!-- check wether to use java.util.regexp or gnu.regexp -->
  <target name="check-regexp">

    <available classname="java.util.regex.Pattern"
      property="available.regexp.jdk" />
    
    <available classname="gnu.regexp.RE"
      property="available.regexp.gnu" /> 
    
    <condition property="regexp.available">
      <or>
	<isset property="available.regexp.jdk" />
	<isset property="available.regexp.gnu" />
      </or>
    </condition>

    <fail unless="regexp.available" >
      A Patternmatcher is necessary to build and use this NotificationService.
      Use JDK 1.4 or install gnu.regexp and make it available in
      the Classpath.

      gnu.regexp is available at http://www.cacas.org/java/gnu/regexp/
    </fail>

  </target>


  <target name="check-jdk">
    <condition property="build.jdk12"  >
      <istrue value="${notification.build.jdk12}" />
    </condition>
  </target>


  <target name="check-environment" depends="check-regexp,check-jdk" />


  <target name="notification.init" depends="init, check-environment">

    <!-- directory where the antlr grammar is located -->
    <property name="grammar.dir" value="${notification.dir}/grammar" />

    <!-- package to which the parser classes are generated -->
    <property name="antlr.target.package" value="org/jacorb/notification/parser" />

    <mkdir dir="${src}/generated/${antlr.target.package}" />

    <path id="antlr.classpath">
	<pathelement path="${basedir}/lib/antlr.jar" />
    </path>

  </target>

  <!-- default target -->
  <target name="notification.all" 
    depends="notification.init, antlr, server" />

  <!-- ====== -->
  <!-- Parser -->
  <!-- ====== -->
  <target name="antlr" depends="antlr.depend, antlr.generate, antlr.compile" />

  <target name="antlr.generate" 
    depends="notification.init, antlr.depend" 
    unless="antlr.generate.notRequired">
    
    <antcall target="antlr.force.generate" />
  </target>

  <!-- check if parser needs to be generated -->
  <target name="antlr.depend" depends="notification.init">
    <uptodate property = "antlr.generate.notRequired"
      targetfile="${src}/generated/${antlr.target.package}/TCLParser.java" >
      <srcfiles dir="${grammar.dir}" includes="**/*.g" />
    </uptodate>
  </target>  
  
  <!-- generate parser -->
  <target name="antlr.force.generate" depends="notification.init" >
    <delete>
      <fileset dir="${src}/generated/${antlr.target.package}" includes="*.java, *.txt" />
    </delete>
    
    <copy file="${grammar.dir}/CommonTokenTypes.txt"
      todir="${src}/generated/${antlr.target.package}" />
    
    <java classname="antlr.Tool"  fork="yes" failonerror="yes" 
          classpathref="antlr.classpath" >
      <arg line="-o ${src}/generated/${antlr.target.package} ${grammar.dir}/tcl-lexer.g" />
    </java>
    
    <java classname="antlr.Tool" fork="yes" failonerror="yes"
          classpathref="antlr.classpath" >
      <arg line="-o ${src}/generated/${antlr.target.package} ${grammar.dir}/comp-lexer.g" />
    </java>

    <echo/>
    <echo message="*****************************************************************" />
    <echo message="* The Warnings 'Redefinition of token in tokens {...}: TOKEN'   *" />
    <echo message="* can be ignored. Unfortunately there is no way to disable them *" />
    <echo message="*****************************************************************" />
    <echo/>
    
    <java classname="antlr.Tool" fork="yes" failonerror="yes" classpathref="antlr.classpath" >
      <arg line="-o ${src}/generated/${antlr.target.package} ${grammar.dir}/tcl.g" />
    </java>    
    
    <!-- didn't like the optional antlr task -->
    <!--     
    <antlr
    outputdirectory="${src}/generated/${antlr.target.package}"
    target="${grammar.dir}/tcl.g" /> 
    -->
  </target>

  <!-- compile generated parser and AST Classes -->
  <target name="antlr.compile" depends="notification.init, antlr.generate">
    <antcall target="jacorb-javac">
      <param name="javac-includes"
	value="org/jacorb/notification/node/*.java, generated/org/jacorb/notification/parser/*.java" />
    </antcall>
  </target> 

  <target name="server" depends="notification.init, server.compile" />

  <target name="server.compile" 
    depends="notification.init, 
             check-regexp,
             notification.compile.regexp.gnu, 
             notification.compile.regexp.jdk" >

    <antcall target="jacorb-javac">

      <param name="javac-includes"
	value="org/jacorb/notification/**/*.java" />

      <param name="javac-excludes"
        value="org/jacorb/notification/util/GNUPatternWrapper.java, 
               org/jacorb/notification/util/JDK14PatternWrapper.java" />

    </antcall>
  </target>
  
  <target name="notification.compile.regexp.gnu" if="available.regexp.gnu">
    <echo message="Compiling for gnu.regexp" />
    <antcall target="jacorb-javac" >
      <param name="javac-includes"
	value="org/jacorb/notification/util/PatternWrapper.java, 
	       org/jacorb/notification/util/GNUPatternWrapper.java" />
    </antcall>
  </target>

  <target name="notification.compile.regexp.jdk" if="available.regexp.jdk">
    <echo message="Compiling for java.util.regexp" />
    <antcall target="jacorb-javac">
      <param name="javac-includes"
	value="org/jacorb/notification/util/PatternWrapper.java, 
               org/jacorb/notification/util/JDK14PatternWrapper.java"/>
      </antcall>
  </target>


  <!-- clean -->
  <target name="clean" depends="notification.init">
    <delete>
      <fileset dir="${src}/generated"
	       includes="org/jacorb/notification/**/*.*" />
    </delete>

    <delete>
      <fileset dir="${classdir}"
	       includes="org/jacorb/notification/**/*.*" />
    </delete>

  </target>

</project>
