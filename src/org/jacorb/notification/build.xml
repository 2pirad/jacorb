<?xml version="1.0"?>

<!DOCTYPE project [
  <!ENTITY common SYSTEM "file:../../../../etc/common.xml">
]>

<project name="notification" default="all" basedir="../../../..">

<!-- ============================================================= -->
<!--              JacORB - NotificationService build file          -->
<!-- $Id: build.xml,v 1.23.2.1 2004-04-07 14:58:46 alphonse.bendt Exp $ -->
<!-- ============================================================= -->

  &common;

  <property name="notification.dir"
      value="${basedir}/src/org/jacorb/notification" />

  <target name="notification.init" depends="init, check-regexp">

    <!-- directory where the etcl grammar is located -->
    <property name="etcl.grammar.dir"
      value="${notification.dir}/filter/etcl/grammar" />

    <!-- package to which the parser classes are generated -->
    <property name="etcl.target.package" value="org/jacorb/notification/filter/etcl" />

    <mkdir dir="${src}/generated/${etcl.target.package}" />

    <path id="antlr.classpath">
      <pathelement path="${basedir}/lib/antlr-2.7.2.jar" />
    </path>
  </target>


  <!-- This is the default target. It depends upon the private init       -->
  <!-- (which depends upon the common init). It calls the wrapper so that -->
  <!-- we can drop out if regexp is not available.                        -->
  <target name="all" depends="notification.init" description="Compile the notification">
     <antcall target="all-wrapper" inheritRefs="true"/>
  </target>


  <target name="all-fail" unless="regexp.available">
    <echo message="A Patternmatcher is necessary to build and use this "/>
    <echo message="NotificationService. Use JDK 1.4 or install Jakarta" />
    <echo message="Regexp or gnu.regexp"/>
    <echo message="and make it available in the classpath."/>
    <echo message="Jakarta Regexp is available at http://jakarta.apache.org/regexp"/>
    <echo message="gnu.regexp is available at http://www.cacas.org/java/gnu/regexp/"/>
  </target>


  <target name="all-wrapper" if="regexp.available" depends="all-fail">
    <antcall target="etcl" inheritRefs="true"/>
    <antcall target="server" inheritRefs="true"/>
  </target>


  <!-- ====== -->
  <!-- Parser -->
  <!-- ====== -->
  <target name="etcl" depends="notification.init, etcl.depend, etcl.generate, etcl.compile" />


  <!-- check if parser needs to be generated -->
  <target name="etcl.depend">
    <uptodate property = "etcl.generate.notRequired"
      targetfile="${src}/generated/${etcl.target.package}/TCLParser.java" >
      <srcfiles dir="${etcl.grammar.dir}" includes="**/*.g" />
    </uptodate>
  </target>


  <!-- generate parser -->
  <target name="etcl.generate" unless="etcl.generate.notRequired" >
    <delete>
      <fileset dir="${src}/generated/${etcl.target.package}" includes="*.java, *.txt" />
    </delete>

    <copy file="${etcl.grammar.dir}/CommonTokenTypes.txt"
      todir="${src}/generated/${etcl.target.package}" />

    <java classname="antlr.Tool"  fork="yes" failonerror="yes"
          classpathref="antlr.classpath" >
      <arg line="-o ${src}/generated/${etcl.target.package} ${etcl.grammar.dir}/tcl-lexer.g" />
    </java>

    <java classname="antlr.Tool" fork="yes" failonerror="yes"
          classpathref="antlr.classpath" >
      <arg line="-o ${src}/generated/${etcl.target.package} ${etcl.grammar.dir}/comp-lexer.g" />
    </java>

    <echo message="*****************************************************************" />
    <echo message="* The Warnings 'Redefinition of token in tokens {...}: TOKEN'   *" />
    <echo message="* can be ignored. Unfortunately there is no way to disable them *" />
    <echo message="*****************************************************************" />

    <java classname="antlr.Tool" fork="yes" failonerror="yes" classpathref="antlr.classpath" >
      <arg line="-o ${src}/generated/${etcl.target.package} ${etcl.grammar.dir}/tcl.g" />
    </java>

    <!-- didn't like the optional antlr task -->
    <!--
    <antlr
    outputdirectory="${src}/generated/${antlr.target.package}"
    target="${grammar.dir}/tcl.g" />
    -->
  </target>


  <!-- compile generated parser and AST Classes -->
  <target name="etcl.compile">
    <antcall target="jacorb-javac">
      <param name="javac-src"
        value="${src}/generated" />
      <param name="javac-includes"
        value="${etcl.target.package}/*.java" />
      <param name="javac-sourcepath"
        value="${src}" />
    </antcall>

    <antcall target="jacorb-javac">
      <param name="javac-includes" value="${etcl.target.package}/*.java" />
    </antcall>
  </target>


  <target name="server" depends="notification.compile.regexp">
    <antcall target="jacorb-javac">
      <param name="javac-includes"
             value="org/jacorb/notification/**/*.java" />
      <param name="javac-excludes"
             value="org/jacorb/notification/util/*PatternWrapper.java,
                    org/jacorb/notification/Main.java,
	            org/jacorb/notification/gui/**" />
    </antcall>

    <javac srcdir="${src}"
           destdir="${classdir}" >
      
      <classpath>
        <pathelement location="${dirs.base}/classes" />
	<pathelement location="${lib}/avalon-framework-4.1.5.jar" />
        <pathelement location="${lib}/wrapper-3.0.3.jar" />
      </classpath>

      <include name="org/jacorb/notification/Main.java"/>
    </javac>
  </target>


  <target name="notification.compile.regexp" 
    depends="notification.init,
             notification.compile.regexp.gnu, 
             notification.compile.regexp.jakarta-regexp,
             notification.compile.regexp.jdk"/>


  <target name="notification.compile.regexp.gnu" if="available.regexp.gnu">
    <echo message="Compiling for gnu.regexp (pre JDK 1.4)" />
    <antcall target="jacorb-javac" >
      <param name="javac-includes"
             value="org/jacorb/notification/util/PatternWrapper.java,
                    org/jacorb/notification/util/GNUPatternWrapper.java" />
    </antcall>
  </target>


  <target name="notification.compile.regexp.jdk" if="available.regexp.jdk">
    <echo message="Compiling for java.util.regexp (JDK 1.4+)" />
    <antcall target="jacorb-javac">
      <param name="javac-includes"
             value="org/jacorb/notification/util/PatternWrapper.java,
                    org/jacorb/notification/util/JDK14PatternWrapper.java"/>
    </antcall>
  </target>

  
  <target name="notification.compile.regexp.jakarta-regexp"
    if="available.regexp.jakarta-regexp" >
    
    <echo message="Compiling for org.apache.regexp (Jakarta Regexp)" />
    <antcall target="jacorb-javac" >
      <param name="javac-includes"
	value="org/jacorb/notification/util/PatternWrapper.java,
	       org/jacorb/notification/util/JakartaRegexpPatternWrapper.java" />
    </antcall>
  </target>


  <!-- clean -->
  <target name="clean"
    depends="init, clean.classes"
    description="Cleans the notification">
  </target>


  <target name="realclean" depends="clean, clean.antlr" />


  <target name="clean.classes">
    <delete>
      <fileset dir="${classdir}"
         includes="org/jacorb/notification/**/*.*" />
    </delete>
  </target>


  <target name="clean.antlr">
    <delete>
      <fileset dir="${src}/generated"
        includes="org/jacorb/notification/**/*.*" />
    </delete>
  </target>

</project>
