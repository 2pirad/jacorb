<?xml version="1.0"?>

<!DOCTYPE project [ 
  <!ENTITY common SYSTEM                 "file:../../../../common.xml"> 
]>

<project name="notification" default="notification.all" basedir="../../../..">

<!-- ============================================================ -->
<!--              JacORB - NotificationService build file         -->
<!-- $Id: build.xml,v 1.2 2003-01-14 11:46:07 alphonse.bendt Exp $ -->
<!-- ============================================================ -->

  &common;

  <target name="notification.init" depends="init">
    <property name="notification.base" value="${basedir}/src/org/jacorb/notification" />

    <loadproperties srcFile="${notification.base}/notification_build.properties"/>

    <path id="notification.classpath">
      <pathelement location="${basedir}/classes" />
      <pathelement location="${antlr.home}/antlr.jar" />
      <pathelement location="${concurrent.home}/classes" />
      <pathelement location="${junit.home}/junit.jar" />
      <pathelement location="${log4j.home}/dist/lib/log4j-${log4j.version}.jar" />
    </path>

    <property name="grammar.dir" value="${notification.base}/grammar" />
    <property name="antlr.target.package" value="org/jacorb/notification/node" />
    <property name="compile.option.debug" value="true"/>

    <taskdef
      name="jacidl"
      classname="org.jacorb.idl.JacIDL"
      classpathref="notification.classpath" />

    <mkdir dir="${src}/generated/${antlr.target.package}" />
  </target>

  <target name="notification.all" depends="notification.init, antlr, tcl, server ">
  </target>

  <target name="antlr" depends="antlr.depend, antlr.generate, antlr.compile" />

  <target name="antlr.depend" depends="notification.init">
    <uptodate property = "antlr.generate.notRequired"
              srcfile  = "${grammar.dir}/tcl.g"
            targetfile = "${src}/generated/${antlr.target.package}/TCLParser.java" />
  </target>

  <target name="antlr.generate" depends="notification.init, antlr.depend" unless="antlr.generate.notRequired">
      <antcall target="antlr.force.generate" />
  </target>

  <target name="antlr.force.generate" depends="notification.init" >
    <delete>
    <fileset dir="${src}/generated/${antlr.target.package}" includes="*.java, *.txt" />
    </delete>

      <java classname="antlr.Tool" fork="yes" failonerror="yes" classpathref="notification.classpath">
      <arg line="-o ${src}/generated/${antlr.target.package} ${grammar.dir}/tcl.g" />
      </java>

	<!-- 

	<antlr
	outputdirectory="${src}/generated/${antlr.target.package}"
	target="${grammar.dir}/tcl.g" /> 
        -->
  </target>

  <target name="antlr.compile" depends="notification.init, notification.idl, antlr.generate">
    <javac debug="${compile.option.debug}"
      destdir="${classdir}"
      source="1.3"
      target="1.3"
      classpathref="notification.classpath">
      <src path="${src}" />
      <src path="${src}/generated" />
      <include name="org/jacorb/notification/node/**" />
    </javac>
  </target>

  <target name="tcl" depends="antlr, tcl.compile" />

  <target name="tcl.compile" depends="notification.init">
    <javac debug="${compile.option.debug}"
      destdir="${classdir}"
      source="1.3"
      target="1.3"
      classpathref="notification.classpath" >
      <src path="${src}" />	
      <include name="org/jacorb/notification/evaluate/**" />
    </javac>
  </target>

  <target name="server" depends="notification.init, server.compile" />

  <target name="server.compile" 

          depends="notification.init,
	           notification.idl, 
                   server.regexp.test,
                   server.compile.regexp.gnu, 
                   server.compile.regexp.jdk" >

    <javac debug="${compile.option.debug}" srcdir="${src}"
           source="1.3"
           target="1.3"
           destdir="${classdir}"

           includes="org/jacorb/notification/**.java, 
                     org/jacorb/notification/util/**.java,
                     org/jacorb/notification/engine/**.java,
	             org/jacorb/notification/evaluate/**.java"

           excludes="org/jacorb/notification/util/GNUPatternWrapper.java, 
                     org/jacorb/notification/util/JDK14PatternWrapper.java"

      classpathref="notification.classpath" />
  </target>

  <target name="server.regexp.test">
    <available classname="java.util.regex.Pattern"
                property="jdk_regexp.available" />

    <available classname="gnu.regexp.RE"
                property="gnu_regexp.available" />
  </target>

  <target name="server.compile.regexp.gnu" if="gnu_regexp.available">
    <javac debug="${compile.option.debug}" 
          srcdir="${src}"
          source="1.3"
          target="1.3"
          destdir="${classdir}"
          includes="org/jacorb/notification/util/PatternWrapper.java, 
                    org/jacorb/notification/util/GNUPatternWrapper.java"
          classpathref="notification.classpath" />
  </target>

  <target name="server.compile.regexp.jdk" if="jdk_regexp.available">
    <javac debug="${compile.option.debug}" 
      srcdir="${src}"
      source="1.3"
      target="1.3"
      destdir="${classdir}"
      includes="org/jacorb/notification/util/PatternWrapper.java, 
                org/jacorb/notification/util/JDK14PatternWrapper.java"
      classpathref="notification.classpath" />
  </target>

  <target name="notification.idl" depends="notification.init, cos_notification.depend, cos_notification.compile" />

  <target name="cos_notification.depend" depends="notification.init">
    <condition property="cos_notification.generate.notRequired">
      <and>
	<available classpathref="notification.classpath" classname="org.omg.CosNotification.StructuredEvent" />
	<available classpathref="notification.classpath" classname="org.omg.CosNotification.Property" />
      </and>
    </condition>
  </target>

  <target  name = "cos_notification.compile" 
        depends = "notification.init, cos_notification.generate" 
         unless = "cos_notification.generate.notRequired">

	      <javac debug="${compile.option.debug}" srcdir="${src}/generated"
		includes="org/omg/CosEvent*/**.java,org/omg/CosNotif*/**.java"
		destdir="${classdir}" />
  </target>

  <target name = "cos_notification.generate" 
       depends = "notification.init"
        unless = "cos_notification.generate.notRequired" >
    
	      <jacidl generateir="true"
		srcdir="${idl}/omg"
		packageprefix="org.omg"
		destdir="${src}/generated"
		includepath="${idl}/omg"
		includes="CosNotif*.idl, CosEvent*.idl" />
  </target>

  <target name="clean" depends="notification.init">
    <delete>
      <fileset dir="${src}/generated"
	  includes="org/jacorb/notification/**/*.*" />
    </delete>

    <delete>
      <fileset dir="${classdir}"
	includes="org/jacorb/notification/**/*.*" />
    </delete>

  </target>
</project>
