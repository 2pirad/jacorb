2002-05-01  Vladimir Mencl <vladimir.mencl@mff.cuni.cz>
	* TransactionService:
	  * ServerContextTransferInterceptor sets (and resets) the
	    transaction context for the thread handling a request
	  * TransactionCurrentImpl: suspend() and resume() implemented
	    (and used by ServerContextTransferInterceptor for handling
	    the transaction context)
	  * merged org.jacorb.transaction.ClientInitializer
	    and org.jacorb.transaction.ServerInitializer into
	    org.jacorb.transaction.TransactionInitializer
	  * bug-fix: Timer.java: check for a null reference in kill_channel
	* demo/bank/transaction/implicit: adjusted to the changes made
	  in the TransactionService

2002-04-02  Heather Drury  <drury_h@ociweb.com>

	* orb/CDROutputStream.java:
	Backed out change to add is_recursive() checks within write_TypeCode() as 
	fix had already been made and this fix does not conform to the CORBA spec.

2002-04-01  Heather Drury  <drury_h@ociweb.com>

	* orb/CDROutputStream.java:
	Added checks to is_recursive() within write_TypeCode() method for value, 
	alias, value_box, abstract_interface, union, enum, and except types. 
	Fixed a bug where "No recursive TC" exception was erroneously being thrown.

2002-03-18  Andre Spiegel  <spiegel@gnu.org>

	Patch by Francisco Reverbel <reverbel@ime.usp.br>

	* orb/CDRInputStream.java:
	(read_untyped_value): In the RMI case, use the context class
	loader of the current thread if possible.

2002-03-18  Jason Courage

	* idl/sym.java, idl/parser.cup, idl/parser.java: Changes to
	version and static strings.

	* idl/parser.java, orb/ORB.java: Minor change to static strings
	for version output.

2002-03-15  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/connection/Server_TCP_IP_Transport.java:
	(c'tor) switch on TcpNoDelay socket option. Note: only change this
	option in conjunction with also changing the option in
	Client_TCP_IP_Transport.java

2002-03-13  Steve Osselton  <steve@prismtechnologies.com>

	* idl/parser.java, orb/ORB.java: Version update

	* orb/ParsedIOR.java: Update to use reflection for JDNI support

2002-03-13  Nick Cross

	* build.xml, orb/build.xml: Fix for #87

2002-03-12  Steve Osselton  <steve@prismtechnologies.com>

	* orb/CDROutputStream.java:
	Back out for byte array handling optimisation

	* idl/Interface.java, idl/InterfaceBody.java, idl/Method.java,
	idl/OpDecl.java, idl/Operation.java: Fix for bug #141

2002-03-12  Jason Courage

	* trading/client/build.xml, trading/db/build.xml,
	transaction/build.xml, util/tracing/build.xml,
	orb/standardInterceptors/build.xml, poa/build.xml,
	security/build.xml, security/ssl/iaik/build.xml,
	security/ssl/sun_jsse/build.xml, trading/build.xml,
	naming/build.xml, orb/build.xml, orb/dns/build.xml,
	orb/domain/build.xml, orb/portableInterceptor/build.xml,
	collection/build.xml, concurrency/build.xml, events/build.xml,
	idl/build.xml, imr/build.xml, ir/build.xml, build.xml: Added
	debugging functionality.

2002-03-11  Steve Osselton  <steve@prismtechnologies.com>

	* poa/AOM.java: Fix for bug #131

	* poa/Current.java, poa/InvocationContext.java: Update for bug #138

2002-03-11  Jason Courage

	* orb/Any.java: Added typecode checking to
	insert_fixed (BigDecimal, TypeCode) operation; changed Java
	runtime exceptions to CORBA system exceptions.

2002-03-08  Steve Osselton  <steve@prismtechnologies.com>

	* idl/FixedPointType.java: Fix for bug #137

2002-03-08  Jason Courage

	* orb/Any.java: In fixed case of read_value method, the fixed
	value is read from the stream, the decimal is inserted into it,
	and it is inserted into the Any using the
	insert_fixed (BigDecimal, TypeCode) method.

2002-03-08  Steve Osselton  <steve@prismtechnologies.com>

	* orb/Any.java: Fix for bug #134. wchar now handled in read/write
	operations

2002-03-07  Andre Spiegel  <spiegel@gnu.org>

	Patch by Francisco Reverbel <reverbel@ime.usp.br>
	
	* poa/POA.java (isSystemId): Made it public.

	* orb/ORB.java (findPOA): Return null for systemIds.

	* orb/TypeCode.java:
	(create_tc, getValueMembers, createValueMember): Change argument
	`knownClasses' into a map from classes to type codes, rename it to
	`knownTypes'.  Use this to call setActualTC() on recursive type
	codes.

	* orb/CDROutputStream.java:
	(orb): New method.
	(write_TypeCode): Fix writing of tk_abstract_interface.

2002-03-07  Jason Courage

	* orb/TypeCode.java, orb/ORBSingleton.java:
	Implemented create_local_interface_tc operation.

2002-03-06  Jason Courage

	* orb/CDRInputStream.java, orb/CDROutputStream.java: Replaced Java
	runtime and assertion exceptions with CORBA System Exceptions.

2002-03-06  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/connection/Server_TCP_IP_Transport.java:
	(c'tor) wrap socket streams in buffered streams

	* orb/connection/Client_TCP_IP_Transport.java:
	(connect) wrap socket streams in buffered streams

2002-03-06  Jason Courage

	* orb/ORBSingleton.java: Added checks to some typecode creation
	methods to check validity of content typecodes; small aesthetic
	improvements.

2002-03-05  Jason Courage

	* orb/domain/build.xml, build.xml, util/tracing/build.xml,
	imr/build.xml, events/build.xml: Modified classpath property to
	put JacORB classes directory at front of classpath.

2002-03-05  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/Any.java, orb/ORBSingleton.java: *** empty log message ***

	* orb/CDROutputStream.java:
	(write_octet_array) revamped to defer buffer copies
	(write) new method that finally writes the entire buffer contents
	(including all deferred buffer writes) to an output stream

	* orb/connection/Transport.java: renamed methods
	addMessageFragment() and sendMessages() to write() and flush()

	* orb/connection/MessageOutputStream.java:
	(write_to) use new write() interface instead of
	addMessageFragment()

	* orb/connection/ServiceContextTransportingOutputStream.java: use
	new write() methods

	* orb/connection/GIOPConnection.java: made class final and let it
	extend java.io.OutputStream, renamed addMessageFragment to write()

	* orb/connection/TCP_IP_Transport.java:
	(write, flush) renamed to fit general OutputStream method names

2002-03-04  Nicolas Noffke  <Nicolas.Noffke@epost.de>

	* orb/ParsedIOR.java, orb/util/CorbaLoc.java: added support for
	the new "ssliop" protocol for corbaloc to be able to use corbaloc
	together with ssl

2002-03-04  Steve Osselton  <steve@prismtechnologies.com>

	* idl/Interface.java, idl/SequenceType.java, idl/StructType.java,
	idl/UnionType.java, idl/ValueBoxDecl.java, idl/AliasTypeSpec.java,
	idl/ArrayTypeSpec.java, idl/EnumType.java,
	idl/FixedPointType.java: Update for bug #124

2002-03-01  Jason Courage

	* orb/TypeCode.java: Changed assertion to BAD_PARAM exception.

	* orb/Any.java, orb/CDRInputStream.java, orb/CDROutputStream.java:
	Modified read_value and write_value methods to work on org.omg.CORBA InputStreams/OutputStreams instead of JacORB-specific streams. (bug 82)

	* orb/CDRInputStream.java: Fixed bug in creation of sequence
	TypeCode where sequence length is hardcoded to 0.

2002-03-01  Steve Osselton  <steve@prismtechnologies.com>

	* orb/CDROutputStream.java, orb/CDRInputStream.java:
	Optimisiation via additional inlining and use of final parameters

	* idl/TypeSpec.java, idl/UnionType.java, idl/ValueBoxDecl.java,
	idl/ValueDecl.java, idl/ArrayTypeSpec.java, idl/EnumType.java,
	idl/FixedPointType.java, idl/Interface.java,
	idl/SequenceType.java, idl/StructType.java,
	idl/AliasTypeSpec.java: Update to generate final classes and
	parameters

2002-02-28  Jason Courage

	* orb/TypeCode.java: Implemented create_abstract_interface_tc and
	create_native_tc operations and fixed numerous bugs.

	* orb/ORBSingleton.java: Implemented create_native_tc operation.

2002-02-28  Steve Osselton  <steve@prismtechnologies.com>

	* idl/ConstDecl.java: Fix for bug #112

2002-02-28  Nicolas Noffke  <Nicolas.Noffke@epost.de>

	* security/ssl/sun_jsse/SSLServerSocketFactory.java.patch,
	security/ssl/sun_jsse/SSLSocketFactory.java.patch: adapted to new
	revision

2002-02-27  Nick Cross

	* idl/lexer.java, idl/Literal.java:
	Add octal, hex and unicode escape character support

2002-02-26  Steve Osselton  <steve@prismtechnologies.com>

	* orb/Any.java: Fix for bug #109. wchar equality not implemented

	* idl/sym.java, idl/ConstDecl.java, idl/EnumType.java, idl/parser.java:
	Fix for bug #102

	* idl/ConstDecl.java: Fix for bug #107

	* idl/sym.java, idl/parser.java, idl/parser.cup:
	Diagnostic stack trace dump removed

	* idl/build.xml: Debug enable removed - oops

	* idl/sym.java, idl/parser.cup, idl/parser.java,
	idl/ConstDecl.java, idl/ConstType.java, idl/Member.java,
	idl/build.xml, idl/lexer.java: Fixes for bug# 89

2002-02-26  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/CDROutputStream.java: (write_char_array) inlined

2002-02-25  Nicolas Noffke  <Nicolas.Noffke@epost.de>

	* security/ssl/sun_jsse/SSLSocketFactory.java,
	security/ssl/sun_jsse/SSLServerSocketFactory.java: added cipher
	suite selection patch

	* security/ssl/build.xml: replaced test class of property jsse.present

	* security/build.xml: removed unnecessary property

	* imr/ImplementationRepositoryImpl.java:
	fixed unnecessary but caught NullPointerException

	* imr/ImRAccessImpl.java: *** empty log message ***

	* orb/CDRInputStream.java, orb/CDROutputStream.java: adapted to
	agreed-upon handling of wstrings (removed length indicator) (Bug
	86)

2002-02-25  Jason Courage

	* orb/CDRInputStream.java, orb/CDROutputStream.java: Fixed
	calculation of indirection pointer for recursive and repeated
	TypeCodes.

2002-02-25  Nicolas Noffke  <Nicolas.Noffke@epost.de>

	* orb/ImRAccess.java, orb/ORB.java: added interface and mechanism
	to fully separate the imr package from the orb

2002-02-25  Steve Osselton  <steve@prismtechnologies.com>

	* idl/AliasTypeSpec.java:
	Fix for bug #101. Aliased any now uses generic AnyHolder

2002-02-21  Nick Cross

	* build.xml, orb/build.xml, util/build.xml: Clean mods

	* idl/Literal.java, idl/PrimaryExpr.java, idl/lexer.java:
	Fix for bug #59

2002-02-20  Jason Courage

	* orb/TypeCode.java: Added comments to recursion operations and
	added new resolveRecursion operation to be called from outside
	TypeCode class to give a single point of entry to resolving
	recursion.

	* orb/ORBSingleton.java: Changed method signature for
	resolveRecursion operation called from create_union_tc and
	create_struct_tc.

2002-02-20  Steve Osselton  <steve@prismtechnologies.com>

	* orb/ORBSingleton.java, orb/ORB.java:
	Fix for bug #92. ORB create_operation_list operation implemented

2002-02-20  Jason Courage

	* orb/TypeCode.java: Fixed bug in code that resolves recursion.

	* orb/Any.java: Improved code in insert_Object method.

	* orb/ORBSingleton.java: Cosmetic changes to diagnostics.

2002-02-19  Jason Courage

	* orb/Any.java: Fixed insert_Object operation to set the IDL
	identifier name.

2002-02-19  Steve Osselton  <steve@prismtechnologies.com>

	* orb/Delegate.java, orb/ParsedIOR.java: Fix for bug #95

2002-02-19  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/NameTable.java: (getGlobalTypes) fixed a bracketing error

2002-02-19  Steve Osselton  <steve@prismtechnologies.com>

	* idl/UnionType.java: Fix for bug #97

	* idl/ArrayTypeSpec.java, idl/IdlSymbol.java, idl/Member.java,
	idl/UnionType.java, idl/AliasTypeSpec.java: Update for bugs #63
	and #94

	* idl/Declarator.java, idl/LongType.java: Blank lines remmoved

2002-02-18  Steve Osselton  <steve@prismtechnologies.com>

	* idl/ObjectTypeSpec.java: Fix for bug #96. Correct type code now
	generated

2002-02-18  Jason Courage

	* orb/CDRInputStream.java: Added code to 0xffffffff case of
	read_TypeCode operation to correctly handle repeated and recursive
	typecodes read from a stream.

	* orb/TypeCode.java: Added code to ensure that a recursive
	typecode is handled like a normal typecode by TypeCode API, and
	added code to resolve recursion in unions and structs.

2002-02-18  Steve Osselton  <steve@prismtechnologies.com>

	* orb/ORBSingleton.java: Diagnostics update

2002-02-18  Jason Courage

	* orb/ORBSingleton.java: Added calls to resolve recursion in
	create_union_tc and create_struct_tc operations.

	* orb/ORBSingleton.java:
	Fixed discriminator type check to handle aliased discriminators.

	* orb/ORBSingleton.java: Fixed check for TC member type to allow
	for recursive types and fixed checks in create_union_tc
	operation (bug 93).

2002-02-14  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/UnionType.java:
	(writeHelperClass) correctly generate code for method type() (was:
	bug when resolvin typedef'd const values)

	* orb/ORBSingleton.java:
	(checkTCRepositorId) fixed wrong condition check

2002-02-14  Steve Osselton  <steve@prismtechnologies.com>

	* naming/Name.java: Fix for bug #50. Escaped name handling update

	* orb/ORB.java, orb/ORBSingleton.java:
	Fix for bug #91. DII operations now not allowed on singleton ORB

2002-02-14  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/ORBSingleton.java:
	(tc_create) methods: added checking for invalid arguments

2002-02-14  Steve Osselton  <steve@prismtechnologies.com>

	* orb/connection/Client_TCP_IP_Transport.java:
	Bug #81 fix reversion. See bug tracker logs

	* idl/OpDecl.java: Fix for bugs #64 and #66. Fix for wchar and
	wstring inout parameter handling in helper

2002-02-13  Steve Osselton  <steve@prismtechnologies.com>

	* orb/ParsedIOR.java, orb/ORB.java: Updates WRT bug #79. Ensure
	null returned from ObjectUtil.readURL operation handled correctly

	* orb/dii/Request.java: Fix for bug #83. User exceptions now
	encapsulated within environment

2002-02-13  Jason Courage

	* orb/CDRInputStream.java: Fix for repeated TypeCodes in a
	constructed type in an Any: in the 0xffffffff case of the
	read_TypeCode method the TypeCode is obtained from the
	recursiveTCMap rather than created from the
	ORB::create_recursive_tc method.

2002-02-13  Steve Osselton  <steve@prismtechnologies.com>

	* idl/UnionType.java: Fix for bug #61. Valid code now generated
	for unions with long long discriminators

2002-02-12  Steve Osselton  <steve@prismtechnologies.com>

	* orb/factory/PortRangeSocketFactory.java,
	orb/factory/SocketFactoryManager.java,
	orb/connection/ConnectionManager.java,
	orb/factory/DefaultServerSocketFactory.java,
	orb/factory/DefaultSocketFactory.java, orb/BasicAdapter.java:
	Updates based upon EHR #57 to support configurable socket
	factoriesD

	* orb/connection/Client_TCP_IP_Transport.java:
	Update to fix for bug #81

2002-02-11  Steve Osselton  <steve@prismtechnologies.com>

	* orb/connection/Client_TCP_IP_Transport.java:
	Update to fix for bug #81 ts use reflection

2002-02-08  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/sym.java, idl/TypeMap.java, idl/UnionType.java,
	idl/parser.cup, idl/parser.java, idl/ElementSpec.java,
	idl/EnumType.java, idl/Environment.java, idl/IdlSymbol.java,
	idl/StructType.java: misc cosmetics

	* idl/Case.java:
	(parse) changed generatio of scoped name for enum labels

2002-02-08  Steve Osselton  <steve@prismtechnologies.com>

	* orb/connection/Client_TCP_IP_Transport.java: Patch for bug #81 added

2002-02-08  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/SwitchBody.java:
	(parse) fixed another NPE when running into the default label

2002-02-07  Steve Osselton  <steve@prismtechnologies.com>

	* idl/UnionType.java, idl/CharType.java, idl/EnumType.java,
	idl/IntType.java, idl/ScopedName.java, idl/SwitchTypeSpec.java,
	idl/TypeSpec.java, idl/BooleanType.java, idl/BaseType.java: Fix
	for bug #60 - invalid wchar discriminators not detected

2002-02-07  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/sym.java, idl/parser.java: *** empty log message ***

	* idl/SwitchBody.java: (parse) fixed null pointer error

	* idl/sym.java, idl/parser.cup, idl/parser.java:
	*** empty log message ***

	* idl/UnionType.java:
	updated to reflext name changes (renamed v in SwitchBody to
	caseListVector)

	* idl/SymbolList.java: cosmetics

	* idl/lexer.java:
	error reporting routines: fixed wrong increments of error numbers

	* idl/XorExpr.java, idl/AndExpr.java, idl/ConstExpr.java,
	idl/MultExpr.java, idl/OrExpr.java, idl/PrimaryExpr.java,
	idl/ShiftExpr.java, idl/UnaryExpr.java, idl/AddExpr.java: added
	set_token() to delegate toke setting such that error messages will
	eventually report the correct source code line

	* idl/SwitchBody.java: (parse) now checks for duplicate case labels

	* idl/Case.java:
	(get Labels()) added to allow SwitchBody to get at the labels for
	stricter type checking

2002-02-04  Steve Osselton  <steve@prismtechnologies.com>

	* idl/AliasTypeSpec.java: Fix for bug #76

	* idl/UnionType.java: Fix for bug #75

2002-01-31  Nicolas Noffke  <Nicolas.Noffke@epost.de>

	* collection/util/ArrayFactory.java, collection/util/Cach.java,
	collection/util/SortedVector.java: removed "};" to avoid confusing
	some compilers

2002-01-25  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/JacIDL.java: *** empty log message ***

2002-01-23  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/Delegate.java:
	(servant_preinvoke) changed condition so that servant managers are
	also possible with RETAIN POAs

2002-01-22  Nicolas Noffke  <Nicolas.Noffke@epost.de>

	* orb/CDROutputStream.java: (check(int,int)) fixed stupidity :-) bug

2002-01-21  Jason Courage

	* orb/dynany/DynUnion.java: Correctly initialise the current
	position in the set_to_no_active_member and set_discriminator
	operations.

	* orb/dynany/DynUnion.java: Never set default discriminator value
	to zero octet; when looking for char value not used in union,
	search begins at char with int value of zero; value of default
	member does not change if discriminator is set to a new value that
	still corresponds to the default member.

2002-01-18  Nicolas Noffke  <Nicolas.Noffke@epost.de>

	* security/level2/CurrentImpl.java:
	the current is now able to run without a principal authenticator. this is
	necessary for ssl with sun jsse, so access to the peers certificates is
	possible.

	* orb/CDROutputStream.java:
	(check(int,int)) inserted code that will zero out padding bytes so
	there isn't any garbage in it anymore. This is necessary for ior
	stringification so the same iors will always produce the same strings

	* orb/BufferManager.java:
	(getBuffer) removed the Arrays.fill() - this is now done in the stream
	(whole) replaced the usage of Vectors by Stacks - especially the call
	to removeElementAt( 0 ) which is pretty inefficient to get an
	arbitrary entry

	* orb/ParsedIOR.java:
	(getIORString) - replaced "hexifying" the ior buffer by a simpler and
	faster way (using a lookup table instead of computing the char)

2002-01-17  Jason Courage

	* orb/dynany/DynAny.java: Added null and void typecodes to list of
	valid typecodes for creating a DynAny.

2002-01-11  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/BufferManager.java:
	(getBuffer) clear buffers before returning them

	* orb/connection/ServerRequestListener.java: *** empty log message ***

	* orb/Delegate.java:
	(toString) call piorOriginal.getIORString() instead of accessing a
	(now private) field

	* orb/ParsedIOR.java: made field ior_str private

	* security/ssl/iaik/SSLServerSocketFactory.java:
	(switchToClientMode) added Debug output

	* orb/BasicAdapter.java: (Listener.run) added SSL role switch

	* orb/portableInterceptor/ServerRequestInfoImpl.java: cosmetics

	* orb/CDROutputStream.java: *** empty log message ***

	* orb/Any.java: whitespace :-)

	* orb/dsi/ServerRequest.java:
	(result) fixed funneling raw byte arrays into the any

	* orb/connection/ServiceContextTransportingOutputStream.java:
	(getBody) new method to get at the contents of the message

	* ir/gui/typesystem/remote/RemoteTypeSystem.java,
	ir/StringDef.java, ir/StructDef.java, ir/TypeCodeUtil.java,
	ir/WstringDef.java, ir/gui/IRBrowser.java,
	ir/gui/typesystem/remote/IRWstring.java, ir/ConstantDef.java,
	ir/IDLType.java, ir/IRWstring.java, ir/IdlWriter.java,
	security/level2/PrincipalAuthenticatorImpl.java,
	security/level2/CurrentImpl.java, orb/ORB.java, orb/TypeCode.java,
	orb/ParsedIOR.java: *** empty log message ***

2002-01-09  Andre Spiegel  <spiegel@gnu.org>

	* idl/OpDecl.java (printInvocation): Fix the case when the
	argument of a writeStatement is itself generated.

	* idl/ValueDecl.java (printHolder, printHelper): Delegate all
	read/write methods to the streams.

2002-01-07  Steve Osselton  <steve@prismtechnologies.com>

	* orb/ParsedIOR.java: Updates for bug report #52

2002-01-04  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/ParamDecl.java:
	(printWriteStatement, printReadExpression) convenience methods
	added

	* idl/OpDecl.java:
	(printMethod, printInvocation) fixed generated read/write
	statements to address wstring problems in bug #54

2002-01-04  Steve Osselton  <steve@prismtechnologies.com>

	* orb/ParsedIOR.java: Fix for bug #53

2001-12-21  Nicolas Noffke  <Nicolas.Noffke@epost.de>

	* orb/ORB.java:
	(set_parameters) fixed bug 39: now supporting args of form
	-ORBInitRef <name>=value (whitespace instead of dot)

2001-12-21  Steve Osselton  <steve@prismtechnologies.com>

	* orb/Any.java: Basic type extraction fix when using
	CDROutputStream as internal representation

2001-12-21  Nicolas Noffke  <Nicolas.Noffke@epost.de>

	* security/ssl/sun_jsse/README.jsse1_0_2,
	security/ssl/sun_jsse/ServerInvocationInterceptor.java.patch,
	security/ssl/sun_jsse/build.xml,
	security/ssl/sun_jsse/SSLServerSocketFactory.java.patch,
	security/ssl/sun_jsse/SSLSocketFactory.java.patch: integrated
	patch by Stefan Feder for accessing the peers certs with JSSE
	1.0.2

	* orb/portableInterceptor/ServerInterceptorIterator.java,
	orb/Delegate.java,
	orb/portableInterceptor/ClientInterceptorIterator.java: adapted to
	changes in PortableInterceptor IDL (removed permanent flag of
	ForwardRequest exception)

	* orb/portableInterceptor/ClientRequestInfoImpl.java:
	(forward_reference()) fixed double negation where this op throws a
	BAD_INV_ORDER when it actually shouldn't (BUG 51)

2001-12-20  Steve Osselton  <steve@prismtechnologies.com>

	* orb/Principal.java, orb/Current.java, orb/ORB.java,
	orb/CDRInputStream.java, orb/CDROutputStream.java: Current and
	Principal deprecated

	* orb/Any.java: Bug fixes for #48 and #49

2001-12-17  Steve Osselton  <steve@prismtechnologies.com>

	* poa/POA.java: Fix for bug #37: Missing the_children attribute
	implementation added

	* poa/POA.java: Fix for bug #36: create_reference operations no
	longer cache created reference

2001-12-17  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/TypeDeclaration.java: *** empty log message ***

	* idl/MemberList.java: cosmetics

	* orb/util/PrintIOR.java:
	added a number of print methods for various tagged components

	* idl/ValueDecl.java:
	(setEnclosingSymbol) set this as the enclosing symbol in delegated
	calls

	* idl/StructType.java:
	(setEnclosingSymbol) set this as the enclosingSymbol for delegates

	* idl/Environment.java: cosmetics

2001-12-14  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/Member.java, idl/StructType.java, idl/ValueDecl.java:
	(parse) propagate setEnclosingSymbol to members

2001-12-14  Andre Spiegel  <spiegel@gnu.org>

	* orb/ORBSingleton.java:
	Patch by Francisco Reverbel <reverbel@ime.usp.br>.
	(create_interface_tc): Adapt to new TypeCode constructor.
	(create_abstract_interface_tc): Implemented.

	* orb/ORB.java: Patch by Francisco Reverbel <reverbel@ime.usp.br>.
	(createIOR): Package access.  New parameter policy_overrides.

	* orb/Delegate.java: Patch by Francisco Reverbel <reverbel@ime.usp.br>.
	Extend CORBA_2_3 Delegate.
	(policy_overrides): New field.
	(set_policy_override, get_codebase): Implemented.

	* orb/CDROutputStream.java:
	Patch by Francisco Reverbel <reverbel@ime.usp.br>, adapted AS.
	(codebaseMap): New field.
	(write_TypeCode): Be prepared for non-JacORB TypeCodes.  Handle
	tk_abstract_interface.
	(write_codebase, write_value_header): New method.
	(write_value): Use them.
	(write_abstract_interface): Implemented.

	* orb/CDRInputStream.java:
	Patch by Francisco Reverbel <reverbel@ime.usp.br> (adapted AS.)
	(codebaseMap): New field.
	(read_Object(Class)): Implement for javax.rmi.Remote.
	(read_TypeCode): Handle tk_abstract_interface.
	(read_value): Handle codebases in all variants.
	(read_untyped_value): Add `codebase' parameter.
	(read_special_value): Removed.
	(read_codebase, read_indirect_value): New method.
	(read_abstract_interface): Implemented.

	* orb/Any.java: Patch by Francisco Reverbel <reverbel@ime.usp.br>.
	(read_value, write_value): Handle abstract interfaces.

	* orb/portableInterceptor/IORInfoImpl.java:
	Patch by Francisco Reverbel <reverbel@ime.usp.br>.
	(policy_overrides): New field.
	(IORInfoImpl): New parameter for it.
	(get_effective_policy): Handle overridden policies.

	* orb/util/PrintIOR.java:
	Patch by Francisco Reverbel <reverbel@ime.usp.br>.
	(printIOR): Handle codebases.

	* ir/TypeCodeUtil.java (static initializer):
	Adapt to new constructor for TypeCode tk_objref.

	* util/Environment.java (getORBInitializers):
	Don't use Class.forName().

	* util/ValueHandler.real, util/ValueHandler.dummy (loadClass,
	getCodebase, portableRemoteObject_narrow): New methods.

	* orb/ParsedIOR.java:
	Patch by Francisco Reverbel <reverbel@ime.usp.br>.
	(getCodebaseComponent): New method.

	* orb/TypeCode.java (TypeCode [tk_value]): Handle null member list.
	(TypeCode): Change parameters of constructor for tk_objref; also use it
	for tk_abstract_interface.

	* orb/TypeCode.java (TypeCode [tk_value]): Handle null member list.

	* util/Environment.java (getORBInitializers):
	Don't use Class.forName().

	* orb/util/PrintIOR.java (printIOR): Handle codebases.

	* orb/portableInterceptor/IORInfoImpl.java (policy_overrides):
	New field.
	(IORInfoImpl): New parameter for it.
	(get_effective_policy): Handle overridden policies.

	* orb/TypeCode.java (TypeCode):
	Change parameters of constructor for tk_objref; also use it
	for tk_abstract_interface.

	* orb/ParsedIOR.java (getCodebaseComponent): New method.

2001-12-14  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* ir/gui/typesystem/ModelParticipant.java: cosmetics

	* ir/IRWstring.java: *** empty log message ***

2001-12-13  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/OpDecl.java, idl/RaisesExpr.java, idl/SequenceType.java,
	idl/SwitchBody.java, idl/UnionType.java, idl/AliasTypeSpec.java,
	idl/AttrDecl.java, idl/BaseType.java, idl/ElementSpec.java,
	idl/IdlSymbol.java, idl/Member.java: fixed broken import
	statements for simply types

2001-12-11  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/ParsedIOR.java:
	(init) added two other cases in which clients use SSL, viz. if the
	target's SSL profile required integrity/confidentiality

2001-12-11  Steve Osselton  <steve@prismtechnologies.com>

	* imr/ImplementationRepositoryImpl.java: Fix for bug #41 - imr not
	starting when jacorb.use_imr property is enabled

2001-12-07  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/parser.java, idl/sym.java, idl/StructType.java,
	idl/SwitchBody.java, idl/UnionType.java, idl/lexer.java,
	idl/parser.cup, idl/Interface.java, idl/Member.java,
	idl/MemberList.java, idl/OpDecl.java, idl/RaisesExpr.java,
	idl/SequenceType.java, idl/AliasTypeSpec.java, idl/AttrDecl.java,
	idl/Declaration.java, idl/Definition.java, idl/ElementSpec.java,
	idl/IdlSymbol.java: added code to generate import statements for
	type names in the unnamed package.

2001-12-07  Jason Courage

	* orb/dynany/DynAny.java: Set the default value of a DynAny
	containing an object reference.

2001-12-07  Steve Osselton  <steve@prismtechnologies.com>

	* util/Environment.java: Update to allow log file to be based upon
	implementation name

2001-12-07  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/CDROutputStream.java:
	(write_TypeCode) added missing table entries for
	recursive/repeated TCs

	* orb/CDRInputStream.java:
	(read_TypeCode) added missing table entries for recursive/repeated
	TCs

2001-12-06  Steve Osselton  <steve@prismtechnologies.com>

	* orb/TypeCode.java: Null pointer fix for static initialization of
	_tk_value TypeCode

2001-11-30  Andre Spiegel  <spiegel@gnu.org>

	* orb/TypeCode.java (primitive_tcs): Add another bogus TypeCode
	object for kind _tk_value, to pacify Sun's ValueHandler.

2001-11-30  Jason Courage

	* orb/dynany/DynUnion.java: Fixed initialization of current
	position; fixed iteration operations; fixed implementation of
	set_to_no_active_member operation.

2001-11-29  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* security/build.xml: fixed error in principal_authenticator target

2001-11-28  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* build.xml: *** empty log message ***

	* orb/dynany/DynStruct.java: added new instance variable
	exception_msg for exceptions

	(c'tor, from_any, to_any) for exceptions, read and write exception_msg

2001-11-27  Jason Courage

	* orb/dynany/DynStruct.java: Fixed exception handling in
	current_member_name/kind and set_members operations.

	* orb/dynany/DynArray.java, orb/dynany/DynEnum.java,
	orb/dynany/DynSequence.java, orb/dynany/DynUnion.java,
	orb/dynany/DynAny.java: Added code to test if the dynany has been
	destroyed.

	* orb/dynany/DynStruct.java: Added code to test if the dynany has
	been destroyed; set initial position to zero for all dynstructs
	except empty exceptions; throw TypeMismatch if current_component
	is called on an empty exception.

2001-11-27  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* orb/TypeCode.java:
	(member_label, default_index, discriminitator) only accept unions,
	not structs
	(member_count, member_name, member_type) also handle exceptions

	* idl/StructType.java:
	(getTypeCodeExpression) create exception typeCode with
	"create_exception_tc"

2001-11-26  Gerald Brose  <Gerald.Brose@xtradyne.com>

	* idl/Interface.java:
	(printOperations) inherit from sn + "Operations" rather than from
	sn

	* idl/InterfaceBody.java:
	(parse) added escaping the interface name here also.

2001-11-26  Jason Courage

	* orb/dynany/DynSequence.java, orb/dynany/DynStruct.java,
	orb/dynany/DynUnion.java: Removed System.err statements.

2001-11-23  Jason Courage

	* orb/dynany/DynAny.java: All operations throw OBJECT_NOT_EXIST if
	the DynAny has been destroyed; the get/insert_dyn_any ops have
	been correctly implemented; the get/insert ops now correctly throw
	a TypeMismatch exception if a type-incorrect operation is used.

2001-11-23  Steve Osselton

	* orb/ORB.java: Check for local object added to object_to_string

2001-11-22  Prism

	* transaction/ServerInitializer.java,
	transaction/TransactionCurrentImpl.java,
	util/tracing/ClientTraceInterceptor.java,
	util/tracing/ServerTraceInterceptor.java,
	util/tracing/TraceInitializer.java,
	security/ssl/iaik/SecurityServiceInitializer.java,
	security/ssl/iaik/ServerInvocationInterceptor.java,
	security/ssl/sun_jsse/SecurityServiceInitializer.java,
	security/ssl/sun_jsse/ServerInvocationInterceptor.java,
	transaction/ClientContextTransferInterceptor.java,
	transaction/ClientInitializer.java,
	transaction/ServerContextTransferInterceptor.java,
	security/level2/EstablishTrustPolicyImpl.java,
	security/level2/InvocationCredentialsPolicyImpl.java,
	security/level2/MechanismPolicyImpl.java,
	security/level2/PrincipalAuthenticatorImpl.java,
	security/level2/QOPPolicyImpl.java,
	security/level2/RequiredRightsImpl.java,
	security/level2/ServerAccessDecisionInterceptor.java,
	security/level2/ServerInitializer.java,
	poa/policy/RequestProcessingPolicy.java,
	poa/policy/ServantRetentionPolicy.java,
	poa/policy/ThreadPolicy.java,
	security/level2/AccessDecisionImpl.java,
	security/level2/CredentialsImpl.java,
	security/level2/CurrentImpl.java,
	security/level2/DelegationDirectivePolicyImpl.java,
	poa/POAManager.java, poa/policy/IdAssignmentPolicy.java,
	poa/policy/IdUniquenessPolicy.java,
	poa/policy/ImplicitActivationPolicy.java,
	poa/policy/LifespanPolicy.java,
	poa/policy/MapToDefaultDomainsPolicy.java,
	orb/portableInterceptor/RecursionAwareCI.java,
	orb/portableInterceptor/RequestInfoImpl.java,
	orb/standardInterceptors/CodeSetInfoInterceptor.java,
	orb/standardInterceptors/IORInterceptorInitializer.java,
	orb/standardInterceptors/SSLComponentInterceptor.java,
	poa/Current.java, poa/POA.java,
	orb/portableInterceptor/CodecFactoryImpl.java,
	orb/portableInterceptor/Codec_CDR_1_0_Impl.java,
	orb/portableInterceptor/DefaultClientInterceptor.java,
	orb/portableInterceptor/DefaultServerInterceptor.java,
	orb/portableInterceptor/IORInfoImpl.java,
	orb/portableInterceptor/ORBInitInfoImpl.java,
	orb/portableInterceptor/PICurrentImpl.java,
	orb/connection/BiDirPolicy.java,
	orb/connection/BiDirPolicyFactory.java, orb/dynany/DynAny.java,
	orb/dynany/DynAnyFactoryImpl.java,
	orb/policies/BiDirPolicyFactoryImpl.java,
	orb/policies/BiDirPolicyImpl.java, orb/Current.java,
	orb/LocalityConstrainedObject.java,
	orb/connection/BiDirConnectionInitializer.java,
	orb/CDROutputStream.java: org.jacorb.orb.LocalityConstrainedObject
	replaced with org.omg.CORBA.LocalObject

2001-11-21  Gerald Brose  <gerald.brose@acm.org>

	* orb/CDRInputStream.java:
	(read_string) added "0xff &" before casting byte to char.

2001-11-20  Gerald Brose  <gerald.brose@acm.org>

	* idl/sym.java, idl/parser.java: *** empty log message ***

	* idl/parser.cup, orb/ORB.java: updated version string

2001-11-20  Gerald Brose  <gerald.brose@acm.org>

	* JacORB 1.4 beta 2 released.

2001-11-20  Andre Spiegel  <spiegel@gnu.org>

	* orb/CDROutputStream.java:
	(write_value (BoxedValueHelper)): Don't write repository id for
	strings.

2001-11-20  Nicolas Noffke  <noffke@inf.fu-berlin.de>

	* build.xml:
	added target valuehandler that wraps valuehandler-dummy and
	valuehandler-real which has to be executed before compiling the orb

	* security/level2/CurrentImpl.java:
	removed reference to PrincipalAuthenticatorImpl, so compile will
	succeed without having iaiks libs present

	* security/build.xml: adapted to iaik /jsse split

	* imr/build.xml: removed JDK 1.1 compatibility

2001-11-20  Gerald Brose  <gerald.brose@acm.org>

	* build.xml, ir/build.xml, orb/build.xml:
	no more JDK 1.1 checks in build files

2001-11-20  Andre Spiegel  <spiegel@gnu.org>

	* orb/CDRInputStream.java (currentValueIndex): New instance field.
	(read_untyped_value): Set it.
	(register_value): New method; registers a value object at
	`currentValueIndex'.

	* orb/ORB.java (JacORBValueFactory): New private class.
	(findValueFactory): Use it, instead of an inlined anonymous class.

2001-11-20  Gerald Brose  <gerald.brose@acm.org>

	* build.xml, ir/build.xml, naming/build.xml: removed JDK version  check

2001-11-20  Andre Spiegel  <spiegel@gnu.org>

	* ChangeLog: Initial revision.

2001-11-19  Nicolas Noffke  <noffke@inf.fu-berlin.de>

	* imr/ImplementationRepositoryImpl.java:
	(main) moved System.setProperty( "jacorb.implname", "the_ImR" );
	to top of method (in front of any other call to Environment)

	* util/Environment.java: removed unused code, replaced op merge()
	by _props.putAll() (dropped jdk1.1 support)

2001-11-19  Andre Spiegel  <spiegel@gnu.org>

	* orb/build.xml (javatest): Check for RMI/IIOP (JDK 1.3).
	(reference-with-rmi, reference-without-rmi): New targets.
	(all): Depend on them.

	* orb/Reference.java: Removed.

	* util/ValueHandler.real: cosmetics

	* util/ValueHandler.java: Removed.

	* util/ValueHandler.dummy: Replace org.omg.SendingContext with
	org.omg.CORBA.portable.IDLEntity.

2001-11-19  jacorb

	* orb/portableInterceptor/build.xml: fixed wrong paths

2001-11-19  Nicolas Noffke  <noffke@inf.fu-berlin.de>

	* util/Environment.java: *** empty log message ***

2001-11-19  Gerald Brose  <gerald.brose@acm.org>

	* orb/Reference.template: new template, generated Reference.java
	as appropriate for the actual JDK version (1.2 or >1.3)

2001-11-19  jacorb

	* security/ssl/sun_jsse/README.jsse1_0_2: *** empty log message ***

	* security/ssl/iaik/SSLServerSocketFactory.java,
	 security/ssl/iaik/SSLSocketFactory.java,
	 security/ssl/sun_jsse/SSLServerSocketFactory.java,
	 security/ssl/sun_jsse/SSLSocketFactory.java,
	 security/ssl/sun_jsse/ServerInvocationInterceptor.java,
	 security/level2/KeyAndCert.java: adapted to jdk1.4 changes

	* security/ssl/sun_jsse/SecurityServiceInitializer.java:
	*** empty log message ***

	* security/level2/ServerAccessDecisionInterceptor.java,
	security/ssl/iaik/ServerInvocationInterceptor.java,
	security/ssl/sun_jsse/SSLServerSocketFactory.java,
	security/ssl/sun_jsse/SSLSocketFactory.java: adapted to updated
	IDL (new destroy() op)

	* util/tracing/TraceInitializer.java,
	 util/tracing/ClientTraceInterceptor.java,
	 util/tracing/ServerTraceInterceptor.java,
	 transaction/TransactionCurrentImpl.java,
	 transaction/ClientContextTransferInterceptor.java,
	 transaction/ClientInitializer.java,
	 transaction/ServerContextTransferInterceptor.java,
	 transaction/ServerInitializer.java: adapted to updated IDL (new
	 destroy() op)

	* orb/standardInterceptors/CodeSetInfoInterceptor.java,
	orb/standardInterceptors/SSLComponentInterceptor.java,
	orb/portableInterceptor/CodecFactoryImpl.java,
	orb/portableInterceptor/Codec_CDR_1_0_Impl.java,
	orb/portableInterceptor/DefaultClientInterceptor.java,
	orb/portableInterceptor/DefaultServerInterceptor.java,
	orb/portableInterceptor/InterceptorManager.java,
	orb/portableInterceptor/ORBInitInfoImpl.java, orb/ORB.java,
	orb/connection/BiDirConnectionClientInterceptor.java,
	orb/connection/BiDirConnectionInitializer.java,
	orb/connection/BiDirConnectionServerInterceptor.java,
	orb/connection/TCP_IP_Transport.java, orb/CDROutputStream.java:
	merged IOP_N into IOP

	* imr/ImplementationRepositoryImpl.java:
	(main) jacorb.implname instead of implName

2001-11-19  Gerald Brose  <gerald.brose@acm.org>

	* orb/CDRInputStream.java: cosmetics

	* orb/CDROutputStream.java: (check) fixed incorrect offset computation

2001-11-16  jacorb

	* util/Assertion.java, util/Debug.java,
	orb/dynany/DynSequence.java, poa/POA.java,
	poa/policy/MapToDefaultDomainsPolicy.java,
	orb/domain/gui/DomainTreeNode.java,
	orb/domain/gui/MemberListRootNode.java,
	orb/domain/gui/PolicyListRootNode.java,
	orb/domain/gui/PopupMenuActivator.java,
	orb/domain/gui/SharedDataImpl.java, orb/dynany/DynAny.java,
	orb/domain/ODMCache.java, orb/domain/ORBDomainImpl.java,
	orb/domain/ParentRulesPolicy.java,
	orb/domain/PolicyFactoryImpl.java, orb/domain/gui/Browser.java,
	orb/domain/gui/BrowserFrame.java,
	orb/domain/ChildRulesPolicy.java,
	orb/domain/DomainFactoryImpl.java, orb/domain/DomainImpl.java,
	orb/domain/FirstConflictResolutionPolicy.java,
	orb/domain/MapToTypeDomainsPolicy.java, orb/CDROutputStream.java,
	orb/TypeCode.java, ir/StructDef.java, ir/UnionDef.java,
	ir/WstringDef.java,
	ir/gui/typesystem/remote/RemoteTypeSystem.java,
	orb/CDRInputStream.java, ir/InterfaceDef.java, ir/ModuleDef.java,
	ir/OperationDef.java, ir/SequenceDef.java, ir/StringDef.java,
	ir/AliasDef.java, ir/ArrayDef.java, ir/AttributeDef.java,
	ir/ConstantDef.java, ir/Contained.java, ir/Container.java,
	ir/ExceptionDef.java: renamed Debug.assert() to myAssert() for
	compatibility with the jdk1.4, because assert is a keyword in that
	jdk

	* orb/connection/Server_TCP_IP_Transport.java:
	(close) replaced socket.shutdown[In|Out]put() by calls to close on
	streams for jdk1.2 compatibility

	* orb/connection/Client_TCP_IP_Transport.java:
	(close) replaced socket.shutdown[In|Out]put() by calles to close
	to the streams for jdk1.2 compatibility

2001-11-16  Andre Spiegel  <spiegel@gnu.org>

	* build.xml (init): Define property `valuehandler.present'.
	(valuehandler-dummy, valuehandler-real): New targets.
	(utils): Depend on them.

2001-11-16  jacorb

	* events/ProxyPullSupplierImpl.java: cosmetics

	* events/ProxyPullConsumerImpl.java: cosmetics (use standard
	indentation)

	* events/EventChannelImpl.java: added Jeff Carlson to the list of
	authors

2001-11-16  Andre Spiegel  <spiegel@gnu.org>

	* util/ValueHandler.real, util/ValueHandler.dummy: Initial revision.

	* idl/BaseType.java (id): Override to return an explicitly bogus id.

	* idl/ConstrTypeSpec.java (getTypeCodeExpression): Add variant
	that passes a Set of known types along.

	* idl/Member.java (member_print): Add hack so that valuetype
	members have only their name printed, not the entire definition.

	* idl/TypeDeclaration.java (getRecursiveTypeCodeExpression): New
	method.
	(getTypeCodeExpression): Add variant that passes a Set of known
	types along.

	* idl/TypeSpec.java (getTypeCodeExpression): Add variant that
	passes a Set of known types along.

	* idl/ValueDecl.java: Support recursive valuetypes.
	(declaration): Overridden to return this.
	(parse): Make NameTable entry before parsing the members, to allow
	recursion.
	(getTypeCodeExpression): Add variant that passes a Set of known types
	around.
	(getValueMemberExpression): New parameter: Set of known types.

2001-11-16  jacorb

	* orb/CDROutputStream.java: cosmetics

	* orb/CDRInputStream.java:
	(read_value) resolve recursive TypeCodes using a global hash table

2001-11-15  jacorb

	* build.xml: target idl: separated compilation of DomainManagemen,
	because this would fail in certain cases

	* imr/ImplementationRepositoryImpl.java: made ImR use user POA
	with USER_ID, so it can be accessed via corbaloc

	* imr/ImRHostInfo.java: changed org.jacorb.orb.ORB to org.omg.CORBA.ORB

	* orb/ORB.java (set_parameters): commented out building of initial
	references. These will be build on demand in
	resolve_initial_references()

	* idl/parser.cup: updated version string

	* util/Debug.java, util/Environment.java, idl/parser.java,
	idl/sym.java,
	orb/standardInterceptors/IORInterceptorInitializer.java,
	poa/AOM.java, idl/parser.cup: *** empty log message ***

2001-11-14  jacorb

	* orb/TypeCode.java: static initializer: added a primitive TCode
	that is returned when get_primitive_tc is called for tk_object 
	(courtesy/workaround to Sun) 

	* orb/Any.java, orb/ParsedIOR.java: cosmetics

	* orb/CDROutputStream.java:
	(write_value) removed bug (illegal access to tc.id(), which caused
	exceptions

	* imr/ImplementationRepositoryImpl.java: fixed bug that would
	wrongly treat LocateRequests as "normal" requests

	* orb/ParsedIOR.java:
	(createIOR) redesigned and renamed to "createObjectIOR"

	* orb/connection/LocateRequestInputStream.java:
	*** empty log message ***

2001-11-13  jacorb

	* orb/Delegate.java: removed debug statements

	* orb/Any.java: cosmetics, less debug output

	* orb/CDROutputStream.java: added functionality for
	recursive/repeated TypeCodes

	* orb/CDRInputStream.java: added functionality for reading
	recursive/repeated TypeCodes

	* orb/domain/MapToDefaultDomainPolicy.java,
	orb/domain/MapToTypeDomainsPolicy.java,
	orb/domain/MemberListInserter.java: cosmetics

	* orb/SystemExceptionHelper.java:
	(read) added explanatory string to systems exceptions that are
	re-thrown on the client side.

	* poa/build.xml, security/build.xml: removed echo

	* imr/ServerTable.java: cosmetics

	* orb/CDROutputStream.java:
	(write_wchar(char , boolean)): UTF-16 case: forgot to increment
	index

	* orb/CDRInputStream.java:
	(read_wstring) fixed bug in GIOP 1.2 if branch: return String got
	passed the whole char array instead of the portion used (up to
	"i")

2001-11-12  jacorb

	* poa/POAConstants.java: *** empty log message ***

	* poa/POAConstants.java: cosmetics

2001-11-12  Andre Spiegel  <spiegel@gnu.org>

	* idl/OpDecl.java (printSignature): Add variant with boolean arg
	`printModifiers'.  Simplified parameter-printing code.

	* idl/Method.java, idl/Operation.java (printSignature): Add
	variant with boolean arg `printModifiers'.

	* idl/ValueDecl.java (parse): Convert attributes into operations.
	(printClass): Print signatures of operations.

2001-11-09  jacorb

	* orb/ORB.java, poa/POAMonitorImpl.java: cosmetics

	* orb/TypeCode.java: removed deprecated code for recursive type codes

	* orb/CDROutputStream.java: commented out a number of Debug statements

2001-11-09  Andre Spiegel  <spiegel@gnu.org>

	* idl/ValueAbsDecl.java: Initial revision.

2001-11-09  jacorb

	* orb/CDRInputStream.java: commented out debugging statements for
	performance reasons

	* orb/ORB.java:
	(createIOR) add IIOP 1.0 profiles in 1.2 IORs only if the
	appropriate property is set

	* orb/connection/BiDirConnectionServerInterceptor.java:
	(receive_request_service_contexts) changed marshalling of service
	context

	* orb/connection/BiDirConnectionClientInterceptor.java:
	(send_request) changed marshalling of service context

	* orb/ORB.java: *** empty log message ***

	* imr/build.xml: removed echo statements

	* orb/ORB.java:
	(findPOA) deal with parsing exceptions raised by POA utils

	* poa/util/POAUtil.java: cosmetics

	* security/build.xml: removed echo

	* security/ssl/iaik/ServerInvocationInterceptor.java: cosmetics

	* util/ObjectUtil.java: "added robustness"

	* util/Environment.java: cosmetics

	* idl/parser.java, idl/sym.java, idl/IdlSymbol.java,
	idl/Interface.java, idl/InterfaceBody.java, idl/ScopedName.java,
	idl/SimpleDeclarator.java, idl/parser.cup,
	idl/ArrayDeclarator.java, idl/Environment.java: name scoping fixes

	* ir/SequenceDef.java, ir/StructDef.java, ir/IRServer.java,
	ir/IdlWriter.java, ir/InterfaceDef.java, ir/ModuleDef.java,
	ir/OperationDef.java, ir/RepositoryImpl.java, ir/Contained.java,
	ir/Container.java, ir/EnumDef.java, ir/IDLType.java,
	ir/IRObject.java: various fixes and updates

	* ir/RepositoryID.java:
	(toRepositoryID) added overloaded variant with extra boolean
	parameter to avoid class loading, used from IR classes

	* ir/RepositoryID.java: (loadClass) static again

	* poa/util/POAUtil.java: cosmetics

	* poa/POA.java: (_getQualifiedName) now public for use by ORB
	(isRetain,isUseServantManager,previouslyGeneratedObjectId) now
	public cosmetics

	* poa/Current.java: dunno

	* poa/AOM.java: cosmetics

	* orb/Delegate.java: (is_local) updates and fixes

	* orb/Any.java: (equal) added check for null argument

	* orb/ServantDelegate.java: cosmetics

	* orb/TypeCode.java: removed deprecated code for resolving
	recursive TypeCodes, cosmetics

	* orb/CDROutputStream.java:
	(constructors, write_string, write_wstring) BOM-related fixes

	* orb/CDRInputStream.java:
	(constructors, read_wstring, read_string) BOM-related fixes

	* orb/ORB.java: (findPOA) updated

	* orb/dynany/DynStruct.java, orb/dynany/DynUnion.java,
	orb/dynany/DynAnyFactoryImpl.java, orb/dynany/DynArray.java,
	orb/dynany/DynEnum.java, orb/dynany/DynSequence.java: various
	fixes

2001-11-08  jacorb

	* orb/ORB.java (lookup_value_factory): Avoid name clash (jikes
	problem).

2001-11-08  Andre Spiegel  <spiegel@gnu.org>

	* idl/StructType.java (set_memberlist): Call
	MemberList.setContainingType() instead of setStruct().

	* idl/StateMember.java: Initial revision.

	* idl/Member.java: Extend Declaration rather than IdlSymbol.
	(containingType, setContainingType): Renamed from containing_struct,
	setStruct.  Updated all callers.
	(extractMember): New method.
	(parse): Use it.
	(typeSpec): New method.

	* idl/MemberList.java (containingType): Renamed from containing_struct.
	(setContainingType): Renamed from setStruct.

	* idl/ValueBoxDecl.java: Extend `Value' rather than
	`ValueDeclaration' (which no longer exists).

	* idl/Value.java: Renamed from `ValueDeclaration'.  This is now
	the superclass of both `ValueDecl' (which used to be called
	`Value') and `ValueBoxDecl'.

	* idl/ValueDecl.java: Initial revision.

	* idl/sym.java, idl/parser.java, idl/parser.cup: Add initial
	support for regular valuetypes.

	* idl/ValueDeclaration.java: Removed.

	* orb/ORB.java (valueFactories): New instance field.
	(register_value_factory, unregister_value_factory): Now
	implemented.
	(lookup_value_factory): Replaced dummy implementation with a real
	one.
	(findValueFactory, findClass, instantiate): New internal methods.

	* ir/RepositoryID.java (loadClass): New method.
	(ir2scopes, toRepositoryID): Use it.

	* idl/sym.java, idl/parser.java: Update for OBV.

	* idl/parser.cup: Adapt method names.

	* idl/ValueDecl.java: Working on the wire.

	* orb/CDRInputStream.java (read_untyped_value): Throw MARSHAL if
	there's no value factory.

2001-11-08  jacorb

	* poa/RequestController.java: cosmetics

2001-11-07  jacorb

	* security/level2/ServerAccessDecisionInterceptor.java:
	*** empty log message ***

	* orb/CDROutputStream.java, orb/CDRInputStream.java:
	adapted to GIOP 1.2 changes for wchars

2001-11-07  Andre Spiegel  <spiegel@gnu.org>

	* idl/ValueDecl.java (getTypeCodeExpression, getValueMemberExpression):
	New methods.
	(printClass, printHelper): Use them.

	* idl/Member.java (typeSpec): New method.

2001-11-06  jacorb

	* orb/ParsedIOR.java: added check so IORS without IIOP profiles
	are accepted

2001-11-05  Andre Spiegel  <spiegel@gnu.org>

	* idl/ValueDecl.java: Initially working.

2001-11-02  Andre Spiegel  <spiegel@gnu.org>

	* idl/StructType.java (set_memberlist):
	Use new method MemberList.setContainingType().

	* idl/Member.java (extractMember): New method.
	(parse): Use it.

	* idl/MemberList.java (containingType): Renamed from containing_struct.
	(setContainingType): Renamed from setStruct.

2001-11-02  jacorb

	* orb/ParsedIOR.java: *** empty log message ***

2001-11-02  Andre Spiegel  <spiegel@gnu.org>

	* idl/StateMember.java: Initial revision.

2001-11-02  jacorb

	* orb/Delegate.java:
	(is_local) modified so that check for poa._localStubsSupported()
	is ommitted and that local POAs are looked for first
	(getReference) omitted call to poa._localStubsSupported()
	(servant_preinvoke) modified to work also with servant managers

2001-11-02  Andre Spiegel  <spiegel@gnu.org>

	* idl/parser.cup: Add parse actions for regular value types.

	* idl/ValueDecl.java: Intermediate version.

2001-11-02  jacorb

	* orb/ORB.java:
	(string_to_object) changed call to new ParsedIOR so that "this" is
	passed to te constructor

	* orb/util/PingObject.java: added a check for o == null so that
	only convertable references are pinged

	* orb/util/PrintIOR.java: added acheck t ensure that only "IOR:"
	iors are parsed

	* orb/CDRInputStream.java: *** empty log message ***

	* orb/ORB.java: changed version String to 1.4 beta 1
	(set_parameters) added checks for null arguments

	* poa/POA.java:
	(_localStubsSupported) removed, no longer needed because of
	changes in orb.Delegate made isRetain public so that orb.Delegate
	may use it

2001-10-30  Andre Spiegel  <spiegel@gnu.org>

	* idl/Member.java: Extend Declaration rather than IdlSymbol.
	(containingType, setContainingType): Renamed from containing_struct,
	setStruct.  Updated all callers.

2001-10-29  Andre Spiegel  <spiegel@gnu.org>

	* idl/ValueDeclaration.java: Removed.

2001-10-26  jacorb

	* orb/ParsedIOR.java, orb/connection/ClientConnection.java,
	 orb/portableInterceptor/InterceptorManager.java,
	 orb/standardInterceptors/CodeSetInfoInterceptor.java,
	 orb/CDRInputStream.java, orb/CDROutputStream.java: fixed bug in
	 CodeSet support

2001-10-25  Andre Spiegel  <spiegel@gnu.org>

	* idl/ValueBoxDecl.java: New superclass `Value'.

	* idl/Value.java: Renamed from ValueDeclaration.

	* idl/ValueDecl.java: Initial revision.

	* idl/ValueDecl.java: New file.

2001-10-24  jacorb

	* poa/AOM.java:
	(remove) killed line: servant._this_object()._release(), which is
	nonsense

	* orb/connection/MessageReceptor.java:
	(doWork()) set exception output to a higher debug level.

2001-10-17  jacorb

	* orb/connection/RequestOutputStream.java, orb/Delegate.java,
	orb/connection/ClientConnection.java,
	orb/connection/ConnectionManager.java: *** empty log message ***

2001-10-12  jacorb

	* orb/dynany/DynEnum.java:
	(equal) added, to override equal() from DynAny

	* orb/dynany/DynAny.java: cosmetics

	* orb/dynany/DynUnion.java: (has_no_active_member) fixed

	* orb/Delegate.java, poa/Current.java, poa/RPPoolManager.java:
	invocation context management changed

	* poa/RequestController.java, poa/RequestQueue.java,
	poa/util/ByteArrayKey.java: *** empty log message ***

2001-10-11  jacorb

	* orb/Any.java: (insert_Object) added checks for null

	* orb/Delegate.java, orb/connection/ClientConnection.java,
	 orb/connection/ConnectionManager.java: fixed sync issue with
	 multiple LocationForwards

	* orb/connection/GIOPConnection.java:
	 fixed synching bug (IllegalMonitorStateE)

	* orb/ParsedIOR.java: createReference() now also creates a
	 ProfileBody1_1 with version 1.2

	* imr/ImplementationRepositoryImpl.java: replyNewLocation() fixed
	 creation of faulty profile body

2001-10-10  jacorb

	* poa/POA.java:
	(getReference) use a ByteArrayKey rather than a String as the key
	for hashtable lookup
	(deactivate_object) use a ByteArrayKey rather than a String as the
	key for hashtable lookup

2001-10-09  jacorb

	* orb/Delegate.java: local invocation context management changed
	to fix the problem with local recursive calls

2001-10-08  jacorb

	* poa/POA.java: deactivate_object() remove reference from HT
	createdReferences()

	* poa/RequestProcessor.java: run() moved clear at end of method to
	before the returning of the thread so it can't overwrite data data
	set by a fast init()

	* orb/Delegate.java: invoke() pending_replies were not removed
	correctly so HT grew infinitely

2001-10-07  jcarlson

	* events/ProxyPullConsumerImpl.java,
	events/ProxyPullSupplierImpl.java,
	events/ProxyPushConsumerImpl.java,
	events/ProxyPushSupplierImpl.java: Changed Copyright dates.

2001-10-05  Andre Spiegel  <spiegel@gnu.org>

	* idl/Interface.java (signature): Method removed.

2001-10-04  jacorb

	* orb/connection/NoBiDirServerReplyListener.java,
	orb/connection/ReplyListener.java,
	orb/connection/ReplyPlaceholder.java,
	orb/connection/RequestListener.java,
	orb/connection/ServerRequestListener.java,
	orb/connection/TCP_IP_Transport.java, orb/Delegate.java,
	orb/connection/ClientConnection.java,
	orb/connection/GIOPConnection.java,
	orb/connection/NoBiDirClientRequestListener.java: fixed bug: when
	the server terminated the client connection, the client would hang
	instead of throwing a propert exception

	* poa/RequestProcessor.java: run() - wrapped wait() in while loop
	so unexpected notifies are handled correctly.

	* orb/connection/ConnectionListener.java,
	orb/connection/StreamClosedException.java,
	orb/connection/TimeOutException.java: *** empty log message ***

	* poa/RPPoolManager.java: cosmetics

	* security/ssl/sun_jsse/README.properties: Readme has been
	included into the Programming Guide

	* security/ssl/sun_jsse/SSLServerSocketFactory.java,
	security/ssl/sun_jsse/SSLSocketFactory.java: some ssl bug fixes
	and documentation updates

2001-10-02  jacorb

	* security/util/LoginWindow.java,
	security/level2/SwingedPAImpl.java, security/util/LoginData.java,
	security/level2/PrincipalAuthenticatorImpl.java,
	orb/connection/LocateRequestInputStream.java,
	orb/connection/LocateRequest.java: *** empty log message ***

	* orb/Any.java: (conflict between identical lines resolved)

	* trading/client/query/README, util/CapsuleThread.java,
	util/Environment.java, util/threadpool/ThreadPool.java,
	security/ssl/sun_jsse/SSLServerSocketFactory.java,
	security/ssl/sun_jsse/SSLSocketFactory.java,
	security/ssl/sun_jsse/build.xml, security/ssl/iaik/build.xml,
	security/ssl/sun_jsse/KeyStoreUtil.java,
	security/ssl/sun_jsse/README.properties,
	security/ssl/iaik/SecurityServiceInitializer.java,
	security/ssl/iaik/ServerChainVerifier.java,
	security/ssl/iaik/ServerInvocationInterceptor.java,
	security/ssl/iaik/SSLServerSocketFactory.java,
	security/ssl/iaik/SSLSetup.java,
	security/ssl/iaik/SSLSocketFactory.java,
	security/ssl/SecurityServiceInitializer.java,
	security/ssl/ServerInvocationInterceptor.java,
	security/ssl/build.xml, security/ssl/SSLSetup.java,
	security/ssl/SSLSocketFactory.java,
	security/level2/PrincipalAuthenticatorImpl.java,
	security/level2/SwingedPAImpl.java,
	security/ssl/SSLServerSocketFactory.java,
	security/jsse/KeyStoreUtil.java, security/jsse/build.xml,
	security/level2/CurrentImpl.java, poa/Current.java, poa/POA.java,
	poa/RequestProcessor.java, proxy/ForwarderImpl.java,
	security/build.xml, orb/connection/http/ServerConnection.java,
	orb/dsi/ServerRequest.java,
	orb/portableInterceptor/ClientRequestInfoImpl.java,
	orb/portableInterceptor/ServerRequestInfoImpl.java,
	orb/standardInterceptors/IORInterceptorInitializer.java,
	orb/standardInterceptors/SSLComponentInterceptor.java,
	orb/connection/TimeOutException.java,
	orb/connection/Transport.java,
	orb/connection/http/ClientConnection.java,
	orb/connection/ServiceContextTransportingOutputStream.java,
	orb/connection/TCP_IP_Transport.java,
	orb/connection/ServerRequestListener.java,
	orb/connection/Server_TCP_IP_Transport.java,
	orb/connection/ServiceContextTransportingInputStream.java,
	orb/connection/RequestListener.java,
	orb/connection/RequestOutputStream.java,
	orb/connection/ServerConnection.java,
	orb/connection/ReplyOutputStream.java,
	orb/connection/ReplyPlaceholder.java,
	orb/connection/ReplyReceptor.java,
	orb/connection/RequestInputStream.java,
	orb/connection/NoBiDirServerReplyListener.java,
	orb/connection/ReplyInputStream.java,
	orb/connection/ReplyListener.java,
	orb/connection/MessageReceptor.java,
	orb/connection/MessageReceptorPool.java,
	orb/connection/Messages.java,
	orb/connection/NoBiDirClientRequestListener.java,
	orb/connection/LocateRequestOutputStream.java,
	orb/connection/MessageInputStream.java,
	orb/connection/MessageOutputStream.java,
	orb/connection/ConnectionManager.java,
	orb/connection/GIOPConnection.java,
	orb/connection/LocateReplyInputStream.java,
	orb/connection/LocateReplyOutputStream.java,
	orb/connection/ClientReplyListener.java,
	orb/connection/Client_TCP_IP_Transport.java,
	orb/connection/CodeSet.java,
	orb/connection/BiDirConnectionServerInterceptor.java,
	orb/connection/BiDirPolicy.java,
	orb/connection/BiDirPolicyFactory.java,
	orb/connection/ClientConnection.java, orb/ParsedIOR.java,
	orb/build.xml,
	orb/connection/BiDirConnectionClientInterceptor.java,
	orb/connection/BiDirConnectionInitializer.java, orb/Delegate.java,
	orb/ORB.java, orb/BasicAdapter.java, orb/BufferManager.java,
	orb/CDRInputStream.java, orb/CDROutputStream.java, build.xml,
	imr/ImplementationRepositoryImpl.java, naming/NameServer.java,
	orb/Any.java: Merged in GIOP 1.2 branch

2001-10-02  Andre Spiegel  <spiegel@gnu.org>

	* ir/gui/typesystem/Value.java: Initial revision, submitted by Ole
	Husgaard <osh@sparre.dk>.

	* ir/gui/typesystem/remote/RemoteTypeSystem.java 
	(createTypeSystemNode): Add cases for Value, ValueBox, and
	ValueMember.  Submitted by Ole Husgaard <osh@sparre.dk>.

	* ir/gui/typesystem/remote/IRValue.java,
	ir/gui/typesystem/remote/IRValueBox.java,
	ir/gui/typesystem/remote/IRValueMember.java: Initial revision,
	submitted by Ole Husgaard <osh@sparre.dk>.

	* idl/ValueBoxDecl.java: Implement boxed values correctly
	according to spec.

	* ir/RepositoryID.java: Handle RMI: repository ids.

	* orb/CDROutputStream.java: Add value type support.  Extend
	CORBA_2_3 OutputStream.
	(valueMap, repIdMap): New fields.
	(orb): Method implemented.
	(write_TypeCode): Add cases for tk_value and tk_value_box.
	(write_value): Methods implemented.
	(write_special_value, write_repository_id, write_value_internal):
	New internal methods.

	* orb/CDRInputStream.java: Add value type support.  Extend
	CORBA_2_3 InputStream.
	(valueMap, repIdMap): New fields.
	(orb): Privatized field, implemented accessor method.
	(read_TypeCode): Add cases for tk_value and tk_value_box.
	(read_value): Methods implemented.
	(read_untyped_value, read_typed_value, read_repository_id,
	read_special_value): New internal methods.

	* orb/Reference.java: Extend javax.rmi.CORBA.Stub, implement
	java.rmi.Remote, as suggested by Francisco Reverbel
	<reverbel@ime.usp.br>.

	* orb/Any.java (extract_Value, insert_Value): Implemented.
	(read_value, write_value): Add case for tk_value.

	* orb/TypeCode.java: Add value type support.  Changes in part by
	Ole Husgaard <osh@sparre.dk>.
	(member_visibility, value_modifier): New instance fields.
	(primitive_tcs_map): New static field.
	(put_primitive_tcs): New static method, used in static initializer
	to populate the above.
	(TypeCode [tk_alias]): Add new parameter `_kind'; now works for
	both tk_alias and tk_value_box.
	(TypeCode [tk_value]): New constructor.
	(member_visibility, type_modifier, concrete_base_type): New
	methods.
	(create_tc, getValueMembers, createValueMember): New methods.

	* util/ValueHandler.java: Initial revision.

	* orb/ORBSingleton.java (create_value_tc, create_value_box_tc):
	Implemented.
	(create_alias_tc): Adapt to new TypeCode constructor.

	* orb/ORB.java (object_to_string): Delegate to delegate.
	Suggested by Francisco Reverbel <reverbel@ime.usp.br>.
	(lookup_value_factory): Dummy implementation.

	* orb/TypeCode.java (create_tc): Split into a public version that
	takes only a class, and a private version that passes a set of
	`knownClasses' along.
	(getValueMembers, createValueMember): Pass `knownClasses' through.

	* ir/RepositoryID.java (repId): Use org.jacorb.util.ValueHandler.

	* orb/CDROutputStream.java (write_value_internal): Use
	org.jacorb.util.ValueHandler.

	* orb/CDRInputStream.java (read_untyped_value): Use
	org.jacorb.util.ValueHandler.

	* util/ValueHandler.java: Initial revision.

	* util/ValueHandler.java: New file.

2001-10-01  jacorb

	* orb/connection/ServerRequestListener.java, util/Environment.java:
	*** empty log message ***

	* security/ssl/sun_jsse/build.xml: New file.

	* security/ssl/sun_jsse/build.xml, util/Environment.java:
	reintegrated SSL

	* security/ssl/sun_jsse/SSLServerSocketFactory.java,
	security/ssl/sun_jsse/SSLSocketFactory.java: New file.

	* security/ssl/sun_jsse/SSLServerSocketFactory.java,
	security/ssl/sun_jsse/SSLSocketFactory.java: reintegrated SSL

	* security/ssl/sun_jsse/KeyStoreUtil.java,
	security/ssl/sun_jsse/README.properties: New file.

	* security/ssl/sun_jsse/KeyStoreUtil.java,
	security/ssl/sun_jsse/README.properties: reintegrated SSL

	* security/ssl/iaik/build.xml: New file.

	* security/ssl/iaik/ServerInvocationInterceptor.java,
	security/ssl/iaik/build.xml: reintegrated SSL

	* security/ssl/iaik/ServerChainVerifier.java,
	security/ssl/iaik/ServerInvocationInterceptor.java: New file.

	* security/ssl/iaik/SecurityServiceInitializer.java,
	security/ssl/iaik/ServerChainVerifier.java: reintegrated SSL

	* security/ssl/iaik/SSLSocketFactory.java,
	security/ssl/iaik/SecurityServiceInitializer.java: New file.

	* security/ssl/iaik/SSLSocketFactory.java: reintegrated SSL

	* security/ssl/iaik/SSLServerSocketFactory.java,
	security/ssl/iaik/SSLSetup.java: New file.

	* security/ssl/iaik/SSLServerSocketFactory.java,
	security/ssl/iaik/SSLSetup.java: reintegrated SSL

	* security/ssl/build.xml: New file.

	* security/ssl/SSLSocketFactory.java,
	security/ssl/SecurityServiceInitializer.java,
	security/ssl/ServerInvocationInterceptor.java,
	security/ssl/build.xml,
	security/level2/PrincipalAuthenticatorImpl.java,
	security/level2/SwingedPAImpl.java,
	security/ssl/SSLServerSocketFactory.java,
	security/ssl/SSLSetup.java, security/jsse/KeyStoreUtil.java,
	security/jsse/README.properties,
	security/jsse/SSLServerSocketFactory.java,
	security/jsse/SSLSocketFactory.java, security/jsse/build.xml,
	security/level2/CurrentImpl.java,
	orb/connection/Server_TCP_IP_Transport.java,
	orb/standardInterceptors/IORInterceptorInitializer.java,
	orb/standardInterceptors/SSLComponentInterceptor.java,
	security/build.xml, orb/connection/GIOPConnection.java,
	orb/connection/Messages.java,
	orb/connection/ServerRequestListener.java,
	orb/connection/ConnectionManager.java, orb/BasicAdapter.java,
	orb/Delegate.java, build.xml: reintegrated SSL

	* idl/str_token.java, idl/sym.java, idl/parser.cup,
	idl/parser.java, idl/IdlSymbol.java, idl/Literal.java,
	idl/Scope.java, idl/ScopeData.java, idl/StringType.java,
	idl/lexer.java, orb/dynany/DynSequence.java,
	orb/dynany/DynStruct.java, orb/dynany/DynUnion.java, orb/ORB.java,
	orb/ParsedIOR.java, orb/dynany/DynArray.java: *** empty log
	message ***

	* orb/connection/Server_TCP_IP_Transport.java,
	orb/connection/ServiceContextTransportingOutputStream.java,
	orb/connection/TCP_IP_Transport.java,
	orb/connection/ReplyInputStream.java,
	orb/connection/ReplyOutputStream.java,
	orb/connection/RequestInputStream.java, orb/ParsedIOR.java,
	orb/connection/ClientConnection.java, orb/Delegate.java,
	orb/ORB.java, build.xml, imr/ImplementationRepositoryImpl.java:
	reintegrated imr + bug fixes

2001-09-27  jacorb

	* orb/connection/CodeSet.java, orb/connection/GIOPConnection.java,
	orb/connection/ServerRequestListener.java, orb/ParsedIOR.java,
	orb/connection/ClientConnection.java, orb/Delegate.java,
	orb/CDRInputStream.java, orb/CDROutputStream.java: reintegrated
	Codesets

2001-09-21  jacorb

	* orb/CDRInputStream.java (read_TypeCode): Add _tk_wchar in switch.

	* orb/CDROutputStream.java (write_TypeCode):
	Handle the case when concrete_base_type() is null.

	* orb/Any.java (insert_Value, extract_Value): Handle null values.

	* orb/TypeCode.java (primitive_tcs_map): New static variable.
	(put_primitive_tcs): New helper function, used in static initializer.
	(create_tc, getValueMembers, createValueMember): New class methods.

	* orb/CDROutputStream.java (orb): Method rewritten to obey
	singleton pattern.
	(write_repository_id): New method.
	(write_value_internal): Use it.
	(write_value (BoxedValueHelper)): Always write RepositoryID for
	RMI: types.

	* orb/CDRInputStream.java (orb): Instance var privatized, method
	rewritten to obey singleton pattern.
	(read_value (BoxedValueHelper)): Rewrote comment explaining use of
	type information.

	* orb/Any.java (extract_Value, insert_Value): Implemented.
	(read_value, write_value): Add handling of tk_value.

	* orb/connection/TCP_IP_Transport.java,
	orb/connection/Transport.java,
	orb/portableInterceptor/ClientRequestInfoImpl.java,
	orb/connection/RequestListener.java,
	orb/connection/RequestOutputStream.java,
	orb/connection/ServerRequestListener.java,
	orb/connection/Server_TCP_IP_Transport.java,
	orb/connection/ReplyListener.java,
	orb/connection/ReplyOutputStream.java,
	orb/connection/RequestInputStream.java,
	orb/connection/MessageReceptor.java,
	orb/connection/NoBiDirClientRequestListener.java,
	orb/connection/NoBiDirServerReplyListener.java,
	orb/connection/ReplyInputStream.java, orb/connection/CodeSet.java,
	orb/connection/ConnectionManager.java,
	orb/connection/GIOPConnection.java,
	orb/connection/ClientConnection.java,
	orb/connection/ClientReplyListener.java,
	orb/connection/Client_TCP_IP_Transport.java, orb/ParsedIOR.java,
	orb/connection/BiDirConnectionClientInterceptor.java,
	orb/connection/BiDirConnectionServerInterceptor.java,
	orb/Delegate.java: *** empty log message ***

2001-09-20  jacorb

	Patch by Francisco Reverbel <reverbel@ime.usp.br>.

	* orb/Reference.java: Extend javax.rmi.CORBA.Stub, implement
	java.rmi.Remote.

	* ir/RepositoryID.java:
	(className): Map org.omg/CORBA/WStringValue to java.lang.String.
	(toRepositoryID): Use context class loader instead of
	Class.forName().

	* orb/ORBSingleton.java:
	(get_primitive_tc): Create new TypeCode object, don't delegate.

	* orb/ORB.java: (object_to_string): Delegate.

	* orb/CDRInputStream.java:
	(orb): Implemented.
	(read_value (factory)): Accept type information.
	(read_untyped_value): Add special handling for strings.  Use
	context class loader instead of Class.forName().
	(read_special_value): Better error message.

	* orb/CDROutputStream.java:
	(orb): Implemented.
	(write_value (value, class)): Always write RepositoryID for
	valuetypes.
	(write_value_internal): Use write_wstring for Strings.

2001-09-13  jacorb

	* naming/TestClient.java: *** empty log message ***

2001-09-11  jcarlson

	* events/ProxyPullSupplierImpl.java: Removed typo.

2001-09-10  jcarlson

	* events/ProxyPullSupplierImpl.java,
	events/ProxyPushConsumerImpl.java,
	events/ProxyPushSupplierImpl.java, events/EventChannelImpl.java,
	events/ProxyPullConsumerImpl.java: Modifications to bring Event
	Service into 1.1 specification compliance.

2001-09-09  jacorb

	* ir/RepositoryID.java (className, repId, toRepositoryID): Handle
	RMI: ids.

	* orb/CDROutputStream.java (write_state, write_primtive_field):
	Removed.
	(write_value_internal): For RMI: values, delegate to ValueHandler.

	* orb/CDRInputStream.java (read_untyped_value): New method which
	does the actual reading.
	(read_typed_value): Reimplemented in terms of the above.
	(read_special_value): Don't barf on typed values (which should
	never get here, though, anyway).
	(read_value): Use the above framework.  All versions implemented.

2001-09-07  jacorb

	* orb/dynany/DynSequence.java: (seek) stupid index setting bug removed

	* util/Version.java, poa/POA.java, poa/util/POAUtil.java,
	proxy/ForwarderImpl.java, trading/client/query/Query.java,
	trading/test/ImportThread.java, ir/RepositoryID.java,
	naming/NamingContextImpl.java: *** empty log message ***

	* poa/RequestController.java: cosmetics

	* security/level2/AccessDecisionImpl.java,
	security/level2/SecAttributeManager.java,
	security/level2/ServerAccessDecisionInterceptor.java: *** empty
	log message ***

	* idl/sym.java, idl/lexer.java, idl/parser.cup, idl/parser.java,
	idl/AliasTypeSpec.java, idl/ElementSpec.java,
	idl/GlobalInputStream.java, idl/IdlSymbol.java,
	idl/UnionType.java: UnionType: fixed type() method in helper
	generation (for enum discriminators)

	* orb/portableInterceptor/ORBInitInfoImpl.java, orb/Any.java,
	orb/CDRInputStream.java, orb/CDROutputStream.java,
	orb/ORBSingleton.java: fixed Any.equal()

	* orb/ORB.java: *** empty log message ***

	* orb/dynany/DynAny.java, orb/dynany/DynAnyFactoryImpl.java,
	orb/dynany/DynArray.java, orb/dynany/DynEnum.java,
	orb/dynany/DynSequence.java, orb/dynany/DynStruct.java,
	orb/dynany/DynUnion.java: Enable aliased TCs for dynany creation,
	made all DynAnys purely local objects (without POA involvement),
	fixed bugs

	* orb/TypeCode.java (equivalent): added create an unbounded string
	TypeCode as a "primitive" TC added two assertions,

2001-09-05  jacorb

	* orb/Fields.java: New file.

	* orb/CDROutputStream.java (valueMap, repIdMap): Use Map/HashMap
	instead of Hashtable.
	(write_value_internal): Second parameter is now a RepositoryID;
	updated all callers.
	(write_state, write_primitive_field): New methods.

	* orb/CDRInputStream.java (repIdMap): New field.
	(read_typed_value, read_repository_id): New methods.
	(read_value): Use them.

	* orb/CDROutputStream.java (repIdMap): New field.
	(write_value): Various new overloadings.
	(write_value_internal): New method.

	* orb/Delegate.java: synchronized access to the pending_replies
	hashtable

	* orb/portableInterceptor/DefaultClientInterceptor.java,
	orb/connection/old_conn/TimeOutException.java: *** empty log
	message ***

	* orb/connection/old_conn/TimeOutException.java: New file.

	* orb/connection/old_conn/ReplyReceptor.java,
	orb/connection/old_conn/ServerConnection.java: *** empty log
	message ***

	* orb/connection/old_conn/ServerConnection.java: New file.

	* orb/connection/old_conn/LocateRequestOutputStream.java: ***
	empty log message ***

	* orb/connection/old_conn/LocateRequestOutputStream.java,
	orb/connection/old_conn/ReplyReceptor.java: New file.

	* orb/connection/old_conn/LocateRequest.java,
	orb/connection/old_conn/LocateRequestInputStream.java: *** empty
	log message ***

	* orb/connection/old_conn/LocateRequest.java,
	orb/connection/old_conn/LocateRequestInputStream.java: New file.

	* orb/connection/old_conn/LocateReplyInputStream.java,
	orb/connection/old_conn/LocateReplyOutputStream.java: *** empty
	log message ***

	* orb/connection/old_conn/LocateReplyInputStream.java,
	orb/connection/old_conn/LocateReplyOutputStream.java: New file.

	* orb/connection/old_conn/AbstractConnection.java,
	orb/connection/old_conn/ClientConnection.java: *** empty log
	message ***

	* orb/connection/old_conn/ClientConnection.java,
	orb/connection/old_conn/AbstractConnection.java: New file.

	* orb/connection/ServiceContextTransportingOutputStream.java,
	orb/connection/ServiceContextTransportingInputStream.java: ***
	empty log message ***

	* orb/connection/ServiceContextTransportingInputStream.java,
	orb/connection/ServiceContextTransportingOutputStream.java: New
	file.

	* orb/connection/MessageInputStream.java,
	orb/connection/MessageOutputStream.java: *** empty log message ***

	* orb/connection/MessageInputStream.java,
	orb/connection/MessageOutputStream.java: New file.

	* orb/connection/BiDirPolicy.java,
	orb/connection/BiDirPolicyFactory.java: *** empty log message ***

	* orb/connection/BiDirPolicyFactory.java: New file.

	* orb/connection/BiDirConnectionInitializer.java,
	orb/connection/BiDirConnectionServerInterceptor.java: *** empty
	log message ***

	* orb/connection/BiDirConnectionServerInterceptor.java,
	orb/connection/BiDirPolicy.java: New file.

	* orb/connection/BiDirConnectionClientInterceptor.java: *** empty
	log message ***

	* orb/connection/BiDirConnectionClientInterceptor.java,
	orb/connection/BiDirConnectionInitializer.java: New file.

	* poa/RequestProcessor.java, orb/connection/TCP_IP_Transport.java,
	orb/dsi/ServerRequest.java, poa/POA.java,
	orb/connection/RequestInputStream.java,
	orb/connection/RequestOutputStream.java,
	orb/connection/ServerRequestListener.java,
	orb/connection/LocateRequestOutputStream.java,
	orb/connection/ReplyInputStream.java,
	orb/connection/ReplyOutputStream.java,
	orb/connection/ReplyPlaceholder.java,
	orb/connection/GIOPConnection.java,
	orb/connection/LocateReplyInputStream.java,
	orb/connection/LocateReplyOutputStream.java,
	orb/connection/ClientConnection.java,
	orb/connection/ConnectionManager.java, orb/ORB.java,
	orb/CDROutputStream.java, orb/Delegate.java,
	orb/BasicAdapter.java, orb/CDRInputStream.java: *** empty log
	message ***

2001-08-29  jacorb

	* orb/connection/TCP_IP_Transport.java: *** empty log message ***

	* orb/dynany/DynEnum.java, orb/dynany/DynSequence.java,
	orb/dynany/DynStruct.java, orb/dynany/DynAny.java,
	orb/dynany/DynArray.java: Fixed seek() in DynAny, added
	getRepresentation() to structured Dyns.

	* orb/CDROutputStream.java:
	(write_value) now supports unions with only a discriminator and no
	member values (no explicit default)

	* orb/CDRInputStream.java:
	(read_value) now supports unions with only a discriminator and no
	member values

	* orb/TypeCode.java: cosmetics

2001-08-28  jacorb

	* poa/AOM.java: removed superflous loops

2001-08-22  jacorb

	* util/threadpool/ThreadPool.java, naming/NameServer.java,
	poa/Current.java, poa/RequestProcessor.java, build.xml,
	orb/portableInterceptor/ServerRequestInfoImpl.java,
	orb/connection/new_conn/TCP_IP_GIOPTransport.java,
	orb/dsi/ServerRequest.java,
	orb/portableInterceptor/ClientRequestInfoImpl.java,
	orb/connection/new_conn/GIOPTransport.java,
	orb/connection/new_conn/ReplyListener.java,
	orb/connection/new_conn/RequestListener.java,
	orb/connection/new_conn/ServerRequestListener.java,
	orb/connection/new_conn/Server_TCP_IP_GIOPTransport.java,
	orb/connection/Transport.java,
	orb/connection/new_conn/Client_TCP_IP_GIOPTransport.java,
	orb/connection/new_conn/GIOPConnection.java,
	orb/connection/Server_TCP_IP_Transport.java,
	orb/connection/TCP_IP_Transport.java: *** empty log message ***

	* orb/connection/TCP_IP_Transport.java,
	orb/connection/Transport.java: New file.

	* orb/connection/ServerRequestListener.java: *** empty log message
	***

	* orb/connection/ServerRequestListener.java,
	orb/connection/Server_TCP_IP_Transport.java: New file.

	* orb/connection/RequestInputStream.java,
	orb/connection/RequestListener.java,
	orb/connection/RequestOutputStream.java: *** empty log message ***

	* orb/connection/RequestListener.java: New file.

	* orb/connection/ReplyListener.java,
	orb/connection/ReplyOutputStream.java,
	orb/connection/ReplyPlaceholder.java: *** empty log message ***

	* orb/connection/ReplyPlaceholder.java: New file.

	* orb/connection/NoBiDirServerReplyListener.java,
	orb/connection/ReplyInputStream.java: *** empty log message ***

	* orb/connection/ReplyListener.java: New file.

	* orb/connection/Messages.java,
	orb/connection/NoBiDirClientRequestListener.java: *** empty log
	message ***

	* orb/connection/NoBiDirClientRequestListener.java,
	orb/connection/NoBiDirServerReplyListener.java: New file.

	* orb/connection/MessageReceptor.java,
	orb/connection/MessageReceptorPool.java: *** empty log message ***

	* orb/connection/MessageReceptor.java,
	orb/connection/MessageReceptorPool.java: New file.

	* orb/connection/GIOPInputStream.java,
	orb/connection/GIOPOutputStream.java: *** empty log message ***

	* orb/connection/GIOPOutputStream.java: New file.

	* orb/connection/GIOPConnection.java: *** empty log message ***

	* orb/connection/GIOPConnection.java,
	orb/connection/GIOPInputStream.java: New file.

	* orb/connection/Client_TCP_IP_Transport.java,
	orb/connection/ConnectionManager.java: *** empty log message ***

	* orb/connection/Client_TCP_IP_Transport.java: New file.

	* orb/connection/ClientConnection.java,
	orb/connection/ClientReplyListener.java: *** empty log message ***

	* orb/connection/ClientReplyListener.java: New file.

	* orb/ORB.java, orb/build.xml, orb/CDROutputStream.java,
	orb/Delegate.java, orb/BasicAdapter.java, orb/CDRInputStream.java,
	imr/ImplementationRepositoryImpl.java,
	security/jsse/SSLServerSocketFactory.java,
	security/jsse/SSLSocketFactory.java: *** empty log message ***

2001-08-15  jacorb

	* proxy/ForwarderImpl.java, imr/ImplementationRepositoryImpl.java,
	poa/RequestProcessor.java, orb/dsi/ServerRequest.java: *** empty
	log message ***

	* imr/ImplementationRepositoryImpl.java: added test that will
	check object liveness for *every* returned object location

	* orb/ParsedIOR.java, orb/ORB.java, orb/Delegate.java,
	orb/CDROutputStream.java, orb/CDRInputStream.java,
	orb/BufferManager.java, orb/connection/http/ServerConnection.java,
	orb/connection/ReplyOutputStream.java,
	orb/connection/RequestInputStream.java,
	orb/connection/RequestOutputStream.java,
	orb/connection/LocateReplyInputStream.java,
	orb/connection/LocateRequest.java, orb/connection/Messages.java,
	orb/connection/ReplyInputStream.java,
	orb/connection/ClientConnection.java: *** empty log message ***

	* orb/connection/new_conn/TCP_IP_GIOPTransport.java: New file.

	* orb/connection/new_conn/TCP_IP_GIOPTransport.java: replacements
	for some of the old connection classes. Kept separate to be able
	to have them in parallel

	* orb/connection/new_conn/Server_TCP_IP_GIOPTransport.java: New file.

	* orb/connection/new_conn/ServerRequestListener.java,
	orb/connection/new_conn/Server_TCP_IP_GIOPTransport.java:
	replacements for some of the old connection classes. Kept separate
	to be able to have them in parallel

	* orb/connection/new_conn/RequestListener.java,
	orb/connection/new_conn/ServerRequestListener.java: New file.

	* orb/connection/new_conn/ReplyListener.java,
	orb/connection/new_conn/RequestListener.java: replacements for
	some of the old connection classes. Kept separate to be able to
	have them in parallel

	* orb/connection/new_conn/GIOPTransport.java,
	orb/connection/new_conn/ReplyListener.java: New file.

	* orb/connection/new_conn/GIOPTransport.java: replacements for
	some of the old connection classes. Kept separate to be able to
	have them in parallel

	* orb/connection/new_conn/Client_TCP_IP_GIOPTransport.java,
	orb/connection/new_conn/GIOPConnection.java: New file.

	* orb/connection/new_conn/Client_TCP_IP_GIOPTransport.java,
	orb/connection/new_conn/GIOPConnection.java: replacements for some
	of the old connection classes. Kept separate to be able to have
	them in parallel

	* orb/BasicAdapter.java, orb/CDRInputStream.java,
	orb/connection/ReplyInputStream.java,
	orb/connection/RequestInputStream.java: fixed buffer management
	bug: having a finalizer in CDRInputstream causes great harm,
	because this returns buffers that are still used. Moved finalizer
	to ReplyInputStream and RequestInputstream, because these buffers
	may safly be returned

2001-08-10  jacorb

	* orb/ORB.java: first working GIOP 1.2 revision

	* orb/BasicAdapter.java, orb/Delegate.java,
	orb/connection/RequestOutputStream.java,
	orb/connection/ServerConnection.java,
	orb/connection/ReplyInputStream.java,
	orb/connection/ReplyOutputStream.java,
	orb/connection/RequestInputStream.java,
	orb/connection/LocateRequest.java,
	orb/connection/LocateRequestInputStream.java,
	orb/connection/LocateRequestOutputStream.java,
	orb/connection/Messages.java,
	orb/connection/ClientConnection.java,
	orb/connection/LocateReplyInputStream.java,
	orb/connection/LocateReplyOutputStream.java: first GIOP 1.2
	working revision

	* orb/connection/ConnectionManager.java,
	orb/connection/ReplyReceptor.java,
	orb/connection/ServerConnection.java,
	orb/connection/http/ClientConnection.java,
	orb/connection/http/ServerConnection.java,
	proxy/ForwarderImpl.java, orb/Delegate.java,
	orb/connection/AbstractConnection.java,
	orb/connection/ClientConnection.java: fixed a synch issue where a
	Delegate was able to get a ClientConnection from the
	ConnectionManager, which was in the process of being released.

	* security/jsse/README.properties: *** empty log message ***

	* orb/standardInterceptors/SSLComponentInterceptor.java: added
	some more default options

	* security/jsse/README.properties,
	security/jsse/SSLServerSocketFactory.java,
	security/jsse/SSLSocketFactory.java: some modifications after
	suggestions from Hugo Ferreira

2001-08-09  jacorb

	* util/Environment.java: set default supported and required
	options to 0. - They are either set manually, or hard-wired by the
	SSLComponentInterceptor.

2001-08-08  jacorb

	* orb/Delegate.java, orb/ParsedIOR.java,
	orb/connection/ConnectionManager.java: some more fixes in the
	Delegate/ClientConnection complex

	* proxy/ForwarderImpl.java,
	security/level2/ServerAccessDecisionInterceptor.java,
	orb/connection/ServerConnection.java,
	orb/connection/http/ClientConnection.java,
	orb/dsi/ServerRequest.java, orb/connection/ReplyInputStream.java,
	orb/connection/ReplyOutputStream.java,
	orb/connection/RequestInputStream.java,
	orb/connection/RequestOutputStream.java,
	orb/connection/LocateRequest.java,
	orb/connection/LocateRequestInputStream.java,
	orb/connection/LocateRequestOutputStream.java,
	orb/connection/Messages.java,
	orb/connection/LocateReplyInputStream.java,
	orb/connection/LocateReplyOutputStream.java,
	orb/BasicAdapter.java, orb/connection/ClientConnection.java,
	imr/ImplementationRepositoryImpl.java: *** empty log message ***

	* orb/connection/http/ClientConnection.java,
	proxy/ForwarderImpl.java, orb/connection/ClientConnection.java:
	stuff left over from the changes in ClientConnecton and Delegate.

	* orb/connection/ClientConnection.java,
	orb/connection/ReplyInputStream.java, orb/Delegate.java: threw
	some old stuff out (keeping of object references for requests),
	revisited access modifiers

2001-08-07  jacorb

	* imr/ImplementationRepositoryImpl.java: *** empty log message ***

	* orb/connection/ConnectionManager.java: did some cleanup

2001-08-06  jacorb

	* imr/ImplementationRepositoryImpl.java: *** empty log message ***

	* orb/connection/ClientConnection.java,
	orb/connection/ConnectionManager.java, orb/ORB.java,
	orb/ParsedIOR.java, orb/Delegate.java: connection: the
	clientconnection will now open the tcp connection when the first
	request is sent, and not when the connection is created by the
	connectionmanager delegate: added synchronization so multiple
	location forwards are handled correctly

2001-08-03  jacorb

	* security/jsse/build.xml: newly created

	* security/build.xml: added target jsse

2001-07-30  jacorb

	* security/jsse/README.properties,
	security/jsse/SSLServerSocketFactory.java,
	security/jsse/SSLSocketFactory.java,
	security/jsse/KeyStoreUtil.java: developed some more

	* orb/TypeCode.java, orb/ORBSingleton.java,
	orb/CDRInputStream.java, orb/CDROutputStream.java,
	ir/gui/typesystem/remote/IRValueMember.java,
	ir/gui/typesystem/remote/RemoteTypeSystem.java,
	ir/gui/typesystem/remote/IRValueMember.java,
	ir/gui/typesystem/remote/IRValueBox.java,
	ir/gui/typesystem/remote/IRValueBox.java,
	ir/gui/typesystem/remote/IRValue.java,
	ir/gui/typesystem/Value.java,
	ir/gui/typesystem/remote/IRValue.java,
	ir/gui/typesystem/Value.java: Patch by Ole Husgaard <osh@sparre.dk>.

	* orb/CDRInputStream.java (CDRInputStream):
	Extend org.omg.CORBA_2_3.portable.InputStream.
	(valueMap): New field.
	(read_value): New methods, according to spec.
	(read_special_value): New internal method.

	* orb/CDROutputStream.java (CDROutputStream): Extend
	org.omg.CORBA_2_3.portable.OutputStream.
	(valueMap): New field.
	(write_value(Serializable, BoxedValueHelper)): New methods,
	according to spec.
	(write_special_value): New internal method.

	* orb/ORB.java (lookup_value_factory): Dummy implementation.

	* orb/ORBSingleton.java (create_alias_tc): Adapted to new TypeCode
	constructor.
	(create_value_box_tc): Implemented.

	* orb/TypeCode.java (TypeCode): The constructor for tk_alias is
	now also used for tk_value_box (new parameter `kind').
	(content_type): Make it work for tk_value_box also.

	* idl/ValueBoxDecl.java (typeName): Changed to return the name of
	the Java type to which the value box is mapped.
	(boxTypeName): New method; returns the Java name of the box type.
	(holderName): Use the above.
	(helperName): New method, dito.
	(printReadExpression, printWriteStatement): Delegate to
	Input/OutputStream, not to the Helper class.
	(getTypeCodeExpression): Let this always be based on the
	boxTypeName.
	(printHolderClass, printHelperClass, printValueClass): Make it
	right.

2001-07-29  jacorb

	* orb/standardInterceptors/SSLComponentInterceptor.java:
	fixed some issues with required/supported options

	* security/ssl/SSLServerSocketFactory.java,
	security/ssl/SSLSocketFactory.java,
	security/ssl/ServerInvocationInterceptor.java,
	security/level2/CurrentImpl.java,
	security/level2/PrincipalAuthenticatorImpl.java: fixed some issues
	with the supported/required options

	* orb/BufferManager.java, orb/CDRInputStream.java,
	orb/CDROutputStream.java: fixed a few minor bugs

2001-07-25  Nicolas Noffke  <noffke@inf.fu-berlin.de>

	* orb/Delegate.java, orb/ParsedIOR.java: added support for IORs
	without IIOP profile

2001-07-24  jacorb

	* idl/AliasTypeSpec.java:
	(holderName) fixed unwinding to original type in case the original
	type is an alias

2001-07-23  jacorb

	* util/ObjectUtil.java, orb/ORB.java: *** empty log message ***

2001-07-20  jacorb

	* orb/ORB.java, security/jsse/SSLServerSocketFactory.java,
	security/jsse/SSLSocketFactory.java, security/build.xml,
	security/jsse/README.properties: *** empty log message ***

2001-07-16  jacorb

	* poa/RequestController.java: else clause added

2001-07-16  Nicolas Noffke  <noffke@inf.fu-berlin.de>

	* security/jsse/X509KeyManagerImpl.java,
	security/jsse/SSLSocketFactory.java,
	security/jsse/SecurityServiceInitializer.java,
	security/jsse/ServerInvocationInterceptor.java,
	security/jsse/PrincipalAuthenticatorImpl.java,
	security/jsse/README.properties,
	security/jsse/SSLServerSocketFactory.java: *** empty log message
	***

2001-07-14  jacorb

	* idl/NameTable.java:
	(checkScopingRules) only check in the immediately enclosing scope,
	not all outer scopes.

2001-07-06  Nicolas Noffke  <noffke@inf.fu-berlin.de>

	* orb/Delegate.java: _invoke(): removed an else-branch that was
	useless

2001-07-05  Nicolas Noffke  <noffke@inf.fu-berlin.de>

	* orb/standardInterceptors/build.xml: set basedir correctly

	* orb/standardInterceptors/SSLComponentInterceptor.java: hard
	wired the NoDelegation option into the supported options

2001-07-03  Nicolas Noffke  <noffke@inf.fu-berlin.de>

	* security/ssl/SSLSocketFactory.java: *** empty log message ***

	* security/ssl/SSLServerSocketFactory.java,
	security/ssl/SSLSocketFactory.java: will only request credentials
	via current if necessary. this will not try to open any keystores
	if not necessary.

	* security/jsse/README.properties: *** empty log message ***

	* orb/connection/ClientConnection.java: <init> leave client_count
	to 0, because inc'ing is done by Delegate

	* orb/connection/ConnectionManager.java: removed the e.incUsers()
	in getConnection, because inc'ing is done by Delegate

	* imr/ImplementationRepositoryImpl.java: -RequestReceptor now
	closes the connection after finishing an request, so connections
	don't get piled up.  -cosmetics

	* security/jsse/ServerInvocationInterceptor.java,
	security/jsse/PrincipalAuthenticatorImpl.java: *** empty log
	message ***
