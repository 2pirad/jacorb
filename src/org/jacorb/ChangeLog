2009-08-04  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/AbstractORBInitializer.java, orb/ORB.java: Prismtech
	JAC#440: PICurrent.set_slot/get_slot should raise BAD_INV_ORDER if
	invoked during orb initialitzation

	* imr/ImplementationRepositoryImpl.java, orb/CDROutputStream.java,
	orb/Delegate.java, orb/ParsedIOR.java, orb/dsi/ServerRequest.java,
	orb/giop/ClientConnectionManager.java,
	orb/giop/GIOPConnection.java, orb/giop/MessageInputStream.java,
	orb/giop/NoBiDirClientRequestListener.java,
	orb/giop/ReplyOutputStream.java,
	orb/giop/RequestOutputStream.java,
	orb/giop/ServerRequestListener.java, util/ObjectUtil.java:
	Pristmtech JAC#427: creation/configuration of outputstreams has
	been clarified - always pass in an orb

2009-06-12  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/util/PrintIOR.java: PrismTech JAC#400: PrintIOR output has
	been enhanced with different ORB type recognition and multiline
	IOR files support

2009-06-09  Alexander Bykov  <alexander.bykov@prismtech.com>

	* idl/Environment.java, idl/Interface.java: PrismTech JAC#406:
	fixed issue where the IDL compiler generated imports for the
	unnamed package

2009-06-02  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/factory/SocketFactoryManager.java: PrismTech JAC#417: fix
	that allows custom SocketFactory class plugins to specify their
	dependency on the ORB either as org.jacorb.orb.ORB or
	org.omg.CORBA.ORB in their constructor.

2009-05-27  Andre Spiegel  <spiegel@gnu.org>

	* Version 2.3.1 released.

2009-05-25  Andre Spiegel  <spiegel@gnu.org>

	* config/JacORBConfiguration.java (ctor): Don't call initLogging()
	for the singleton ORB.

2009-05-24  Andre Spiegel  <spiegel@gnu.org>

	* orb/giop/GIOPConnection.java (getMessage, sendMessage): Add
	debug logging statements.

	* orb/etf/StreamConnectionBase.java (read, write): Add debug
	logging statements.

	* config/JdkLoggingInitializer.java (init): Set the log level on
	the handler as well.

2009-05-22  Andre Spiegel  <spiegel@gnu.org>

	* config/JacORBConfiguration.java (ctor): Change initialization
	order so attributes are always set.
	(getLogger): Add logic for splitting subloggers based on implname.

	* config/JacORBConfiguration.java (initLogging): Call
	LoggingInitializer.init() with a single parameter only.

	* config/JdkLoggingInitializer.java (init): Remove ORB parameter.
	Call substituteImplname().

	* config/LoggingInitializer.java (substituteImplname): New method
	for subclass use.
	(init): Remove ORB parameter, that's included in the
	configuration.

2009-05-20  Andre Spiegel  <spiegel@gnu.org>

	* config/JacORBConfiguration.java: Code for initializing the
	logging backend has been externalized.

	* config/JdkLoggingInitializer.java, config/LoggingInitializer.java:
	Initial revision.

2009-05-18  Andre Spiegel  <spiegel@gnu.org>

	* config/JacORBConfiguration.java: Use logging even for the
	initial messages during property-loading.

2009-05-15  Andre Spiegel  <spiegel@gnu.org>

	* orb/CDROutputStream.java (write_value, write_repository_id,
	write_codebase, write_value_internal): Use size() rather than pos
	for indirection markers, accounting for deferred writes.
	Suggested by Rob Ratcliff.

2009-05-14  Andre Spiegel  <spiegel@gnu.org>

	* config/JacORBLogFormatter.java: Remove some 1.5-specific code.

	* config/ConsoleLogger.java, config/LogKitLogger.java,
	config/LogKitLoggerFactory.java, config/LoggerFactory.java,
	config/NullLogger.java, util/ConsoleLoggerFactory: Removed, these
	files are obsolete with SLF4J.

	* config/JacORBConfiguration.java (getLogger): Add a comment
	explaining use of the different log levels.
	(usingJdkLogging): Use ObjectUtil.classForName().

	* config/JacORBConfiguration.java (logger, loggerFactory,
	loggerFactoryClzName): Removed, these fields were no longer used.

2009-05-13  Andre Spiegel  <spiegel@gnu.org>

	* config/JacORBConfiguration.java (initLogging): Rewritten to
	configure JDK logging.
	(ctor): Use it.

	* config/JacORBLogFormatter.java: Initial revision.

2009-05-06  Alexander Bykov  <alexander.bykov@prismtech.com>

	* config/ConsoleLogger.java, config/LogKitLogger.java,
	config/LogKitLoggerFactory.java, config/NullLogger.java,
	util/ConsoleLoggerFactory.java: Added default implementations for
	LogKit and Console loggers. Fixed compilation errors.

2009-05-05  Alexander Bykov  <alexander.bykov@prismtech.com>

	* config/LoggerFactory.java, orb/listener/SSLListenerUtil.java.ssl:
	Changed Logger to org.slf4j.Logger

2009-05-03  Andre Spiegel  <spiegel@gnu.org>

	* config/Configuration.java (getLogger): Renamed from
	getNamedLogger(), changed to return an SLF4J logger.

	* config/JacORBConfiguration.java (getLogger): Implement new
	interface method.
	(getNamedLogger): Removed.
	(initLogging): Commented out for now, we don't intend to configure
	the backend logging system from within JacORB at all.

	* Everywhere else: Change imports to use SLF4J instead of Avalon,
	replace fatalError() with error().
	
2009-04-30  Alexander Bykov  <alexander.bykov@prismtech.com>

	* idl/Method.java, idl/OpDecl.java: RTJ#476/JAC#410: Enhance
	generation to close streams

2009-04-29  Alexander Bykov  <alexander.bykov@prismtech.com>

	* config/JacORBConfiguration.java: Use default value for numeric
	parameters when empty string was used as parameter's value

2009-04-28  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/Delegate.java, orb/giop/RequestOutputStream.java:
	JAC#410: fixes for stream closure with sync scope none

2009-04-25  Andre Spiegel  <spiegel@gnu.org>

	Changes to remove dependency on Avalon for configuration.

	* config/JacORBConfiguration.java: Remove Avalon superclass; this
	class is now self-contained.

	* config/Configuration.java (getAttribute*): New methods which
	were formerly defined in the Avalon superinterface.

	* config/Configurable.java, config/ConfigurationException.java:
	Initial revision.

	* Everywhere else: Change imports to use only JacORB's own
	configuration classes.
	
2009-04-24  Alexander Bykov  <alexander.bykov@prismtech.com>

	* poa/POA.java: JAC#415: let POA.reference_to_servant raise
	BAD_PARM if a null reference is passed in

2009-04-08  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/util/PrintIOR.java: JAC#380: issue test and documentation update

2009-04-07  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/factory/AbstractSocketFactory.java,
	orb/factory/SocketFactory.java: JAC#376: enhanced socket factory
	documentation

2009-04-06  Alexander Bykov  <alexander.bykov@prismtech.com>

	* config/JacORBConfiguration.java,
	config/LogKitLoggerFactory.java, config/LoggerFactory.java:
	JAC#384: fix for bug during logfile initialization routine

2009-03-30  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/factory/AbstractSocketFactory.java,
	orb/factory/DefaultSocketFactory.java,
	orb/factory/FixedAddressSocketFactory.java,
	orb/factory/PortRangeSocketFactory.java,
	security/ssl/sun_jsse/SSLSocketFactory.java: JAC#375: fix for
	broken socket connect timeout mechanism

	* orb/Delegate.java, orb/giop/GIOPConnection.java: JAC#359: fix
	for deadlock caused by fix for bugzilla #708 (addition from
	JAC#609)

2009-03-27  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/etf/ConnectionBase.java, orb/etf/StreamConnectionBase.java,
	orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPConnection.java,
	orb/iiop/IIOPLoopbackConnection.java,
	orb/iiop/ServerIIOPConnection.java: JAC#358: fixed exception
	handling to ensure that the SSLListener is always invoked

2009-03-26  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/giop/GIOPConnection.java,
	security/ssl/sun_jsse/SSLServerSocketFactory.java,
	security/ssl/sun_jsse/SSLSocketFactory.java: JAC#359: fix for
	deadlock caused by fix for bugzilla #708

2009-03-23  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/CDROutputStream.java: Jac#369 Make compactTypecodes a
	boolean option

2009-03-06  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/CDRInputStream.java, orb/CDROutputStream.java: JAC#352
	PrismTech patch back - fixes for wstring valuetype
	interoperability issue with the sun orb

2009-03-04  Andre Spiegel  <spiegel@gnu.org>

	* orb/iiop/IIOPProfile.java (addNetworkAddresses): New function,
	adds the addresses of all known network interfaces on this machine.
	(addAlternateAddresses): Use it, if
	jacorb.iiop.alternate_addresses=auto.

2009-03-03  Andre Spiegel  <spiegel@gnu.org>

	* orb/iiop/IIOPProfile.java (addAlternateAddresses): New method,
	reads new configuration option jacorb.iiop.alternate_addresses and
	adds TAG_ALTERNATE_IIOP_ADDRESS values to the profile for it.
	(configure): Use it.

2009-01-27  Alexander Bykov  <alexander.bykov@prismtech.com>

	* ir/RepositoryID.java, orb/CDRInputStream.java,
	orb/CDROutputStream.java: Fixed wstring valuetype interoperability
	issue with the sun orb (JAC#352)

2009-01-16  Alexander Bykov  <alexander.bykov@prismtech.com>

	* orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPConnection.java:
	Fix for IIOPConenction - Test failures (JAC#329)

	* orb/CDRInputStream.java: More strict checking of correct string
	sizes during demarshalling of CDR streams (JAC#288) has been added

	* orb/giop/ClientConnectionManager.java: Fix for iteration during
	shutdown (JAC#264)

	* orb/ORB.java,
	security/ssl/sun_jsse/ServerInvocationInterceptor.java: Security
	Classes Cleanup (JAC#190) - commented code has been removed

2009-01-08  Andre Spiegel  <spiegel@gnu.org>

	* orb/giop/ServerGIOPConnection.java (tryClose, tryDiscard):
	Fix javadoc.

2008-12-17  Ciju John  <johnc@ociweb.com>

        * orb/ParsedIOR.java: Parser was discarding additional profiles
	  during Object creation. Modified to create multi-profile
	  Objects.

2008-11-25  Nick Cross  <nick.cross@prismtech.com>

	* ir/IRServer.java, ir/RepositoryImpl.java, ir/TypeCodeUtil.java:
	Remove #ifjdk markers

2008-11-21  Nick Cross  <nick.cross@prismtech.com>

	* idl/AliasTypeSpec.java, idl/FixedPointType.java,
	idl/JacIDL.java, idl/OpDecl.java, idl/StructType.java,
	idl/ValueBoxDecl.java, idl/parser.cup, orb/Any.java,
	orb/CDRInputStream.java, orb/CDROutputStream.java,
	orb/dsi/ServerRequest.java, orb/dynany/DynAnyFactoryImpl.java,
	orb/dynany/DynFixed.java:
	PrismTech patch JAC144/JAC516/JAC443. Fixes/changes for
	propagation of userexception message detail in service
	contexts. Fixes for read/write fixed types.

2008-11-18  Nick Cross  <nick.cross@prismtech.com>

	* imr/ImplementationRepositoryImpl.java, orb/build.xml:
	PrismTech patch: JAC72 Remove redundant code.

	* Fix XML include file referencing to remove warning.

	* idl/JacIDL.java, idl/ScopedName.java, idl/parser.cup,
	ir/Contained.java, ir/RepositoryImpl.java:
	Patch from PrismTech:
	JAC72 Remove -omg flag from IDL compiler and solely use i2jpackage.
	JAC367 Fixes for loading IDL into InterfaceRepository with pragma
	prefix and i2jpackage.

2008-11-14  Nick Cross  <nick.cross@prismtech.com>

	*  Eclipse clean imports.

2008-11-11  Andre Spiegel  <spiegel@gnu.org>

	* BufferManager.java (singletonConfigure): Synchronize, as
	suggested by Simar Paul Singh in bug #834.

2008-10-09  Phil Mesnier  <mesnier_p@ociweb.com>

	* imr/ImplementationRepositoryImpl.java, imr/ServerTable.java:
	Fix for bug 845 - IMR reconnect trouble

2008-09-22  Alphonse Bendt  <bendt@macnews.de>

	* notification/filter/EvaluationResult.java
	(extractIntoEvaluationResult): add more switch cases. fixes #748

	* notification/jmx/jboss/JBossCOSNotificationService.java (members):
	add defaults values. fix for #803

	* notification/filter/EvaluationResult.java (compareTo): fix for #790

2008-08-11  Andre Spiegel  <spiegel@gnu.org>

	* orb/iiop/IIOPProfile.java (getSSLPort): Add a null pointer check.

2008-05-05  Andre Spiegel  <spiegel@gnu.org>

	* orb/giop/GIOPConnection.java (getMessage, sendMessage):
	Remove direct calls to close() in error
	conditions.  It is enough to call this.streamClosed() and let outer
	objects do the real close().  This is the final patch for bug #708 as
	suggested by Marc Heide on 2006-12-11.

2008-04-04  Andre Spiegel  <spiegel@gnu.org>

	* orb/Delegate.java (request): Call
	CDROutputStream.setCodeSets() instead of setCodeSet().  Part of
	Russell Gold's patch for bug #305, had not been checked in by
	mistake.

2008-03-24  Andre Spiegel  <spiegel@gnu.org>

	* orb/giop/GIOPConnection.java, orb/CDROutputStream.java,
	orb/giop/ClientConnection.java, orb/giop/CodeSet.java,
	orb/giop/ServerRequestListener.java,
	orb/standardInterceptors/CodeSetInfoInterceptor.java,
	orb/CDRInputStream.java: Patch by Russell Gold that refactors
	CodeSet logic, adding support for UCS-2.  Bug #305.

2008-03-24  Andre Spiegel  <spiegel@gnu.org>

	* IIOPProfile.java, ClientIIOPConnection.java:
	Patch by Russell Gold to fix CSIv2 recognition, bug #832.

2007-11-29  Nick Cross  <nick.cross@prismtech.com>

	* security/sas/GSSUPContextSpi.java: bug#800 - fix for JDK1.6 port
	- add isInitiator

2007-11-19  Ciju John  <johnc at ociweb dot com>

        * orb/Delegate.java: When ServantManager is a ServantLocator the
	  POA's local request count needs to be decremented only in the
	  case of an exception.

        * poa/RequestController.java: A negative POA's local request count
	  is invalid.

2007-08-17  Phil Mesnier  <phil.mesnier@ociweb.com>

	* orb/Delegate.java: Fix for excessive locking during remote
	invocations. This impacts multithreaded applications that need to
	use the Delegate for non-invocation tasks such as identity
	comparisons while simultaniously making invocations. See
	test/delegateSync for an example scenario.

2007-06-06  Francisco Reverbel <reverbel@ime.usp.br>

	* orb/iiop/IIOPListener.java: Fix for bug #771 in JacORB's
	bugzilla system.

2007-06-01  Francisco Reverbel <reverbel@ime.usp.br>

	* orb/iiop/IIOPProfile.java: Fix for bug #783 in JacORB's bugzilla
	system.

2007-05-31  Francisco Reverbel <reverbel@ime.usp.br>

	* security/ssl/sun_jsse/JSSEUtil.java: Fix for bug #782 in
	JacORB's bugzilla system.

2007-04-27  Francisco Reverbel <reverbel@ime.usp.br>

	* orb/CDRInputStream (handle_chunking): Do not confuse a null
	value tag with a chunk size tag; the latter must be positive.
	(read_untyped_value, readChunkSizeTag): changes for
	correctness (to ensure that chunk_end_pos is set to -1 if we are
	not within a chunk) and for clarity.

2007-04-26  Francisco Reverbel <reverbel@ime.usp.br>

	* orb/CDROutputStream (write_value_header(String[], String),
	write_value_header(String), write_value_internal,
	write_value(Serializable, BoxedValueHelper)): The size of a chunk
	should not include any bytes of padding that might have been added
	after the chunk for alignment purposes. These changes allow JacORB
	to interoperate with the ORB in Sun's JDK 1.5 with chunking of
	custom RMI valuetypes enabled, as it should be (no need to set
	jacorb.interop.chunk_custom_rmi_valuetypes=off for
	interoperability with the ORB in Sun's JDK 1.5).

2007-04-18  Phil Mesnier  <phil.mesnier@ociweb.com>

	* config/JacORBConfiguration.java: Fix to allow the processing of
	nested properties during orb initialization. See test case
	test/nestedproperties. Thanks to Andy Ling <andy dot ling at
	quantel dot com> for this patch

2007-02-20  Gerald Brose  <gerald.brose@acm.org>

	* Version 2.3.0 released.

2007-02-17  Gerald Brose  <gerald.brose@acm.org>

	* util/Version.java: (modified) new version number and date

2007-02-15  Andre Spiegel  <spiegel@gnu.org>

	* orb/Delegate.java, orb/ServantDelegate.java,
	orb/portableInterceptor/RecursionAwareCI.java,
	poa/RequestProcessor.java: Patch by Jacek Cala to implement
	get_component(), submitted in bug #744.

2007-02-14  Andre Spiegel  <spiegel@gnu.org>

	* orb/ORB.java (string_to_object): If an exception occurs, log
	that at ERROR level and with a better message.

	* orb/policies/RelativeRequestTimeoutPolicy.java,
	orb/policies/RelativeRoundtripTimeoutPolicy.java: Add convenience
	constructors back in.  Add Javadoc.

	* orb/etf/ProfileBase.java (encapsulation): Fix typo in Javadoc.

	* orb/DefaultProfileSelector.java: Add some Javadoc.

2007-02-10  Gerald Brose  <gerald.brose@acm.org>

	* build.xml: Removed Trading

	* trading/db/DatabaseMgr.java, trading/db/OfferDatabase.java,
	trading/db/TypeDatabase.java, trading/db/build.xml,
	trading/db/pse/PSEDatabaseMgr.java,
	trading/db/pse/offers/AnyValue.java,
	trading/db/pse/offers/DynPropValue.java,
	trading/db/pse/offers/Offer.java,
	trading/db/pse/offers/OfferDatabaseImpl.java,
	trading/db/pse/offers/OfferList.java,
	trading/db/pse/offers/OfferProperty.java,
	trading/db/pse/offers/ProxyOffer.java,
	trading/db/pse/offers/ProxyPolicy.java,
	trading/db/pse/offers/README,
	trading/db/pse/offers/TypeCodeValue.java,
	trading/db/pse/util/TransactionMgr.java, trading/CHANGES,
	trading/INSTALL, trading/NOTES, trading/README,
	trading/README.PROPERTIES, trading/TradingService.java,
	trading/build.xml: *** empty log message ***

2007-02-07  Andre Spiegel  <spiegel@gnu.org>

	* idl/parser.cup: New option -addbackend, suggested by Juergen
	Weber in bug #754.

2007-02-06  Andre Spiegel  <spiegel@gnu.org>

	* imr/ImplementationRepositoryImpl.java,
	imr/ServerStartupDaemonImpl.java: Increase the level of some of
	the log messages. In response to bug #752.

	* idl/ArrayTypeSpec.java, idl/FixedPointType.java,
	idl/IDLTreeVisitor.java, idl/SimpleTypeSpec.java,
	idl/StringType.java, idl/StructType.java, idl/TypeSpec.java,
	idl/VectorType.java, idl/VoidTypeSpec.java,
	idl/javamapping/JavaMappingGeneratingVisitor.java: Complete
	elements of the visitor pattern. Patch by Juergen Weber, submitted
	in bug #751.

	* orb/portableInterceptor/InterceptorManager.java (destroy):
	Patch to prevent a ThreadLocal leak, fixing bug #747.

	* orb/giop/Messages.java (matchGIOPMagic): New method, suggested
	by Juergen Weber in bug #745.

	* orb/giop/GIOPConnection.java (getMessage): Use it.

	* orb/giop/GIOPConnection.java: Use this.toString() in all log
	messages, so that a particular connection can be identified.
	Fix for bug #744.

	* orb/giop/ServerGIOPConnection.java (sendCloseConnection):
	Augment log message.

	* orb/giop/GIOPConnection.java: Moved class
	StatisticsProviderAdapter into a separate file.

	* orb/giop/StatisticsProviderAdapter.java: Initial revision,
	separated from GIOPConnection.java.

	* orb/etf/StreamConnectionBase.java (read): Change signature to
	return the number of bytes actually read. Use max_length
	parameter, which was previously ignored.
	(flush, read, write): Add javadoc.

2007-02-02  Andre Spiegel  <spiegel@gnu.org>

	* orb/ORB.java (getGIOPConnectionManager, getImR, getPOACurrent,
	getRootPOA, getServerAddress, getTransportManager): Synchronized,
	to avoid a race condition that was spotted by Mike Olivieri.

2007-01-26  Alphonse Bendt  <bendt@prismtech.com>

	* util/BuildVersion.template: made versionInfo public to allow
	others to reference it

2007-01-17  Alphonse Bendt  <bendt@prismtech.com>

	* util/BuildVersion.template, util/Version.java, util/Version.template:
	renamed Version.template to Version.java
	added BuildVersion.template which is patched during build
	add version.tpl script template

2007-01-09  Alphonse Bendt  <bendt@prismtech.com>

	* util/Version.java, util/Version.template: added a template for
	Version.java to allow Version.java to be changed from within the
	build

2007-01-08  Alphonse Bendt  <bendt@prismtech.com>

	* orb/CDRInputStream.java: fixed regression bug

2006-12-06  Alphonse Bendt  <bendt@prismtech.com>

	* orb/rmi/PortableRemoteObjectDelegateImpl.java (toTie):
	retry in case of classnotfound

2006-11-30  Alphonse Bendt  <bendt@prismtech.com>

	* orb/CDROutputStream.java, util/IdentityHashMap.java,
	util/ObjectUtil.java: more cleanup

	removed pre JDK1.4 code

2006-11-27  Alphonse Bendt  <bendt@prismtech.com>

	* notification/build.xml:
	removed pre jdk1.4 specific support in the build.xml

	* orb/Any.java, orb/CDRInputStream.java, orb/CDROutputStream.java:
	fix fixed_value related tests

2006-11-24  Alphonse Bendt  <bendt@prismtech.com>

	* security/ssl/sun_jsse/SSLSocketFactory.java,
	orb/factory/AbstractSocketFactory.java,
	orb/factory/DefaultSocketFactory.java,
	orb/factory/FixedAddressSocketFactory.java,
	orb/factory/PortRangeSocketFactory.java (createSocket): fix to
	ensure that factory classes honour the timeout setting

	* notification/util/GNUPatternWrapper.java,
	notification/util/JakartaRegexpPatternWrapper.java,
	notification/util/PatternWrapper.java: removed unused classes (we
	can assume JDK1.4)

	* ir/Container.java (loadContents): convert / to .

	* config/JacORBConfiguration.java (init):
	only print a warning when loglevel > 0

2006-11-15  Alphonse Bendt  <bendt@prismtech.com>

	* orb/Delegate.java: bugzilla #735

	test and fix

2006-10-31  Andre Spiegel  <spiegel@gnu.org>

	* orb/giop/GIOPConnection.java (sendMessage):
	Call releaseWriteLock() before calling streamClosed() in
	in error situations. Patch by Marc Heide, fixing bug #708.

2006-10-25  Alphonse Bendt  <bendt@prismtech.com>

	* orb/util/PrintIOR.java (printIOR): fetch object key from the
	profile not from the pior as its otherwise the same everytime

2006-10-14  Gerald Brose  <gerald.brose@acm.org>

	* Version 2.3.0 beta 2 released.

2006-10-14  Andre Spiegel  <spiegel@gnu.org>

	* idl/Interface.java (hasAbstractBase): Add missing recursive check.

2006-10-13  Andre Spiegel  <spiegel@gnu.org>

	* idl/parser.cup: Changes to implement attribute exceptions.

	* idl/lexer.java (init): Add "getraises" and "setraises" keywords.

	* idl/AttrDecl.java (getRaisesExpr, setRaisesExpr): New fields.
	(parse, setEnclosingSymbol, setPackage): Make sure to
	update the above when appropriate.

	* idl/Method.java (raisesExpr): New field.
	(ctor): Initialize it from new argument.
	(printDelegatedMethod, printInvocation, printMethod,
	printSignature): Generate the appropriate code for attribute
	exceptions.

	* idl/AttrRaisesExpr.java: Initial revision.

	* idl/SymbolList.java (ctor): New constructor that initializes the
	list with a single declarator, used for attribute exceptions.

	* idl/RaisesExpr.java (ctor): Two new versions that are called
	directly from the parser.

2006-10-13  Andre Spiegel  <spiegel@gnu.org>

	* idl/ArrayTypeSpec.java, idl/FixedPointType.java,
	idl/OctetType.java, idl/SwitchBody.java, idl/UnionType.java: Made
	several fields public, responding to bug #714.

	* idl/Interface.java (printNarrow): Remove the supposed
	optimization of testing obj.getClass() == <stubclass>.  It does
	not seem to improve anything.

2006-10-12  Andre Spiegel  <spiegel@gnu.org>

	* config/JacORBConfiguration.java (init):
	Correct property-loading order: Load custom.props after orbid
	properties have been loaded from all locations.

2006-10-11  Iliyan Jeliazkov  <iliyan@ociweb.com>

	* ir/ConstantDef.java: Introduced additional ctor parameter (poa)
	to be able to properly initialize the class instances in Contained
	(below).

	* ir/Contained.java: Passing the poa reference to the ConstantDef
	ctor.

	* ir/IDLType.java: Adding a missing return out of a switch statement.

2006-10-11  Andre Spiegel  <spiegel@gnu.org>

	* idl/Interface.java (printNarrow, hasAbstractBase,
	printStubInterposition, printElseNarrowFailed): New methods.
	(printHelper): Use them to generate all the appropriate narrow
	methods.

2006-09-10  Andre Spiegel  <spiegel@gnu.org>

	* orb/ORBSingleton.java (getLogger): New method, for testing.

2006-09-04  Alphonse Bendt  <bendt@prismtech.com>

	* orb/CDRInputStream.java, orb/CDROutputStream.java: bugzilla #667

	added test and fix. thanks to Rich Doyle for reporting and
	providing a fix.

2006-09-01  Alphonse Bendt  <bendt@prismtech.com>

	* orb/CDROutputStream.java: bugzilla #722

	testcase and fix
	thanks to Scott Melby for reporting and providing a fix

2006-08-29  Andre Spiegel  <spiegel@gnu.org>

	* poa/policy/IdAssignmentPolicy.java,
	poa/policy/IdUniquenessPolicy.java,
	poa/policy/ImplicitActivationPolicy.java,
	poa/policy/LifespanPolicy.java,
	poa/policy/RequestProcessingPolicy.java,
	poa/policy/ServantRetentionPolicy.java,
	poa/policy/ThreadPolicy.java: Remove private no-arg constructors.
	They are not necessary, since each class does have a public
	non-default constructor.  This brings test coverage for this
	package up into the 80% range.

2006-08-29  Alphonse Bendt  <bendt@prismtech.com>

	* orb/giop/ReplyPlaceholder.java (getInputStream):
	simplified synchronization code a bit

	this fixes bugzilla #721 reported by Piotr Bazan

	* orb/ReplyReceiver.java (configure):
	use type specific accessor to get configuration

	* orb/Delegate.java (invoke_internal): (invoke_oneway):

	configure ReplyReceiver after creation.
	this is a fix for bugzilla #721 reported by Piotr Bazan

2006-08-16  Iliyan Jeliazkov  <iliyan@ociweb.com>

	* orb/giop/TransportListener.java, orb/giop/TransportManager.java:
	Updated to silence warnings from pmd and findbugs

	* build.xml:
	Moved TransportCurent-related stuff to its own dedicated build.xml

	* transport/build.xml:
	Adding a dedicated build file for the transport current stuff

2006-08-11  Iliyan Jeliazkov  <iliyan@ociweb.com>

        Introducing the Transport Current (TC) implementation. TC is an
        interface that gives interceptors and servants access to
        information about the Transport, which has been selected by the
        current thread, running the ORB. TC is designed for providing
        access to Transport-specific information for statistical and
        measurement purposes (read-only). The idea is to provide users
        with an extensible, interface-based facility for obtaing
        information about the bytes or messages exchanged, specific
        endpoints details like ports, hosts, etc.

        The associated unit tests are available at
        $JACORB_HOME/test/regression/src/org/jacorb/test/transport,
        including the test/regression/idl/TransportCurrentServer.idl.

        * idl/jacorb/IIOPTransportCurrent.idl: The IDL interface for an
        IIOP-specific Transport Current object.

        * idl/jacorb/TransportCurrent.idl: The IDL interface for a generic
        Transport Current object.

        * idl/build.xml: Fixed the parser.notRequired property, which was
        giving me hell. The change is most likely not necessary for the
        final change set.

        * orb/Delegate.java:
        * poa/RequestProcessor.java: Added a call to
        orb.notifyTransportListeners(GIOPConnection) on the request
        processing path in order to be able to provide the TC
        infrastructure with information about the Transport. This covers
        respectively the client- and the server-side part of the
        processing.

        * orb/ORB.java: Added notifyTransportListeners (GIOPConnection)
        method to provide a shortcut to the hook, required by the
        Transport Current functionality.

        * orb/giop/GIOPConnection.java: Added new member;
        statistics_provider_adapter, implementing a simple Chain of
        Responsibility pattern for reacting to I/O events.  Interested
        parties would register a StatisticsProvider implementation to
        receive the corresponding notifications.  The TransportCurrent
        feature does just that.  This is a generalization of the existing
        statistics_provider usage, which I nevertheless left in to avoid
        disturbing any selection strategies that may use it at
        present. Added a package-level (default) accessor for the
        protected profile member. This makes it possible to query the
        GIOPConnection's profile from the TC feature.

        * src/org/jacorb/orb/giop/ServerGIOPConnection.java: Updated to
        use the new StatisticsProviderAdapterfor Transport-related
        notifications.

        * orb/giop/TransportListener.java: Introduced a GIOP-level
        Listener interface to enable TC (and similar) to be able to
        register for Transport selection events.

        * orb/giop/TransportManager.java: Added members
        (notifyTransportListeners, addTransportListener, listener) in
        support of a lightweight framework - the foundation upon which the
        TC functionality is built.

        * orb/iiop/IIOPConnection.java:
        * orb/iiop/ServerIIOPConnection.java: Pulled getSocket accessor up
        the hierarchy to make the information available to the Transport
        Current implementation.

        * src/org/jacorb/transport/AbstractTransportCurrentInitializer.java:
        An ORB initializer base class for a Transport Current.

        * src/org/jacorb/transport/DefaultCurrentImpl.java: A default
        Transport Current implementation.

        * src/org/jacorb/transport/DefaultStatisticsProvider.java:
        Implementation of the interface to enable the TC to receive the
        necessary notifications.

        * src/org/jacorb/transport/IIOPCurrentImpl.java: An IIOP-specific
        implementation of a Transport Current.

        * src/org/jacorb/transport/IIOPTransportCurrentInitializer.java:
        The corresponding initializer.

        * src/org/jacorb/transport/TransportCurrentInitializer.java
        The corresponding initializer.


2006-08-08  Gerald Brose  <gerald.brose@acm.org>

        * util/Version.java: Bump to version 2.3-Beta.

2006-08-04  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/CDROutputStream.java: Do not clear the buffer padding
        when (re)writing the chunk size tag. In the case of a
        non-sequential write, clearing buffer positions after the data
        just written is likely to erase data prevously written. (This was
        indeed happening!)

2006-08-03  Alphonse Bendt  <bendt@prismtech.com>

        * imr/ImplementationRepositoryImpl.java, orb/CDRInputStream.java,
        orb/Delegate.java, orb/ORB.java, orb/ParsedIOR.java,
        orb/util/FixIOR.java, orb/util/PrintIOR.java: simplified c'tor of
        ParsedIOR

        * idl/Interface.java (printImplSkeleton): cosmetics
        (printHelper): enhance code generation
        (stubName): new method

        * idl/IdlSymbol.java (printClassComment): don't use tabs in comment

        * orb/factory/PortRangeServerSocketFactory.java: made
        PortRangeServerSocketFactory implement Configurable again.  thanks
        to Gábor Sziklai for reporting.

        * idl/OpDecl.java (print_sendc_Method): minor enhancement to
        generated code to prevent compiler warnings

        * idl/Interface.java: (printImplSkeleton)
        (printLocalTie): minor enhancement to generated code to prevent
        compiler warnings

2006-08-02  Alphonse Bendt  <bendt@prismtech.com>

        * orb/CDRInputStream.java: added doc for new property
        jacorb.interop.sun

2006-08-01  Andre Spiegel  <spiegel@gnu.org>

        * orb/giop/GIOPConnection.java (sendMessage): Close connection if
        there is a COMM_FAILURE.  Suggested and implemented by Marc Heide,
        in bug #708.

        * orb/giop/GIOPConnection.java (getMessage): Close on garbage.
        Suggested and implemented by Marc Heide.

2006-07-28  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/CDROutputStream.java: - Fix the
        ArrayIndexOutOfBoundsException thrown by write_string() when the
        codeset is UTF-8.  - Remove calls to write_octet() from
        write_char_i(), to avoid superfluous check(1) calls.

2006-07-28  Nick Cross  <nick.cross@prismtechnologies.com>

        * build.xml: Remove unused target

2006-07-27  Alphonse Bendt  <bendt@prismtech.com>

        * notification/container/RepositoryComponentAdapter.java
        (getComponentInstance): fixed typo

2006-07-27  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ORB.java, orb/ParsedIOR.java,
        orb/giop/MessageReceptorPool.java, orb/iiop/IIOPFactories.java,
        poa/AOM.java: PMD fixes

        * security/build.xml, security/sas/build.xml, security/ssl/build.xml:
        Remove IAIK support

2006-07-27  Alphonse Bendt  <bendt@prismtech.com>

        * util/tracing/ClientTraceInterceptor.java,
        util/tracing/ServerTraceInterceptor.java, util/tracing/Timer.java,
        util/tracing/TraceInitializer.java,
        util/tracing/TraceTreeNode.java,
        util/tracing/TracingServiceImpl.java: cosmetics

        * orb/portableInterceptor/RecursionAwareCI.java:
        cosmetics. added javadoc header

        * orb/factory/DefaultSocketFactory.java,
        orb/factory/FixedAddressSocketFactory.java,
        orb/factory/PortRangeSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java: cosmetics

        * orb/listener/TCPConnectionListener.java: javadoc

2006-07-27  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/factory/SSLServerSocketFactory.java,
        orb/factory/SocketFactoryManager.java,
        security/ssl/sun_jsse/SSLServerSocketFactory.java: Remove
        orb/factory/SSLServerSocketFactory. Made
        orb/factory/SocketFactoryManager be more generic and change
        inheritance for ssl/sun_jsse/SSLServerSocketFactory.java

2006-07-27  Alphonse Bendt  <bendt@prismtech.com>

        * orb/iiop/IIOPAddress.java: test and fix for "OAAddress property
        can't parse IPv6 addresses" (bugzilla #711).  thanks to Adam Mitz
        for supplying the patch

        * orb/factory/DefaultSocketFactory.java,
        orb/factory/FixedAddressSocketFactory.java: javadoc

        * orb/factory/SocketFactoryManager.java: minor cleanup

2006-07-26  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/giop/CodeSet.java: Change warn to debug level

2006-07-26  Alphonse Bendt  <bendt@prismtech.com>

        * orb/giop/CodeSet.java (configure): fix so that logger is never null

2006-07-26  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/CDRInputStream.java, orb/CDROutputStream.java,
        orb/giop/ClientConnection.java, orb/giop/CodeSet.java,
        orb/giop/RequestOutputStream.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java:
        RT889/RT1056/RT1229/RT1274 Codeset changes. Fixes for char
        transmission. Add tests. Move configuration for codeset to
        codeset. Merge jacorb.codeset and ignoreComponentInfoProfiles.

2006-07-26  Alphonse Bendt  <bendt@prismtech.com>

        * orb/factory/AbstractSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java: related to scarab
        JAC340.

        provided timeout implementation in SSLSocketFactory that
        uses the Socket API.

        removed thread based timeout implementation

        adapted tests

        * orb/factory/AbstractSocketFactory.java,
        orb/factory/FixedAddressSocketFactory.java,
        orb/factory/PortRangeFactory.java,
        orb/factory/PortRangeSocketFactory.java,
        orb/factory/SocketFactory.java: added javadoc.  minor code cleanup

2006-07-26  Nick Cross  <nick.cross@prismtechnologies.com>

        * util/Version.java: Update version information to 2.3

2006-07-26  Alphonse Bendt  <bendt@prismtech.com>

        * orb/rmi/PortableRemoteObjectDelegateImpl.java,
        orb/CDROutputStream.java, orb/ParsedIOR.java,
        orb/dii/Request.java, orb/giop/NoBiDirClientRequestListener.java,
        orb/giop/NoBiDirServerReplyListener.java: cosmetics. fixed some
        pmd warnings

        * orb/giop/ClientConnectionManager.java: cosmetics

        * orb/giop/ClientConnectionManager.java (shutdown):
        made method synchronized as all others are also synchronized

2006-07-25  Alphonse Bendt  <bendt@prismtech.com>

        * orb/factory/DefaultSocketFactory.java,
        orb/factory/FixedAddressSocketFactory.java,
        orb/iiop/ClientIIOPConnection.java,
        security/ssl/sun_jsse/SSLSocketFactory.java,
        orb/factory/AbstractSocketFactory.java,
        orb/factory/PortRangeFactory.java,
        orb/factory/PortRangeServerSocketFactory.java,
        orb/factory/PortRangeSocketFactory.java,
        orb/factory/SocketFactory.java: fix for scarab JAC340.

        interrupting a thread during PlainSocketImpl.socketConnect()
        does not work correctly across all JDK/OS versions.

        use jdk methods that accept a timeout

        see also
        http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6315293

2006-07-21  Alphonse Bendt  <bendt@prismtech.com>

        * orb/ORB.java (shutdown): need to set shutdown_in_progress to
        false again on method exit

2006-07-20  Nick Cross  <nick.cross@prismtechnologies.com>

        * poa/RequestProcessor.java: Pass exception object in rather than
        stringify to get stacktrace.

2006-07-20  Alphonse Bendt  <bendt@prismtech.com>

        * orb/giop/CodeSet.java: cosmetics: added javadoc class comment

        * orb/BufferManager.java (getBuffer): added more details to exception

        * idl/parser.cup: removed commented out code as there are no more
        problems during the nightly build. cleaned code up a bit

        * orb/dsi/ServerRequest.java (get_out): pass in the current status
        to the created OutputStream

2006-07-19  Alphonse Bendt  <bendt@prismtech.com>

        * orb/listener/TCPConnectionEvent.java: removed extra header

        * orb/listener/TCPConnectionEvent.java: javadoc

        * poa/RequestQueue.java: changed queue from ArrayList to
        LinkedList. should be more performant

        scarab JAC119

        * orb/iiop/IIOPListener.java, orb/listener/TCPConnectionEvent.java:
        removed TCPConnectionEvent's deprecated c'tor

2006-07-19  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/giop/GIOPConnection.java: Change default connect timeout to 90000

2006-07-19  Alphonse Bendt  <bendt@prismtech.com>

        * idl/InterfaceBody.java, idl/parser.cup: JAC#248 simplified
        handling of parse threads.

        * orb/ORB.java, security/ssl/sun_jsse/ServerInvocationInterceptor.java:
        commented out security level2 related stuff

        * idl/parser.cup, idl/lexer.java: backed out last change

2006-07-18  Alphonse Bendt  <bendt@prismtech.com>

        * idl/AbstractBase.java, idl/lexer.java, idl/parser.cup:
        added support for the IDL keyword AbstractBase (fixed #653).
        thanks to Anders Hessellund Jensen for providing the patch.

        * idl/ValueDecl.java: fix for "IDL compiler fails for typedef
        within valuetype declaration" #601. thanks to Thomas Leineweber
        for providing the patch.

        * idl/StructType.java (print): simplified boolean expression

        * orb/dii/Request.java: fixed synchronization

2006-07-17  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/lexer.java: RT1525 Swallow whitespace on include.

2006-07-17  Alphonse Bendt  <bendt@prismtech.com>

        * orb/iiop/ClientIIOPConnection.java, orb/giop/ReplyPlaceholder.java:
        cosmetics. pmd/findbugs warnings

        * orb/giop/GIOPConnection.java (getMessage):
        convert byte[] to String before logging it

        * orb/EncapsInfo.java, orb/ReplyReceiver.java, orb/dii/Request.java:
        cosmetics. pmd/findbugs warnings

        * orb/ORB.java (HandlerWrapper): made wrappedHandler final

        * orb/Any.java (writeComplexValue): close inputstream after use

        * orb/ORB.java (getORBInitializers): enhanced
        log output

        * imr/ImplementationRepositoryImpl.java (main): added cmd line
        param -printIOR for use within the test regression framework

2006-07-17  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: Throw TRANSIENT not
        OBJECT_NOT_EXIST.

2006-07-17  Alphonse Bendt  <bendt@prismtech.com>

        * config/LogKitLoggerFactory.java (getPriorityForNamedLogger):
        pmd warnings

2006-07-14  Alphonse Bendt  <bendt@prismtech.com>

        * orb/BufferManager.java (configure, getInstance): made methods
        synchronized to prevent race issues when creating multiple orbs
        concurrently. this should fix #638

        * orb/iiop/ClientIIOPConnection.java (close): don't log close
        event if connection was closed already. this fixes #693

        * notification/AbstractMessage.java: cosmetics

2006-07-14  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/dii/Request.java,
        orb/portableInterceptor/IORInterceptorIterator.java,
        orb/portableInterceptor/InterceptorManager.java,
        orb/portableInterceptor/RequestInterceptorIterator.java,
        orb/portableInterceptor/ServerRequestInfoImpl.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SASComponentInterceptor.java,
        orb/util/CorbaLoc.java, orb/util/FixIOR.java,
        orb/util/PrintIOR.java: Add logging. PMD fixes. Exclude some rules
        in pmd.

2006-07-14  Alphonse Bendt  <bendt@prismtech.com>

        * trading/TradingService.java (main): pass in the properties to
        ORB.init(...). this fixes #704

        * imr/ImRServerInfo.java (toServerInfo): fixed wrong array
        type. thanks to Gabor Sziklai for reporting

        * notification/filter/DefaultFilterFactoryDelegate.java,
        notification/filter/etcl/BoolValue.java,
        imr/ServerStartupDaemonImpl.java,
        collection/util/ArrayFactory.java,
        collection/util/SortedVector.java,
        concurrency/LockCoordinatorImpl.java,
        concurrency/LockSetFactoryImpl.java, concurrency/Request.java,
        concurrency/TransactionLocks.java,
        concurrency/TransactionalLockSetImpl.java: cosmetics

2006-07-13  Alphonse Bendt  <bendt@prismtech.com>

        * ir/RepositoryID.java: cosmetics

        * orb/giop/ClientConnection.java: added new property to ignore
        codeset information in profiles

        * orb/Delegate.java: fix for bugzilla #400

        * idl/SequenceType.java, orb/ParsedIOR.java: Fix OutOfMemory issue
        when parsing invalid IOR's.

        scarab JAC38

2006-07-13  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/Delegate.java, orb/ServantDelegate.java,
        orb/SpecificProfileSelector.java, orb/SystemExceptionHelper.java,
        orb/BasicAdapter.java, orb/CDRInputStream.java,
        orb/ExceptionHolderImpl.java, orb/ParsedIOR.java,
        orb/iiop/IIOPAddress.java: PMD fixes

        * idl/AliasTypeSpec.java, idl/EnumType.java, idl/IdlSymbol.java,
        idl/Interface.java, idl/SequenceType.java, idl/StructType.java,
        idl/UnionType.java, idl/ValueAbsDecl.java: JAC#141 Minor class
        comment improvement. Forward decl on struct

        * orb/factory/SocketFactoryManager.java: Use getCause

        * orb/iiop/IIOPListener.java: JAC#141 Pass ex as object not string

        * poa/POA.java: JAC#141 Add debug statement

2006-07-12  Alphonse Bendt  <bendt@prismtech.com>

        * orb/factory/SocketFactoryManager.java (newFactory): in case of a
        InvocationTargetException use the nested exception for
        logging/throwing

        related to scarab JAC128

        * orb/giop/ClientConnectionManager.java,
        orb/giop/MessageReceptorPool.java,
        util/threadpool/ThreadPool.java: throw NO_RESOURCES if during bind
        no ClientMessageReceptor Thread can be created due to a configured
        limit

2006-07-12  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/util/PrintIOR.java: Use autoflush on printwriter. Don't
        close as that will close system.out. Slight output format fixes.

2006-07-12  Alphonse Bendt  <bendt@prismtech.com>

        * orb/util/PrintIOR.java (printIOR): added extra linebreak

        * orb/util/PrintIOR.java (main): don't forget to flush printwriter

        * orb/listener/TCPConnectionEvent.java (c'tor):
        new c'tor should be used instead of the old one

        related to scarab JAC336

        * orb/util/PrintIOR.java: changed the class so that all print
        operations work on a PrintWriter thats passed in. this way the
        class can be better reused

        * orb/dii/Request.java: added logger and some debug statements

        * orb/ORB.java (configure): don't dispose pool (see inline comment)

2006-07-11  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/NameTable.java, idl/OpDecl.java: JAC#332 Fix for invalid idl
        compilation.

2006-07-11  Alphonse Bendt  <bendt@prismtech.com>

        * orb/iiop/IIOPProfile.java (decode_corbaloc):
        GIOP version should default to 1.0 if not specified

        part of fix for #702

        * orb/giop/BiDirConnectionClientInterceptor.java (send_request):
        use CDROutputStream c'tor that accepts an orb whereever possible

        * orb/dsi/ServerRequest.java (createExceptionDetailMessage):
        use CDROutputStream c'tor that accepts an orb whereever possible

        * orb/dii/Environment.java: sychronize access to member

        * orb/ORB.java: code cleanup.
        (configure): dispose poolmanager if orb is re-configured

        * orb/BufferManager.java (singletonConfigure): dispose reaper if
        buffermanager is re-configured

        * poa/POA.java: cosmetics. pmd warnings

        * orb/ORBSingleton.java: cosmetics. more logging

        * config/JacORBConfiguration.java: cosmetics. pmd warnings

        * orb/Delegate.java: throw internal instead of runtimexception

        * orb/ORBSingleton.java (checkTCName): bugfix for bug introduced
        yesterday

        * orb/ExceptionHolderImpl.java: restored no-args c'tor

2006-07-10  Alphonse Bendt  <bendt@prismtech.com>

        * orb/dii/ContextListImpl.java, orb/dii/Request.java: provided
        empty implementation for ContextList instead of returning null

        * orb/Any.java, orb/NVList.java, orb/SystemExceptionHelper.java,
        orb/TypeCode.java, orb/ORBSingleton.java: cosmetics. pmd warnings

        * orb/NamedValue.java, orb/LocateReplyReceiver.java,
        orb/DataInputStream.java, orb/ExceptionHolderImpl.java,
        orb/ReplyReceiver.java: cosmetics

        * orb/CDRInputStream.java, orb/CDROutputStream.java,
        orb/Delegate.java, orb/IORMutator.java,
        orb/dsi/ServerRequest.java, orb/giop/ServerRequestListener.java:
        new feature: added IORMutator plugin.

        scarab JAC319

2006-07-07  Alphonse Bendt  <bendt@prismtech.com>

        * notification/engine/DefaultTaskProcessor.java,
        notification/engine/TaskProcessor.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/PullMessagesUtility.java: cosmetics

        * notification/container/PicoContainerFactory.java: removed unused
        imports

        * notification/servant/ProxyPullSupplierImpl.java:
        don't use the singleton orb

        * poa/RPPoolManager.java, poa/RPPoolManagerFactory.java:
        extracted the warning about the empty pool in its own method and
        override that empty for the single threaded poa

        * idl/parser.cup (init): removed double intializatino of
        pending_interfaces

        added extra debug statements

        * util/Time.java (toCDR): return buffer copy

        * security/ssl/sun_jsse/SSLSocketFactory.java (createSocketFactory):
        enhanced log message

        * orb/portableInterceptor/AbstractInterceptorIterator.java,
        orb/portableInterceptor/ClientInterceptorIterator.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java,
        orb/portableInterceptor/CodecFactoryImpl.java,
        orb/portableInterceptor/CodecImpl.java,
        orb/portableInterceptor/Codec_CDR_1_0_Impl.java,
        orb/portableInterceptor/DefaultClientInterceptor.java,
        orb/portableInterceptor/DefaultServerInterceptor.java,
        orb/portableInterceptor/IORInfoExt.java,
        orb/portableInterceptor/IORInfoImpl.java,
        orb/portableInterceptor/IORInterceptorIterator.java,
        orb/portableInterceptor/InterceptorManager.java,
        orb/portableInterceptor/ORBInitInfoImpl.java,
        orb/portableInterceptor/PICurrentImpl.java,
        orb/portableInterceptor/RecursionAwareCI.java,
        orb/portableInterceptor/RequestInfoImpl.java,
        orb/portableInterceptor/RequestInterceptorIterator.java,
        orb/portableInterceptor/ServerInterceptorIterator.java,
        orb/portableInterceptor/ServerRequestInfoImpl.java,
        orb/policies/BiDirPolicyFactoryImpl.java,
        orb/policies/BiDirPolicyImpl.java,
        orb/policies/ClientProtocolPolicy.java,
        orb/policies/MaxHopsPolicy.java, orb/policies/PolicyManager.java,
        orb/policies/PolicyUtil.java, orb/policies/QueueOrderPolicy.java,
        orb/policies/RebindPolicy.java,
        orb/policies/RelativeRequestTimeoutPolicy.java,
        orb/policies/RelativeRoundtripTimeoutPolicy.java,
        orb/policies/ReplyEndTimePolicy.java,
        orb/policies/ReplyPriorityPolicy.java,
        orb/policies/ReplyStartTimePolicy.java,
        orb/policies/RequestEndTimePolicy.java,
        orb/policies/RequestPriorityPolicy.java,
        orb/policies/RequestStartTimePolicy.java,
        orb/policies/RoutingPolicy.java,
        orb/policies/SyncScopePolicy.java, orb/iiop/IIOPAddress.java:
        cosmetics, pmd warnings

        * orb/SpecificProfileSelector.java: cosmetics

        * orb/ReplyReceiver.java: cosmetics, pmd warnings

        * orb/ParsedIOR.java, orb/ORB.java, orb/BufferManager.java: cosmetics

        * notification/engine/PullFromSupplierTask.java (doWork): removed
        dispose as this is done in superclass

2006-07-06  Alphonse Bendt  <bendt@prismtech.com>

        * orb/iiop/ClientIIOPConnection.java (checkSSL): close stream after use

        * orb/CDRInputStream.java (loadClass):
        extracted method to avoid duplicated code

        * orb/ORB.java (getTransportManager): changed type of exception

2006-07-05  Alphonse Bendt  <bendt@prismtech.com>

        * orb/factory/FixedAddressSocketFactory.java: added new socket
        factory impl

        scarab JAC295

        * idl/IdlSymbol.java (printClassComment): changed format a bit

        * orb/ORB.java, orb/giop/ServerRequestListener.java: Fix for
        POAs/transient objects

        scarab JAC278

        * config/JacORBConfiguration.java (getConfiguration/initApplet):
        added patch from Gabor Sziklai to fix applet support

        * orb/ORB.java: throw BAD_PARAM if something goes wrong during
        string_to_object

        * orb/CDRInputStream.java, orb/CDROutputStream.java:
        further cleanup of typecode marshalling

        scarab JAC277

        * orb/TypeCode.java (id):  cleaned up switch statement. code cleanup

        * orb/giop/CodeSet.java (createCodesetContext): close stream after use

        * orb/util/FixIOR.java (main): close stream after use

        * orb/iiop/IIOPProfile.java (createCodesetContext):
        close stream after use

        * orb/giop/BiDirConnectionClientInterceptor.java (send_request):
        close stream after use

        * orb/etf/ProtocolAddressBase.java (toCDR): close stream after use

        * orb/dynany/DynArray.java, orb/dynany/DynEnum.java,
        orb/dynany/DynSequence.java, orb/dynany/DynStruct.java,
        orb/dynany/DynUnion.java (to_any): use CDROutputStream c'tor that
        accepts an ORB

        * orb/ExceptionHolderImpl.java (c'tor): close outputstream after use

        * orb/Any.java (create_input_stream): close outputstream after use

        * orb/CDRInputStream.java, orb/CDROutputStream.java: changes to
        make CDRInputStream and CDROutputStream more symmetric

        scarab JAC262

        * orb/TypeCode.java: cosmetics

2006-07-04  Alphonse Bendt  <bendt@prismtech.com>

        * orb/EncapsInfo.java: cosmetics

        * orb/ORB.java, orb/policies/PolicyManager.java:
        removed orb parameter from PolicyManager c'tor

        * idl/StructType.java: improved generation of IDL exceptions

        scarab JAC267

        * orb/policies/PolicyManager.java (set_policy_overrides):
        bugfix as ADD_OVERRIDE was broken

        * idl/parser.cup (init): sorted member initialization. do extra
        cleanup for ParseThreads

        * idl/Interface.java: fixed idl compiler bug related to forward
        declarations.

        scarab JAC285

        * orb/TypeCode.java (create_tc): fixed possible NPE
        code cleanup

        * orb/CDRInputStream.java (read_value): reordered switch
        statement. code cleanup

        * orb/ExceptionHolderImpl.java (raise_exception): remove senseless
        orb parameter

        * ir/ConstantDef.java (define): remove senseless parameter

        * orb/Any.java (checkNull): new method that checks if value is not null
        (insert_object): removed method

2006-07-03  Alphonse Bendt  <bendt@prismtech.com>

        * orb/util/PrintIOR.java: also decode realtime policies

        * idl/AliasTypeSpec.java, idl/ObjectTypeSpec.java,
        idl/ValueBoxDecl.java, orb/Any.java: better support for
        streamables, bugfixes, change generated helper code

        changes related to scarab JAC280, 281, 282

        * orb/TypeCode.java, orb/CDRInputStream.java,
        orb/giop/MessageReceptor.java: cosmetics

        * notification/AbstractMessage.java,
        notification/StructuredEventMessage.java,
        notification/container/LocalParameterComponentAdapter.java,
        notification/filter/impl/DefaultETCLEvaluator.java,
        notification/impl/DefaultMessageFactory.java: do not use the
        singleton orb

2006-06-30  Alphonse Bendt  <bendt@prismtech.com>

        * orb/Delegate.java (invoke_internal): invoke checkORB before
        anything is done

        * orb/ORB.java (perform_work/work_pending): removed redundant code

        * orb/giop/ClientConnection.java: javadoc

        * orb/giop/MessageReceptor.java, orb/giop/MessageReceptorPool.java:
        new property: allows to enhance threadnames

        scarab JAC228

        * orb/factory/DefaultServerSocketFactory.java,
        orb/factory/PortRangeFactory.java,
        orb/factory/PortRangeServerSocketFactory.java,
        orb/factory/PortRangeSocketFactory.java,
        orb/factory/SSLServerSocketFactory.java,
        orb/factory/ServerSocketFactory.java,
        orb/factory/SocketFactory.java,
        orb/factory/SocketFactoryManager.java: code cleanup. fixed pmd
        warnings, added missing javadoc headers

2006-06-29  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/BasicAdapter.java: Add include

2006-06-29  Alphonse Bendt  <bendt@prismtech.com>

        * orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPListener.java,
        orb/iiop/ServerIIOPConnection.java,
        orb/listener/NullTCPConnectionListener.java,
        orb/listener/TCPConnectionListener.java: wrap tcp listener in
        check if listener is really active

        * orb/listener/SSLHandshakeListener.java: removed todo comment

        * orb/iiop/IIOPListener.java: cosmetics

        * orb/iiop/IIOPConnection.java, orb/iiop/ClientIIOPConnection.java:
        removed unused code

        * orb/Delegate.java (invoke_internal): added extra check for
        interceptors

        * orb/ORBSingleton.java: extracted string constants

        * orb/CDRInputStream.java, util/Stack.java:
        replaced java.util.Stack with an unsychronized implementation

        * orb/BasicAdapter.java, orb/ORB.java, orb/iiop/IIOPListener.java,
        orb/listener/DefaultAcceptorExceptionListener.java,
        orb/listener/NullAcceptorExceptionListener.java: add
        acceptorexception listener feature, docs and tests

        scarab JAC200

        * config/JacORBConfiguration.java (newInstance):
        configure new Instance if it needs configuration

        * orb/ClientInterceptorHandler.java: further fixes and
        documentation for PI exception handling.

        from scarab 192/194.

        * orb/Delegate.java, orb/ORB.java: fixed findbugs/pmd warnings
        replaced redundant method checkIsRunning with perform_work

        * orb/portableInterceptor/ClientRequestInfoImpl.java,
        orb/portableInterceptor/RequestInfoImpl.java: cosmetics

        * orb/dii/Request.java (_invoke): close stream after use

        * orb/CDRInputStream.java (close): do not return the buffer to the
        BufferManager as 1) it did not come from there 2) it was passed in
        through the c'tor so we cannot assume ownership of it

2006-06-28  Alphonse Bendt  <bendt@prismtech.com>

        * util/ObjectUtil.java, orb/util/CorbaLoc.java,
        orb/util/FixIOR.java, orb/util/PrintIOR.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/standardInterceptors/SASComponentInterceptor.java,
        orb/iiop/IIOPConnection.java, orb/iiop/ClientIIOPConnection.java,
        orb/iiop/IIOPFactories.java, orb/iiop/IIOPListener.java,
        orb/iiop/IIOPProfile.java,
        orb/giop/BiDirConnectionClientInterceptor.java,
        orb/giop/LocateRequestInputStream.java,
        orb/giop/ServerGIOPConnection.java,
        orb/giop/BiDirConnectionInitializer.java,
        orb/giop/BiDirConnectionServerInterceptor.java,
        orb/giop/BiDirPolicy.java, orb/giop/BiDirPolicyFactory.java,
        orb/giop/ClientConnection.java,
        orb/giop/ClientConnectionManager.java,
        orb/giop/ClientGIOPConnection.java, orb/giop/GIOPConnection.java,
        orb/giop/GIOPConnectionManager.java,
        orb/giop/LFUStatisticsProviderImpl.java,
        orb/giop/LocateReplyInputStream.java,
        orb/giop/LocateRequestOutputStream.java,
        orb/giop/MessageReceptorPool.java, orb/giop/ReplyInputStream.java,
        orb/giop/ReplyOutputStream.java,
        orb/giop/RequestOutputStream.java,
        orb/giop/ServerRequestListener.java,
        orb/giop/TransportManager.java, orb/etf/ProfileBase.java,
        orb/dii/ExceptionList.java, orb/dii/Request.java,
        orb/dsi/ServerRequest.java, orb/diop/DIOPFactories.java,
        orb/Any.java, orb/ApplicationExceptionHelper.java,
        orb/BasicAdapter.java, orb/CDRInputStream.java,
        orb/DefaultProfileSelector.java, orb/ORB.java,
        orb/ProfileSelector.java, orb/ServantDelegate.java,
        idl/AliasTypeSpec.java, idl/EnumType.java, idl/IdlSymbol.java,
        idl/Interface.java, idl/StructType.java, idl/UnionType.java,
        idl/ValueAbsDecl.java, idl/ValueDecl.java: code cleanup. fixed
        pmd/findbugs warnings

2006-06-27  Alphonse Bendt  <bendt@prismtech.com>

        * util/threadpool/ThreadPool.java, util/ObjectUtil.java:
        fixed pmd warnings

        * orb/ORB.java (run, shutdown):
        simplified use of runSync and shutdownSync

        cosmetics

        * orb/CDROutputStream.java: cosmetics

        * imr/ImRAccessImpl.java, imr/ImRHostInfo.java,
        imr/ImRPOAInfo.java, imr/ImRServerInfo.java: fixed pmd warnings

        * orb/SpecificProfileSelector.java: (selectProfile) use & instead of |

        * orb/util/PrintIOR.java, poa/RequestController.java,
        orb/factory/SocketFactoryManager.java,
        orb/TaggedComponentList.java, orb/ParsedIOR.java,
        orb/Delegate.java, orb/ORB.java: fixed findbugs warnings

        * orb/BasicAdapter.java:
        (deliverRequest) removed unnecessary synchronization

        fixed findbugs warnings

        * orb/iiop/IIOPConnection.java, orb/giop/GIOPConnection.java:
        fixed findbugs warnings

        * poa/POA.java: cosmetics

        * orb/factory/SocketFactoryManager.java,
        imr/util/AddServerWindow.java, imr/util/ConnectWindow.java,
        imr/util/ImRManagerGUI.java: fixed findbugs warnings

        * orb/util/FixIOR.java (main): better error handling

        * orb/portableInterceptor/CodecImpl.java,
        orb/portableInterceptor/Codec_CDR_1_0_Impl.java,
        orb/giop/ReplyOutputStream.java, orb/giop/RequestInputStream.java,
        orb/giop/ServerGIOPConnection.java, orb/dynany/DynAny.java,
        orb/dynany/DynArray.java, orb/dynany/DynEnum.java,
        orb/dynany/DynSequence.java, orb/dynany/DynStruct.java,
        orb/dynany/DynUnion.java, orb/dsi/ServerRequest.java,
        orb/SystemExceptionHelper.java, orb/Any.java,
        orb/ExceptionHolderImpl.java, orb/ORB.java, orb/ParsedIOR.java:
        fixed findbugs warnings

        * orb/CDROutputStream.java (getBufferCopy): pass in size of our
        buffer into ByteArrayOutputStream c'tor

        * imr/ImplementationRepositoryImpl.java: fixed findbugs warnings

        * orb/portableInterceptor/PICurrentImpl.java, orb/ORB.java: cosmetics

2006-06-26  Alphonse Bendt  <bendt@prismtech.com>

        * idl/JacIDL.java, idl/ParamDecl.java, idl/StructType.java,
        idl/IllegalRedefinition.java, idl/Interface.java, idl/Member.java,
        idl/PosIntConst.java, idl/ValueAbsDecl.java, idl/parser.cup: Fixes
        for line numbering (reset lexer), better error propagation, only
        print stack trace from Ant task if debuglevel >= 3

        scarab JAC214

        * orb/Delegate.java, poa/AOM.java, poa/POA.java:
        logging and more exceptions

        scarab jac287

        * orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPListener.java:
        allow SO_KEEPALIVE to be set on sockets

        scarab JAC172

        * imr/ImplementationRepositoryImpl.java, orb/BasicAdapter.java,
        orb/build.xml, orb/etf/ConnectionBase.java,
        orb/etf/FactoriesBase.java, orb/etf/ListenerBase.java,
        orb/factory/SocketFactoryManager.java,
        orb/giop/TransportManager.java,
        orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPConnection.java,
        orb/iiop/IIOPFactories.java, orb/iiop/IIOPListener.java,
        orb/iiop/IIOPLoopbackConnection.java,
        orb/iiop/ServerIIOPConnection.java,
        security/ssl/sun_jsse/SSLServerSocketFactory.java.patch,
        security/ssl/sun_jsse/SSLSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java.patch: refactorings
        for and implementation of tcp listener feature

        * orb/listener/AcceptorExceptionEvent.java,
        orb/listener/AcceptorExceptionListener.java,
        orb/listener/DefaultAcceptorExceptionListener.java,
        orb/listener/NullSSLSessionListener.java,
        orb/listener/NullTCPConnectionListener.java,
        orb/listener/SSLHandshakeListener.java,
        orb/listener/SSLListenerUtil.java.nossl,
        orb/listener/SSLListenerUtil.java.ssl,
        orb/listener/SSLSessionEvent.java.nossl,
        orb/listener/SSLSessionEvent.java.ssl,
        orb/listener/SSLSessionListener.java,
        orb/listener/TCPConnectionEvent.java,
        orb/listener/TCPConnectionListener.java: added new package for tcp
        listener feature

        * orb/giop/GIOPConnection.java,
        orb/factory/DefaultSocketFactory.java,
        orb/factory/PortRangeSocketFactory.java,
        orb/etf/StreamConnectionBase.java, orb/ParsedIOR.java: cosmetics

        * orb/build.xml, orb/.cvsignore: Reference is generated to
        src/generated now

        * config/Configuration.java,
        config/JacORBConfiguration.java (getAttributeAsObject): new method

2006-06-22  Alphonse Bendt  <bendt@prismtech.com>

        * orb/giop/ClientGIOPConnection.java: cosmetics

        * notification/AbstractChannelFactory.java: removed unused import

        * idl/build.xml: temporarily disable deletion of generated
        parser/sym as this currently breaks the PT build

2006-06-21  Alphonse Bendt  <bendt@prismtech.com>

        * util/ConsoleLoggerFactory.java: simple logger factory example

        * config/LogKitLoggerFactory.java: set visibility of various
        methods to private

        * idl/ValueDecl.java: fixed valuetype inheritance

        scarab JAC305/JAC318

        * idl/StringType.java (getSize): new method

        * idl/ConstExpr.java (pos_int_const): is now public

        * idl/LongLongType.java, idl/LongType.java, idl/ShortType.java:
        getIDLTypeName() now returns the type like it'S written in IDL.

        scarab JAC196

        * util/threadpool/ThreadPool.java (getJob): decrement thread
        counters even during pool shutdown

        * orb/Any.java: replaced Integer.valueOf(int) with new
        Integer(int) as this method is only available in JDK 1.5

2006-06-20  Alphonse Bendt  <bendt@prismtech.com>

        * util/threadpool/ConsumerTie.java: cosmetics

        * util/Time.java: code cleanup to fix pmd warnings
        (waitUntil): rewrote using Thread.sleep

        * idl/ExceptionHolderTypeSpec.java: test and fix for bugzilla #687.

        thanks to thomas leineweber for reporting it and providing the patch.

        * orb/Delegate.java: code cleanup: chain c'tors
        (threadlocals): made static

        * orb/giop/MessageReceptorPool.java: cosmetics

        * build.xml, idl/build.xml: added clean target to idl/build.xml

        * idl/ScopedName.java: added test and fix for bugzilla #429/scarab
        JAC297

        * idl/ConstDecl.java (print): use printClassComment method

        * orb/Delegate.java (invoke_internal): enhanced comment

        * idl/UnionType.java (parse): added isParsed flag to ignore
        multiple calls to parse.  this fixes #697

        * idl/Module.java: added toString method to ease debugging

        * orb/ClientInterceptorHandler.java, orb/Delegate.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java: further
        interceptor fixes

        scarab JAC192/JAC192b

        * idl/parser.cup: renamed member in ElementSpec

        * orb/LocateReplyReceiver.java, orb/ReplyReceiver.java,
        orb/giop/ReplyPlaceholder.java: tests and fix for bugzilla
        #611/scarab JAC235

        * orb/dynany/DynValue.java: fix cvs id

2006-06-19  Alphonse Bendt  <bendt@prismtech.com>

        * orb/CDROutputStream.java: fixed CDROutputStream to correctly
        handle RMI object replacement

        scarab JAC212

        * orb/ClientInterceptorHandler.java, orb/Delegate.java:
        Fix for interceptor service context propagation.

        related to scarab JAC194

        * idl/TypeMap.java, idl/ValueBody.java, idl/AddExpr.java,
        idl/AndExpr.java, idl/ArrayDeclarator.java, idl/BaseType.java,
        idl/BooleanType.java, idl/Case.java, idl/CharType.java,
        idl/ConstDecl.java, idl/ConstExpr.java, idl/ConstType.java,
        idl/DoubleType.java, idl/ElementSpec.java,
        idl/FixedArraySize.java, idl/FixedPointConstType.java,
        idl/FloatPtType.java, idl/FloatType.java,
        idl/IllegalRedefinition.java, idl/InitDecl.java,
        idl/InitParamDecl.java, idl/IntType.java, idl/Literal.java,
        idl/LongLongType.java, idl/LongType.java, idl/MultExpr.java,
        idl/NameAlreadyDefined.java, idl/NameTable.java,
        idl/OctetType.java, idl/OpDecl.java, idl/OrExpr.java,
        idl/PosIntConst.java, idl/PrimaryExpr.java, idl/RaisesExpr.java,
        idl/ShiftExpr.java, idl/ShortType.java, idl/SimpleTypeSpec.java,
        idl/SwitchBody.java, idl/TemplateTypeSpec.java,
        idl/Truncatable.java, idl/TypeDeclarator.java, idl/TypeDef.java,
        idl/UnaryExpr.java, idl/UnionType.java, idl/ValueBase.java,
        idl/ValueInheritanceSpec.java, idl/XorExpr.java: Most classes of
        the IDL compiler only have default access, i.e. aren't accessible
        from other packages. changed that so the AST can be traversed in
        full.

        related to scarab JAC155

        * orb/Any.java, orb/TypeCode.java: code cleanup (pmd/findbugs) warnings

        * poa/RPPoolManagerFactory.java: renamed variable

2006-06-16  Alphonse Bendt  <bendt@prismtech.com>

        * util/threadpool/ThreadPool.java,
        util/threadpool/ConsumerTie.java, orb/giop/MessageReceptor.java:
        cosmetics

        * orb/giop/GIOPConnection.java (fragments): as all accesses to
        fragments are inside the same synchronized block its safe to
        replace Hashtable with HashMap

        * notification/servant/AbstractProxyPushSupplier.java: added debug

        * idl/.cvsignore, idl/build.xml: temporarily revert location of
        parser/sym.java. however no need to check them in

        * poa/AOM.java, poa/POA.java, orb/policies/PolicyUtil.java,
        orb/ParsedIOR.java, orb/ReplyReceiver.java: fixed findbugs
        warnings. unused code

        * imr/util/ImRPOATableModel.java, imr/util/ImRServerTableModel.java:
        fixed some findbugs warnings

2006-06-16  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/build.xml: Add a progress flag to java_cup and remove the
        summary statement.

        * orb/BasicAdapter.java, orb/ORB.java,
        imr/ServerStartupDaemonImpl.java,
        orb/giop/ClientConnectionManager.java,
        orb/giop/MessageReceptorPool.java,
        util/threadpool/ConsumerTie.java, util/threadpool/ThreadPool.java:
        JAC#111 / OS#459 Fix for applet reload / shutdown of receptor
        pools.

2006-06-15  Alphonse Bendt  <bendt@prismtech.com>

        * idl/build.xml: (all) remove unless

        * ir/ConstantDef.java, ir/Container.java, ir/IRObject.java,
        ir/IRServer.java, ir/InterfaceDef.java, ir/ModuleDef.java,
        ir/RepositoryImpl.java, ir/StructDef.java, ir/UnionDef.java: fix
        related to scarab JAC165: This and the related bugs seem to
        indicate that a change was made in JDK1.4.2_05. The classloader
        will not accept classnames with / in it.

        see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4986512

        * idl/StringType.java: code cleanup

        * security/ssl/sun_jsse/SSLRandom.java (configure): debug code

        * orb/portableInterceptor/ClientRequestInfoImpl.java
        (forward_reference): allow other interceptors to access the
        forward destination

        * orb/iiop/ClientIIOPConnection.java (checkSSL): code cleanup

        * orb/giop/LocateRequestInputStream.java,
        orb/giop/ReplyInputStream.java,
        orb/giop/RequestInputStream.java (close): removed unnecessary
        exception from signature

        * orb/etf/ProfileBase.java (initFromProfileData): better error handling

        * orb/dsi/ServerRequest.java: cosmetics

        * orb/ParsedIOR.java: code cleanup

        * orb/Delegate.java (bind): removed unused method
        (invokeInterceptors): fix for local objects

        * orb/ClientInterceptorHandler.java (invokeInterceptors):
        add forward destination to requestInfo

        * orb/CDRInputStream.java (close):
        removed unnecessary exception from signature

        * orb/Delegate.java, orb/ParsedIOR.java,
        orb/iiop/IIOPProfile.java,
        orb/portableInterceptor/ClientInterceptorIterator.java,
        orb/portableInterceptor/InterceptorManager.java: ParsedIOR.equals
        checks effectiveProfile. Rebind checks clientProtocols. Error
        checking on IIOPProfile. Debug improvement on
        ClientInterceptorIterator.java

        related to scarab JAC160

        * orb/CDROutputStream.java: fixed CDROutputStream to correctly
        handle RMI object replacement

        scarab JAC149

        * idl/StructType.java: added todo

        * idl/JacIDL.java, idl/StructType.java, idl/parser.cup:
        added support for generating toString and equals methods in structs

        * idl/build.xml, idl/parser.java, idl/sym.java:
        generate parser into src/generated

2006-06-14  Alphonse Bendt  <bendt@prismtech.com>

        * security/build.xml: enhance buildfile

        * orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPListener.java,
        orb/iiop/IIOPProfile.java: allow to restart the ssl listen port at
        runtime

        * security/ssl/sun_jsse/JSRandom.java,
        security/ssl/sun_jsse/JSRandomImpl.java,
        security/ssl/sun_jsse/JSRandomImplThread.java,
        security/ssl/sun_jsse/JSSEUtil.java,
        security/ssl/sun_jsse/KeyStoreUtil.java,
        security/ssl/sun_jsse/SSLRandom.java,
        security/ssl/sun_jsse/SSLServerSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java,
        security/ssl/sun_jsse/SecurityServiceInitializer.java,
        security/ssl/sun_jsse/ServerInvocationInterceptor.java: new plugin
        mechanism to allow customization of SecureRandom

        * util/ObjectUtil.java (getResource): added new utility method

        * orb/BasicAdapter.java, orb/Delegate.java, orb/ORB.java,
        orb/ORBConstants.java, orb/ParsedIOR.java, orb/RTORB.java,
        orb/SpecificProfileSelector.java,
        orb/policies/ClientProtocolPolicy.java: added ProfileSelector that
        allows to match a specific profile.  added error checking: after
        ORB::shutdown most ORB operations should throw BAD_INV_ORDER

        * orb/CDROutputStream.java: fix for typecode indirection.

        related to scarab JAC110

        * orb/BufferManager.java (release, Reaper):
        reworked synchronization code

        * idl/util/PrettyPrinter.java: optional prettyprinter

        * idl/ValueAbsDecl.java, idl/ValueDecl.java,
        idl/UnionType.java (printClassComment): enhance javadoc generation

        * idl/TypeDeclaration.java: cosmetics, fixed javadoc warnings,
        removed unused code

        * idl/StructType.java (printClassComment): enhance javadoc generation

        * idl/SequenceType.java (printClassComment): enhance generation of
        javadoc
        (printReadStatement, printWriteStatement): generated code for
        sequence types is now more efficient

        * idl/parser.cup (getLogger): made method public
        added generation date

        * idl/ParamDecl.java:
        cosmetics, fixed javadoc warnings, removed unused code

        * idl/OpDecl.java (printStreamBody):
        beautify generated java code (less warnings in eclipse)

        * idl/Interface.java, idl/IDLTreeVisitor.java:
        cosmetics, fixed javadoc warnings, removed unused code

        * idl/IdlSymbol.java, idl/EnumType.java,
        idl/AliasTypeSpec.java (printClassComment): fix generated javadoc

        * orb/ORBSingleton.java: extra error handling during typecode creation.

        related to scarab JAC117

        * idl/lexer.java, poa/gui/beans/PopupMenu.java,
        poa/gui/pm/POAManagerFrame.java, poa/util/POAUtil.java,
        security/sas/ATLASPolicyFactory.java,
        security/sas/SASPolicyFactory.java: cosmetics, fixed javadoc
        warnings, removed unused code

        * orb/standardInterceptors/IORInterceptorInitializer.java (post_init):
        clarify javadoc

        * orb/policies/PolicyManager.java, orb/iiop/IIOPAddress.java,
        orb/giop/GIOPConnection.java, orb/giop/ServerGIOPConnection.java:
        cosmetics, fixed javadoc warnings, removed unused code

        * orb/giop/TransportManager.java (configure):
        throw INITIALIZE instead of RuntimeException

        * orb/factory/ServerSocketFactory.java,
        orb/factory/SocketFactoryManager.java, orb/etf/ProfileBase.java:
        cosmetics: fixed javadoc warnings, removed unused code

        * orb/dsi/ServerRequest.java (reply): don't explicitely write out
        the exceptions type as otherwise it'll end up twice in the stream

        this fixes bugzilla #696

        * orb/diop/DIOPFactories.java, orb/dii/ExceptionList.java,
        orb/dii/Request.java, orb/dii/Environment.java,
        notification/util/AbstractObjectPool.java,
        notification/queue/AbstractBoundedEventHeap.java,
        notification/filter/EvaluationContext.java,
        naming/namemanager/NSTableModel.java: cosmetics: fixed javadoc
        warnings, removed unused code

        * naming/NamingContextImpl.java (init):
        removed unneccessary delegate initialization (its done in AOM)

        * naming/Name.java, ir/gui/typesystem/remote/IRContainer.java,
        ir/gui/typesystem/remote/IRInterface.java,
        ir/gui/typesystem/remote/IRLeaf.java,
        ir/gui/typesystem/remote/IRNode.java,
        ir/gui/typesystem/remote/IRParameter.java,
        ir/gui/typesystem/remote/IRStructMember.java,
        ir/gui/typesystem/remote/IRUnionMember.java,
        ir/gui/typesystem/remote/IRValue.java,
        ir/gui/typesystem/remote/RemoteTypeSystem.java,
        ir/gui/typesystem/AbstractContainer.java,
        ir/gui/typesystem/Interface.java,
        ir/gui/typesystem/ModelBuilder.java,
        ir/gui/typesystem/ModelParticipant.java,
        ir/gui/typesystem/NodeMapper.java,
        ir/gui/typesystem/TypeSystem.java,
        ir/gui/typesystem/TypeSystemNode.java,
        ir/gui/remoteobject/ObjectRepresentant.java,
        ir/gui/remoteobject/ObjectRepresentantFactory.java,
        ir/gui/remoteobject/RemoteObject.java, ir/gui/IRBrowser.java,
        ir/RepositoryID.java, ir/RepositoryImpl.java,
        imr/util/AddServerWindow.java, imr/util/ConnectWindow.java,
        imr/util/ImRModel.java, imr/util/ImRServerTableModel.java:
        cosmetics: fixed javadoc warnings, removed unused code

        * imr/ImRHostInfo.java, imr/ImRServerInfo.java,
        imr/ImplementationRepositoryImpl.java: cosmetics: fixed javadoc
        warnings

        * dds/DomainParticipantImpl.java: fixed javadoc warnings

2006-06-04  Andre Spiegel  <spiegel@gnu.org>

        * poa/RequestQueue.java (configure): Add support for new property
        jacorb.poa.queue_listeners, allowing users to add their own queue
        listeners.
        (queueListeners): New field, supporting the above.
        (c'tor): Removed private no-arg constructor, it is unused.

2006-06-02  Alphonse Bendt  <bendt@prismtech.com>

        * idl/ConstExprEvaluator.java, orb/iiop/IIOPFactories.java,
        orb/iiop/IIOPConnection.java: cosmetics

        * orb/etf/StreamConnectionBase.java (flush): only access byteArray
        if it is really used

        * orb/etf/ListenerBase.java (c'tor): removed deprecated, unused c'tor

2006-06-01  Alphonse Bendt  <bendt@prismtech.com>

        * orb/ORB.java: startup: stricter error handling during
        startup. don't swallow exceptions. instead raise
        INITIALIZE (configurable).

        related to scarab JAC#105

        * orb/portableInterceptor/ORBInitInfoImpl.java (merge): don't
        modify the target list. otherwise multiple calls to
        getXXXInterceptors() will mess up the internal state of the
        object.

        * orb/ORB.java (_getObject): removed senseless debug output

        startup: stricter error handling during startup. don't swallow
        exceptions. instead raise INITIALIZE.

        related to scarab JAC#105

2006-06-01  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ORB.java: JAC#115 Check serverIdStr as well.

2006-06-01  Alphonse Bendt  <bendt@prismtech.com>

        * idl/Interface.java (printHelper): changed generated narrow
        method to use instanceof operator instead of relying on
        classcastexceptions

        see http://lists.spline.inf.fu-berlin.de/pipermail/jacorb-developer/2006-March/008109.html

2006-05-31  Alphonse Bendt  <bendt@prismtech.com>

        * orb/CDRInputStream.java (read_untyped_value):
        delegate calculation of chunkSize to new method readChunkSizeTag()

        (readChunkSizeTag): new method that speculatively reads in the
        chunksize but pushes back the result if it looks like a
        valuetag. fix for better rmi/iiop-interoperability with the sun
        orb

2006-05-30  Nick Cross  <nick.cross@prismtechnologies.com>

        * config/JacORBConfiguration.java: Add handling for singleton
        logfile with implname set.

2006-05-29  Alphonse Bendt  <bendt@prismtech.com>

        * idl/UnionType.java: fix union IDL bugs. added test and fix.

        related to scarab JAC#104

        * orb/ORB.java, orb/portableInterceptor/InterceptorManager.java,
        orb/portableInterceptor/ORBInitInfoImpl.java: split
        ORBInitializer.pre_init and post_init:

        to be able to resolve a current object registered via an
        ORBInitializer, pre_init() must be called prior to creating the
        ClientConnectionManager, post_init should still not be called
        until the ORB is done with all other internal initialization.

        code cleanup & refactoring

        related to scarab JAC#96

        * notification/filter/DefaultFilterFactoryDelegate.java
        (getAttributeNamesWithPrefix): moved method to JacORBConfiguration

        * config/Configuration.java,
        config/JacORBConfiguration.java (getAttributeNamesWithPrefix): new
        method

        * idl/Module.java: test and fix for issue when using JacIDL with
        the -ir and the -i2jpackage option

        related to JAC#101

        * orb/giop/ClientConnectionManager.java: removed unused code

        * orb/giop/MessageReceptorPool.java (c'tor): fixed boolean expression

        * imr/ImplementationRepositoryImpl.java, orb/BasicAdapter.java,
        orb/giop/ClientConnectionManager.java,
        orb/giop/MessageReceptorPool.java: added extra properties to
        configure the MessageReceptorPool

        related to JAC#89

        * security/ssl/sun_jsse/README.jsse1_0_2,
        security/ssl/sun_jsse/README.jsse1_0_3: enhanced SSL doc

        related to JAC#25

        * config/JacORBConfiguration.java: logfile for the singleton ORB

        related to JAC#3

2006-05-24  Alphonse Bendt  <bendt@prismtech.com>

        * config/JacORBConfiguration.java (initLogging):
        improve handling for orbsingleton logger

        * config/JacORBConfiguration.java (initLogging):
        extra handling for orbsingleton logger

        * config/JacORBConfiguration.java (loadPropertiesFromClasspath):
        bugfix as the context CL might be null

        * orb/ORBSingleton.java (c'tor): added debug output

        * config/JacORBConfiguration.java (initLogging):
        append .log to the serverId/orbsingleton logfilename

        * poa/RPPoolManager.java: cosmetics

        * poa/RPPoolManagerFactory.java: test

        * orb/ORB.java, poa/POA.java, poa/RPPoolManager.java,
        poa/RPPoolManagerFactory.java, poa/RequestController.java:
        introducing property "jacorb.poa.thread_pool_shared" error
        checking for props thread_pool_max and thread_pool_min refactored
        code a bit

        these changes are related to scarab JAC#88

        * poa/POAMonitorLightImpl.java: fixed small bug

        * poa/POAMonitorImpl.java: cosmetics

2006-05-23  Alphonse Bendt  <bendt@prismtech.com>

        * orb/ORB.java, poa/Current.java: current now uses jdk 1.2
        collectionclasses internally

        * config/JacORBConfiguration.java, orb/ORBSingleton.java:
        cleaned up configuration

        * config/JacORBConfiguration.java, orb/ORB.java,
        orb/ORBSingleton.java, poa/POA.java: moved serverId from POA to
        ORB

        if the property jacorb.logfile is set to the value $implname and
        no implname is set the serverId will be used to name the logfile

        special handling for the singleton orb

2006-05-23  Nick Cross  <nick.cross@prismtechnologies.com>

        * poa/AOM.java: Patch for ServantActivator local object invocation
        and AOM from prismtech for bug314 (JAC2).

2006-05-23  Alphonse Bendt  <bendt@prismtech.com>

        * notification/servant/AbstractProxySupplier.java: added debug

        * notification/AbstractChannelFactory.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/TypedEventChannelImpl.java,
        notification/container/PicoContainerFactory.java,
        notification/filter/EvaluationContext.java,
        notification/servant/AbstractAdmin.java: fixed test failures under
        eclipse

        * notification/AbstractEventChannel.java: cosmetics

2006-05-23  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ORB.java, orb/ORBSingleton.java: Tweak previous
        configuration change to Singleton to prevent wierd class
        construction errors.

2006-05-22  Alphonse Bendt  <bendt@prismtech.com>

        * orb/BasicAdapter.java, orb/BufferManager.java,
        orb/Delegate.java, orb/ReplyReceiver.java,
        orb/giop/ClientConnectionManager.java,
        orb/giop/MessageReceptorPool.java,
        orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPListener.java,
        util/threadpool/ThreadPool.java,
        imr/ImplementationRepositoryImpl.java,
        imr/ServerStartupDaemonImpl.java, poa/POA.java,
        poa/POAManager.java: named threads.

        this fixes
        http://www.jacorb.org/cgi-bin/bugzilla/show_bug.cgi?id=472 and is
        also related to scarab JAC#91

        * orb/Delegate.java (is_a): loading of stub class would not work
        as the classname wasn't composed correctly

        * orb/Delegate.java: cosmetics

        * orb/CDRInputStream.java: tests and extra logging for JAC#45

        * orb/ORBSingleton.java: fix: orbsingleton would not load its
        configuration

        * config/JacORBConfiguration.java: cosmetics

2006-05-19  Alphonse Bendt  <bendt@prismtech.com>

        * orb/dynany/DynValue.java: fix cvs id

        * orb/dynany/DynAny.java, orb/dynany/DynAnyFactoryImpl.java,
        orb/dynany/DynArray.java, orb/dynany/DynEnum.java,
        orb/dynany/DynSequence.java, orb/dynany/DynStruct.java,
        orb/dynany/DynUnion.java, orb/dynany/DynValue.java: cosmetics

        * orb/NVList.java, orb/dii/Request.java, orb/dsi/ServerRequest.java:
        changed NVList.list from Vector to ArrayList

        * orb/iiop/ClientIIOPConnection.java (connect): added debug information

        * orb/dsi/ServerRequest.java, orb/dii/Request.java,
        orb/diop/DIOPFactories.java, poa/Current.java: cosmetics

        * idl/StringType.java, idl/TemplateTypeSpec.java, idl/parser.cup:
        fix for scarab JAC#81: JacORB ignores the length parameter in
        bounded string typedefs.

        * idl/JacIDL.java: cosmetics

        * naming/NamingContextImpl.java, naming/Name.java,
        naming/NameServer.java: more logging enhancement.

        replace ex.printStackTrace() with logger.error("", ex)

        * orb/ORB.java: fix for bugzilla 689

        introduced a new sublogger that is only used for printing out the
        version number.  added a custom configuration in jacorb.properties
        that sets the loggers level to INFO

        http://www.jacorb.org/cgi-bin/bugzilla/show_bug.cgi?id=689

2006-05-18  Alphonse Bendt  <bendt@prismtech.com>

        * poa/RequestProcessor.java: changed RequestProcessor to use
        exception.toString() instead of exception.getMessage as this shows
        more information.

        * orb/iiop/IIOPListener.java (createAddressProfile):
        scarab JAC#75 Improve debug - add fixed port debug

        * orb/ParsedIOR.java: better error checking for parsing invalid iors

        related to scarab JAC#69

        * idl/parser.cup:
        http://www.jacorb.org/cgi-bin/bugzilla/show_bug.cgi?id=688

        include "-diistub" in Programming Guide and help output of idl compiler
        patch by thomas leineweber

        * orb/Any.java, orb/CDRInputStream.java, orb/dynany/DynArray.java,
        orb/dynany/DynEnum.java, orb/dynany/DynStruct.java,
        orb/dynany/DynUnion.java: fix for using an Object Reference inside
        a DynAny

        related to scarab JAC#62

        * idl/ObjectTypeSpec.java, idl/VectorType.java: IDL compiler
        generates code that requires objecthelper.java - that only exists
        in rt.jar, doesn't exist in IBM J9 which therefore
        chokes. According to http://www.omg.org/issues/issue1536.txt it
        shouldn't be doing this.

        related to scarab JAC#42

        * naming/NamingContextImpl.java (init): set delegate during
        initialization

2006-05-17  Alphonse Bendt  <bendt@prismtech.com>

        * naming/NameServer.java: fixed test

        * poa/POA.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SSLComponentInterceptor.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java,
        orb/iiop/IIOPFactories.java, orb/iiop/IIOPListener.java,
        orb/iiop/IIOPProfile.java, orb/giop/ClientConnectionManager.java,
        orb/giop/GIOPConnectionManager.java,
        orb/giop/TransportManager.java,
        orb/factory/SocketFactoryManager.java, orb/etf/FactoriesBase.java,
        orb/dynany/DynAny.java, orb/dynany/DynArray.java,
        orb/dynany/DynEnum.java, orb/dynany/DynFixed.java,
        orb/dynany/DynStruct.java, orb/CDRInputStream.java,
        orb/CDROutputStream.java, orb/ORB.java, orb/ReplyReceiver.java,
        orb/Any.java, notification/util/GNUPatternWrapper.java,
        notification/util/JakartaRegexpPatternWrapper.java,
        notification/util/PatternWrapper.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/TypedConsumerAdminImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedSupplierAdminImpl.java,
        notification/impl/DefaultMessageFactory.java,
        notification/filter/impl/DefaultETCLEvaluator.java,
        notification/filter/etcl/DivOperator.java,
        notification/filter/etcl/DomainNameShorthandNode.java,
        notification/filter/etcl/ETCLFilterConstraint.java,
        notification/filter/etcl/EventNameShorthandNode.java,
        notification/filter/etcl/StaticTypeChecker.java,
        notification/filter/etcl/TCLCleanUp.java,
        notification/filter/etcl/TypeNameShorthandNode.java,
        ir/WstringDef.java, ir/StringDef.java, ir/IdlWriter.java,
        ir/FixedDef.java:

        related to scarab JAC#35:

        change

        throw new <Exception> (OldException.getMessage())

        to

        throw new <Exception> (OldException.toString())

        toString provides more than getMessage

        * imr/util/ImRManager.java, imr/util/ImRModel.java:
        related to scarab JAC#35:

        improve logging: do not log to STDOUT. use logger instead error
        handling: throw INTERNAL if exception occurs that "should not
        happen" cosmetics: indentation, removed unused code, etc.

        * idl/ReplyHandler.java: related to scarab JAC#35:

        change

        throw new <Exception> (OldException.getMessage())

        to

        throw new <Exception> (OldException.toString())

        toString provides more than getMessage

        * ir/RepositoryImpl.java, idl/parser.cup, idl/parser.java,
        idl/sym.java, orb/ORB.java, orb/BasicAdapter.java, orb/Any.java,
        ir/ConstantDef.java, ir/Contained.java, ir/FixedDef.java,
        ir/IdlWriter.java, ir/InterfaceDef.java, ir/QueryIR.java,
        ir/StringDef.java, ir/WstringDef.java, idl/TypeSpec.java,
        idl/ConstExprEvaluator.java: related to scarab JAC#35:

        improve logging: do not log to STDOUT. use logger instead error
        handling: throw INTERNAL if exception occurs that "should not
        happen" cosmetics: indentation, removed unused code, etc.

        * idl/javamapping/JavaMappingGeneratingVisitor.java:
        cosmetics: remove debug code

        * orb/giop/BiDirConnectionInitializer.java,
        orb/iiop/IIOPProfile.java,
        orb/portableInterceptor/ServerInterceptorIterator.java,
        orb/rmi/PortableRemoteObjectDelegateImpl.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SSLComponentInterceptor.java: related to
        scarab JAC#35:

        improve logging: do not log to STDOUT. use logger instead error
        handling: throw INTERNAL if exception occurs that "should not
        happen" cosmetics: indentation, removed unused code, etc.

        * orb/dynany/DynSequence.java: replaced Vector with List

        * orb/dynany/DynAny.java, orb/dynany/DynAnyFactoryImpl.java,
        orb/dynany/DynArray.java, orb/dynany/DynEnum.java,
        orb/dynany/DynFixed.java, orb/dynany/DynSequence.java,
        orb/dynany/DynStruct.java, orb/dynany/DynUnion.java,
        orb/dynany/DynValue.java: related to scarab JAC#35:

        improve logging: do not log to STDOUT. use logger instead error
        handling: throw INTERNAL if exception occurs that "should not
        happen" cosmetics: indentation, removed unused code, etc.

2006-05-16  Alphonse Bendt  <bendt@prismtech.com>

        * idl/InterfaceBody.java, idl/ScopedName.java, orb/Any.java,
        orb/TypeCode.java: some changes related to scarab JAC#34 and
        JAC#33: Modification of equal() operation in TypeCode Modification
        of equal() operation on Any plus some extra checks for error
        conditions

        * orb/dynany/DynAnyFactoryImpl.java, orb/dynany/DynValue.java:
        scarab JAC#32: Add DynamicAny DynValue idl, dummy impl class and
        factory.

        * idl/build.xml: revert last checkin as 11a isn't backward
        compatible. instead some ant magic that check if parser really
        needs to regenerated

2006-05-16  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/build.xml: Upgrade cup to 11a from
        http://www2.cs.tum.edu/projects/cup/

2006-05-16  Alphonse Bendt  <bendt@prismtech.com>

        * idl/IdlSymbol.java (getFullName): added javadoc

        * idl/SequenceType.java (printWriteStatement): removed unused variable

        * idl/IdlSymbol.java (getFullName): this is a fix for bugzilla
        #686. correct boolean logic

        * idl/ValueDecl.java (printClass): (printFactory):
        (printHelper):
        (printHolder): IDL Compilation - Value Types

        With a forward declared valuetype which has a factory the forceOverwrite
        option (even if set default) will cause the Valuetype generation to be
        incorrect e.g. in the helper the factory methods won't exist.

        * orb/ORB.java: cosmetics

        * orb/ORB.java (create_operation_list): bugfix. index off by one error

2006-05-15  Alphonse Bendt  <bendt@prismtech.com>

        * idl/AliasTypeSpec.java, idl/ConstrTypeSpec.java,
        idl/FixedPointType.java, idl/IdlSymbol.java, idl/Interface.java,
        idl/ScopedName.java, idl/SequenceType.java, idl/ValueAbsDecl.java:
        test and fix for JAC#307:

        The CORBA valuetypes StringValue and WStringValue are defined in
        the file orb.idl. Now when we used these value types in other IDL
        files, the generated output is 'omg.org.java.lang.String' which
        causes compilation errors.

        * imr/ImplementationRepositoryImpl.java: fix for RT#1312: Problems
        with locate forward request

        When creating the replyoutputstream need to denote whether we got a
        request or locaterequest. Modified ImplementationRepositoryImpl.

        * ir/gui/IRBrowser.java,
        ir/gui/typesystem/remote/RemoteTypeSystem.java: RT#1296:
        InterfaceRepository

        run out of box, error checking in browser, doc update, added irbrowser
        script.

        * orb/CDROutputStream.java: related to RT#1278: fix orb determination

        * ir/RepositoryID.java: RT#1278: better error handling in RepositoryID

        * orb/util/PingObject.java: changed cmd line option format for pingo

        * orb/giop/ClientConnection.java: RT#1229: extra debug information
        when codeset negotiation fails

        * orb/giop/CodeSet.java, orb/util/PrintIOR.java: RT#1056: Codeset issue

        the problem occurs due to the fact that System.getProperties returns a
        different value depending on *both* the value of the native encoding
        (e.g. LC_ALL=UTF8) and the operating system.

        For instance for Linux it may return ISO-8859-1 while for HP it returns
        8859_1. This may be shown by running CodeSet.main(). We are going
        to modify how it retrieves the encoding name so it uses the canonical
        name (ISO8859_1 on linux, hp and solaris).

        Modified:
        CodeSet.java to use canonical name
        PrintIOR.java to output encoding details if in debug mode and tidied
        output format up a bit

        * orb/build.xml, orb/diop/DIOPFactories.java,
        orb/giop/TransportManager.java: RT#1022: The JacORB dior utility
        should be able to decode DIOP IORs. This is a TAO protocol which
        is essentially GIOP/UDP

        * orb/ParsedIOR.java: code cosmetics

2006-05-14  Alphonse Bendt  <bendt@prismtech.com>

        * idl/build.xml: added target to generate idl parser

2006-05-13  Gerald Brose  <gerald.brose@acm.org>

        JacORB Version 2.2.4 released.

2006-05-12  Alphonse Bendt  <bendt@prismtech.com>

        * orb/CDRInputStream.java, orb/DataInputStream.java,
        orb/DataOutputStream.java, orb/Delegate.java, orb/ORB.java,
        orb/dsi/ServerRequest.java, orb/CDROutputStream.java,
        orb/giop/MessageOutputStream.java,
        orb/giop/ReplyOutputStream.java,
        orb/giop/RequestOutputStream.java,
        orb/giop/ServiceContextTransportingOutputStream.java: changes
        related to scarab RT#992: cannot unmarshal embedded valuetypes

        enhanced handling of factories and add
        implementations for DataOutput/InputStreams.

        * idl/parser.cup, idl/parser.java (init): not all static variables
        were reset properly. this caused the test suite to fail as some
        tests had side-effects on others.

        scarab ticket: JAC#289 Add thread reset to parser.init. Allows
        JacIDL to start from a clean (rather than having leftovers from
        previous runs).  src/org/jacorb/idl/parser.java
        src/org/jacorb/idl/parser.cup

2006-05-11  Alphonse Bendt  <bendt@prismtech.com>

        * idl/Interface.java (printInterface, printOperations,
        unwindTypedefs): another patch related to #643 from thomas
        leineweber. here is his comment:

        When AMI is used, the AMI-Interface- and -Operations-Class both inherit
        from the special org.omg.Messaging.ReplyHandler. The IDL-compiler
        internally can not unwind this type, as the internal representation as
        org.jacorb.idl.ReplyHanderlTypeSpec does not inherit from
        ConstrTypeSpec.

        So, I patched the calls to unwindTypedef within Interface.java
        to exclude this type from being unwound.

2006-05-11  Andre Spiegel  <spiegel@gnu.org>

        * naming/NameServer.java (main): Add shutdown hook as suggested by
        David Rodenbaugh in bug #605.

2006-05-11  Alphonse Bendt  <bendt@prismtech.com>

        * orb/dsi/ServerRequest.java (createReply): configure the outputstream
        related to JAC#10

        * orb/ORBSingleton.java (create_*_tc): added methods that take an
        extra boolean parameter to specify if the members should be
        checked. user invocations will always be checked.

        this is to allow interoperability with orbs that send compact typecodes.
        scarab id: JAC#10.
        this may be also an fix for bugzilla #375

        * orb/Delegate.java (request): configure the outputstream after
        creation.  related to JAC#10

        * orb/CDROutputStream.java (configure): made method public
        related to scarab id: JAC#10.

2006-05-11  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/parser.cup, idl/parser.java: JAC#325 Update yearString from
        2004 to 2006

2006-05-11  Alphonse Bendt  <bendt@prismtech.com>

        * orb/CDRInputStream.java (read_Typecode): do not validate members
        and invoke the newly added orb methods to create typecodes.  this
        is to allow interoperability with orbs that send compact
        typecodes.  scarab id: JAC#10.  this may be also an fix for
        bugzilla #375

2006-05-11  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/parser.cup: Update copyright string to match
        parser.java. Removed company/university reference.

2006-05-10  Andre Spiegel  <spiegel@gnu.org>

        * naming/NamingContextImpl.java (configuration):
        Made transient, as suggested by David Rodenbaugh in bug #605.

2006-05-09  Alphonse Bendt  <bendt@prismtech.com>

        * orb/dsi/ServerRequest.java, poa/POA.java:
        patch for bug 378 (JAC3) from prismtech

        * poa/RequestProcessor.java:
        patch from prismtech for bug314 (JAC2). testcase

        * poa/POA.java (_incarnateServant):
        patch from prismtech for bug314 (JAC2). new method

        * orb/Delegate.java (servant_preinvoke):
        patch from prismtech for bug314 (JAC2).

2006-05-04  Alphonse Bendt  <bendt@prismtech.com>

        * orb/ParsedIOR.java (parse_stringified_ior): throw BAD_PARAM in
        case the supplied stringified object reference cannot be decoded.

        see http://www.omg.org/issues/issue4128.txt and page 1121 in CORBA
        Spec 04-03-12

2006-05-02  Alphonse Bendt  <bendt@prismtech.com>

        * orb/CDRInputStream.java:
        (read) throw checked IOException instead of unchecked
        runtimeexceptions

        cosmetics

2006-05-02  Andre Spiegel  <spiegel@gnu.org>

        * orb/iiop/IIOPAddress.java: Patch by David Hartman to allow
        hiding of zone IDs.
        (hideZoneID): New field.
        (configure): Set it from property jacorb.ipv6.hide_zoneid.
        (write): Hide the zone ID if the property is on.
        (init_host): Reformat.

2006-04-26  Andre Spiegel  <spiegel@gnu.org>

        * idl/EnumType.java (printEnumClass): Add a toString() method.
        Suggested by Richard Hash in bug #535.

        * orb/TypeCode.java (originalType, resolveRecursion): Correctly
        resolve indirect recursion for TypeCodes of valuetypes. Patch by
        Thomas Leineweber, fixing bug #677.

2006-03-19  Andre Spiegel  <spiegel@gnu.org>

        * idl/Environment.java: Improve recognition of JDK version,
        add check for jdk 1.5.  Patch by Leon Rosenberg.

2006-03-18  Andre Spiegel  <spiegel@gnu.org>

        * orb/rmi/PortableRemoteObjectDelegateImpl.java (newRMIClassName):
        Restore pre-1.5 compatibility.

        * orb/iiop/ClientIIOPConnection.java (createSocket):
        Correct indentation.

        Changes by David Hartman to support IPv6:

        * orb/iiop/IIOPAddress.java (init_host): Handle IPv6. Rewritten to
        work without isIP().
        (isIP): Method removed.
        (getConfiguredHost): Cosmetic change.

        * orb/iiop/ClientIIOPConnection.java (createSocket): Properly
        initialize connection_info for IPv6.

        * orb/iiop/IIOPProfile.java (clone): Configure the new
        primaryAddress. This fixes bug #660.
        (decode_corbaloc): Changes to support IPv6.

2006-03-16  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java (get_client_policy): Optimized so that it does
        almost nothing when policies are not in use.

        * orb/ORB.java (internalInit): Don't create the PolicyManager yet.
        (resolve_initial_references): Create the PolicyManager on demand.
        (getPolicyManager): Add Javadoc to explain that it may return null.

2006-03-08  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/AbstractMessage.java: fix for #672

        * notification/TypedEventMessage.java,
        notification/filter/EvaluationResult.java,
        notification/filter/etcl/CurrentTimeNode.java: fix for #671

2006-03-07  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/engine/TaskProcessorRetryStrategy.java,
        notification/interfaces/IProxyPushSupplier.java,
        notification/servant/AbstractProxyPushSupplier.java,
        notification/servant/SequenceProxyPushSupplierImpl.java:
        cosmetics
        restrict number of concurrent push operations to 1

2006-03-06  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/engine/TaskProcessorRetryStrategy.java,
        notification/interfaces/IProxyPushSupplier.java,
        notification/interfaces/JMXManageable.java,
        notification/jmx/BroadcastSupportMBeanDecorator.java,
        notification/jmx/jboss/JMXManageableXMBeanProvider.java,
        notification/jmx/mx4j/JMXMain.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyPushSupplier.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java: cosmetics &
        changed order of events in case of an error

2006-03-05  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/filter/bsh/BSHFilter.java: cosmetics

2006-03-04  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/queue/AbstractBoundedEventHeap.java,
        notification/queue/BoundedReceiveTimeEventQueue.java,
        notification/queue/HeapEntry.java,
        notification/queue/QueueUtil.java: remove superfluous class
        HeapEntry

        * notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java (pushPendingData):
        process notifications in a loop to maintain order

        * notification/AbstractChannelFactory.java (c'tor): don't wait for
        completion while poa.destroy

2006-03-03  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java (getJMXObjectName): change
        order of name

        * notification/jmx/mx4j/JMXMain.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java,
        notification/servant/AbstractProxyPushSupplier.java,
        notification/queue/RWLockEventQueueDecorator.java: cosmetics

2006-02-25  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/AbstractMessage.java,
        notification/impl/DefaultMessageFactory.java,
        notification/interfaces/Message.java,
        notification/queue/AbstractBoundedEventHeap.java,
        notification/queue/AbstractBoundedEventQueue.java,
        notification/queue/BasicMessageQueueAdapter.java,
        notification/queue/BoundedDeadlineEventQueue.java,
        notification/queue/BoundedFifoEventQueue.java,
        notification/queue/BoundedPriorityEventQueue.java,
        notification/queue/BoundedReceiveTimeEventQueue.java,
        notification/queue/DefaultMessageQueueAdapter.java,
        notification/queue/EventQueueFactory.java,
        notification/queue/EventQueueOverflowStrategy.java,
        notification/queue/HeapEntry.java,
        notification/queue/QueueUtil.java,
        notification/queue/RWLockEventQueueDecorator.java: added a
        receivetimestamp to all messages. the fifo event queue will sort
        incoming messages on the basis of this timestamp.

        * notification/StructuredEventMessage.java,
        notification/container/BiDirGiopPOAComponentAdapter.java:
        cosmetics

2006-02-20  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/jmx/mx4j/JMXMain.java (main): allow to choose to
        run under jdk jmx or mx4j jmx

        * notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/lifecycle/ServantLifecyleControl.java,
        notification/EventChannelImpl.java,
        notification/AbstractEventChannel.java: cosmetics

2006-02-06  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * orb/Delegate.java (servant_preinvoke, is_local): if
        servant_preinvoke fails to return a servant the next call to
        is_local must return false. this behaviour is required by the
        java to idl language mapping spec. cosmetics

        * poa/RequestProcessor.java (specialOperations): changed Map to
        Set as it was only used that way

        * orb/rmi/PortableRemoteObjectDelegateImpl.java (toStub, toTie):
        load stub and tie classes

2006-02-05  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * poa/RequestProcessor.java: applied patch for bug #540.

        this is a slightly modified version of the suggested fix.

        it is also necessary to check the value of terminate *after* the
        wait as the thread may be terminated by invoking end().

        thanks to Enul Fekushi for reporting the bug and providing a fix

        * idl/Interface.java: applied patch for bug #643.

        thanks to thomas leineweber for reporting the bug and supplying a patch.

        * notification/jmx/jboss/build.xml: skip targets if jboss.home is
        not set

2006-02-02  Phil Mesnier  <phil.mesnier@ociweb.com>

        * trading/test/ExceptionTest.java, trading/test/LoadTest.java,
        trading/util/QueryPropagator.java: Updated tests and demos to be
        consistent with other environment changes

        * orb/iiop/ClientIIOPConnection.java: Allow a custom jacorb.jar to
        exclude sas and other security classes.

2006-01-31  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/AbstractChannelFactory.java,
        notification/ConsoleMain.java (registerName): remove name binding
        if supplied name is null or empty string

        * notification/FilterManager.java (add_filter): reduce log level
        to info.

2006-01-29  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/filter/CallbackManager.java (actionSetChanged):
        change log level

        * notification/servant/AbstractProxySupplier.java (registerListener):
        change log level

        * notification/OfferManager.java,
        notification/SubscriptionManager.java (actionSetChanged): change
        log level

2006-01-21  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/AbstractEventChannel.java,
        notification/conf/Attributes.java, notification/conf/Default.java,
        notification/filter/AbstractFilter.java,
        notification/filter/FilterFactoryImpl.java,
        notification/lifecycle/ServantLifecyleControl.java,
        notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java: related to
        #654. optionally run System.gc/System.runfinalization on
        deactivation of servants.

        thanks to David Rodenbaugh for suggesting this

2006-01-12  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/AbstractChannelFactory.java,
        notification/AbstractEventChannel.java,
        notification/EventChannelImpl.java,
        notification/TypedEventChannelImpl.java,
        notification/filter/AbstractFilter.java,
        notification/filter/FilterFactoryImpl.java,
        notification/filter/bsh/BSHFilter.java,
        notification/filter/etcl/ETCLFilter.java,
        notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/ECProxyPullConsumerImpl.java,
        notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushConsumerImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/ManageableServant.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminImpl.java,
        notification/servant/TypedConsumerAdminImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java,
        notification/servant/TypedSupplierAdminImpl.java,
        notification/lifecycle/IServantLifecyle.java,
        notification/lifecycle/ManageableServant.java,
        notification/lifecycle/ServantLifecyleControl.java: refactored
        servant lifecycle. created own package that contains the logic to
        activate and deactivate the notify servants.

2006-01-11  Andre Spiegel  <spiegel@gnu.org>

        * util/threadpool/ThreadPool.java (getJob, putJob): Rewritten so
        that it properly handles the case when max_idle_threads is
        reached. This fixes bug #652, thanks to Oguzhan Eris for the
        patch.

        * orb/Delegate.java (release): Implement to do roughly what
        finalize() was doing before.  This allows clients to let go of a
        Delegate programmatically.
        (finalize): Rewritten to call the above. Thanks to Cliff Zhao for
        suggesting the patch.

2006-01-10  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/servant/AbstractProxy.java,
        notification/servant/ECProxyPullConsumerImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushConsumerImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java (activate):
        pulled implementation to baseclass and fixed it. it was buggy as
        the wrong poa was used for activation.

        * notification/servant/SupplierAdminImpl.java: cosmetics

        * notification/servant/ConsumerAdminImpl.java (actionProxyDisposed):
        refresh list of proxies to allow non used servants to be gc'ed

        * notification/servant/FilterStageListManager.java (refresh):
        added new method that refreshes the list to allow gc to run

        * notification/interfaces/ProxyEventAdapter.java:
        added listener adapter

        * notification/servant/AbstractProxy.java (tryDisconnectClient):
        set client_ to null even if an exception gets thrown thanks to
        David Rodenbaugh for suggesting that fix.

2006-01-09  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/servant/AbstractProxySupplier.java,
        notification/servant/AbstractProxyConsumer.java: this is a bugfix
        for bugzilla #654
        (clientDisconnected): set client reference to null after client
        disconnect to allow gc'ing of the stub

        * notification/servant/AbstractProxy.java: this is a bugfix for
        bugzilla #654:
        (clientDisconnected): new abstract callback method
        (dispose): invoke clientDisconnected after client has been
        disconnected
        (tryDisconnectClient): set member client_ to null after client has
        been disconnected

2006-01-09  Andre Spiegel  <spiegel@gnu.org>

        * orb/giop/GIOPConnection.java (sendMessage): Don't close on
        transport connect failure, since the connection may be reused
        later.  Thanks to Cliff Zhao for the analysis.

2006-01-06  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/servant/TypedProxyPullConsumerImpl.java (pullMessages):
        return unmodifiable map

        * notification/servant/PullMessagesOperation.java (runPullInternal):
        reordered operations so that lock is always released

        * notification/servant/AbstractProxy.java (tryDisconnectClient):
        changed loglevel of statement

        * notification/servant/AbstractAdmin.java: cosmetics

        * notification/jmx/mx4j/JMXMain.java (main): set system property
        javax.management.builder so that mx4j is always used. this is
        necessary on jdk1.5 as it brings its own implementation of jmx

        * notification/jmx/UnregisterObjectNameProviderDecorator.java,
        notification/interfaces/NotifyingDisposable.java: javadoc

        * notification/engine/DefaultPushTaskExecutorFactory.java:
        cosmetics

2005-12-31  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/servant/AbstractAdmin.java: whitespace

2005-12-12  David R Robison  <drrobison@openroadsconsulting.com>

        * trading/db/simple/types/TypeDatabaseImpl.java,
        trading/db/simple/offers/OfferDatabaseImpl.java: Sync access to DB

        * trading/impl/RepositoryImpl.java: Sync access to type

        * trading/TradingService.java: Use POA for Trader

2005-12-10  Gerald Brose  <gerald.brose@acm.org>

        * Version 2.2.3 released.

2005-12-10  Gerald Brose  <gerald.brose@acm.org>

        * idl/parser.java: updated copyright string: removed
        company/university reference

2005-12-08  Phil Mesnier  <phil.mesnier@ociweb.com>

        * orb/iiop/IIOPAddress.java, orb/iiop/IIOPProfile.java: Fixed
        errors found by unit test related to hashing of IIOPAddress and
        cloning of profiles.

        * orb/policies/PolicyManager.java: toned down excessive debug
        output by only printing policy retrival metrics when length > 0

2005-12-07  Andre Spiegel  <spiegel@gnu.org>

        * orb/giop/ServerGIOPConnection.java (toString): Be robust if for
        some reason we don't have a profile (happens only in testing, I
        believe).

        * orb/SystemExceptionHelper.java (read): If we cannot instantiate
        the received exception, return an UNKNOWN SystemException, rather
        than throwing it.  This fixes bug #627.

        * orb/BufferManager.java (singletonConfigure, release):
        Synchronize, fixing bug #646.

        * config/JacORBConfiguration.java (loadPropertiesFromFile,
        loadPropertiesFromClassPath): Close the input streams after
        loading the properties. Don't use buffering, because the
        Properties class does that already.  Improve exception handling.

2005-12-04  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/jmx/jboss/build.xml: delete .jar after build of .sar

        * notification/TypedEventChannelFactoryImpl.java
        (get_typed_event_channel): bugfix. access corba reference instead
        of servant

2005-12-02  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/jmx/jboss/build.xml: renamed targets

        * notification/util/PropertySet.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java: minor
        refactorings and code cleanup

        * notification/queue/RWLockEventQueueDecorator.java: javadoc

2005-12-01  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/build.xml, notification/jmx/jboss/build.xml:
        cleaned up build

        * notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/FilterStageListManager.java,
        notification/servant/IProxyConsumer.java,
        notification/servant/SupplierAdminImpl.java,
        notification/servant/TypedSupplierAdminImpl.java: minor
        refactorings and code cleanup

        * notification/interfaces/FilterStage.java: javadoc

        * notification/impl/DefaultMessageFactory.java,
        notification/engine/FilterConsumerAdminTask.java: code cosmetics

        * notification/conf/Default.java (DEFAULT_LAZY_DEFAULT_ADMIN_INIT):
        is boolean now

        * notification/TypedEventChannelImpl.java: code cosmetics

        * notification/StructuredEventMessage.java (parseQoSSettings):
        option StopTime only has an effect if consumer supports stopTime

        * notification/EventChannelImpl.java (c'tor): create admin lazily
        unless configuration is set

        * notification/AbstractMessage.java: code cosmetics

        * notification/AbstractEventChannel.java:
        (getDefaultConsumerAdminServant, getDefaultSupplierAdminServant):
        always set InterFilterGroupOperator

        code cleanup

2005-11-26  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/filter/ParseException.java (c'tor):
        add etcl expression that caused the parse failure

        * notification/filter/etcl/grammar/tcl.g,
        util/threadpool/ThreadPool.java: code cosmetics

2005-11-25  Phil Mesnier  <phil.mesnier@ociweb.com>

        * orb/iiop/IIOPAddress.java: Fix to allow for assignment from a
        string with an empty hostname

2005-11-21  Phil Mesnier  <phil.mesnier@ociweb.com>

        * orb/ORB.java, orb/iiop/IIOPAddress.java,
        orb/iiop/IIOPProfile.java: One more round of fixes to ensure
        complete backwards compatibility for IIOP Address use

        * orb/ORB.java, orb/iiop/IIOPAddress.java: Fixed problems related
        to use of unresolvable names in ior proxy configuration

2005-11-20  Andre Spiegel  <spiegel@gnu.org>

        * transaction/TransactionInitializer.java (post_init):
        Pass a Logger to the ClientContextTransferInterceptor.

        * transaction/ClientContextTransferInterceptor.java (logger):
        New instance var.
        (c'tor): Add parameter to pass the logger in.
        (send_request): Log service context creation at debug level.

2005-11-19  Gerald Brose  <gerald.brose@acm.org>

        * idl/ValueDecl.java:
        (print) applied patch by Thomas Leinweber for bug #539

        * idl/ValueDecl.java: applied patch for #492 by Thomas Leineweber

        * idl/ScopedName.java: (escapeName) fix for bug #610

        * idl/NameTable.java: cosmetics only

        * idl/IdlSymbol.java: new method isEscaped()

2005-11-17  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/build.xml: cleaned up dependencies

2005-11-16  Phil Mesnier  <phil.mesnier@ociweb.com>

        * idl/parser.java: Refactored static initialization to accomodate
        Blackdown's 1.4.2-02 JVM on AMD 64-bit host running linux 2.4
        kernel

2005-11-15  Andre Spiegel  <spiegel@gnu.org>

        * orb/giop/TransportManager.java (getFactories, getFactoriesList):
        Synchronized, fixing bug #642.  Thanks to Justin Permar for the
        report.

2005-11-15  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * idl/ValueDecl.java: this is a fix for bug #512. unwind
        valuetype inheritance specifications which have been
        typedef'd. thanks to thomas leineweber for providing the patch

2005-11-13  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * naming/namemanager/ContextNode.java: feature request #427
        populate 5th row with port number

        * naming/namemanager/NSTableModel.java: feature request #427
        (getColumnCount, c'tor): added a 5th row (Portnumber)

2005-11-11  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * orb/factory/DefaultServerSocketFactory.java,
        orb/factory/PortRangeFactory.java,
        orb/factory/PortRangeServerSocketFactory.java:
        this is a fix for #645
        if the specified port param lies within the port range of
        the Factory it first tries to open this port. If this fails
        another port from the port range is tried.  i have also
        refactored PortRangeServerSocketFactory to delegate the actual
        creation to an instance of DefaultServerSocketFactory and added a
        testcase.

        * notification/impl/PoolingEvaluationContextFactory.java,
        notification/util/AbstractObjectPool.java,
        notification/util/AbstractPoolablePool.java: renamed template
        methods to begin with do...

        * notification/impl/DefaultMessageFactory.java: code cleanup

        * notification/util/LogUtil.java: renamed class Configuration to
        JacORBConfiguration and extracted the interface Configuration.

        * notification/container/PicoContainerFactory.java,
        notification/engine/AbstractFilterTask.java,
        notification/engine/DefaultTaskExecutor.java,
        notification/engine/DefaultTaskFactory.java,
        notification/engine/DefaultTaskProcessor.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/TaskExecutor.java,
        notification/engine/TaskFactory.java,
        notification/engine/TaskProcessor.java: removed isTaskQueued logic
        as it is not supported by the underlying util.concurrent lib

        * notification/container/LocalParameterComponentAdapter.java,
        notification/NotifyServer.java: code cleanup

        * notification/EventChannelImpl.java,
        notification/TypedEventChannelImpl.java (getIOR): new channel
        specific implementation

        * notification/AbstractMessage.java, notification/AnyMessage.java,
        notification/StructuredEventMessage.java,
        notification/TypedEventMessage.java (reset): method is final and
        invokes template method doReset which may be subclassed

        * notification/AbstractEventChannel.java: code cleanup

        * orb/etf/ConnectionBase.java (configure): renamed class
        Configuration to JacORBConfiguration.

        * orb/ORB.java (set_parameters): renamed class Configuration to
        JacORBConfiguration.

        * config/Configuration.java, config/JacORBConfiguration.java:
        renamed class Configuration to JacORBConfiguration and extracted
        the interface Configuration.

        * notification/filter/etcl/grammar/comp-lexer.g,
        notification/filter/etcl/grammar/tcl.g: code cleanup

        * notification/jmx/jboss/JBossCOSNotificationService.java: javadoc

        * notification/servant/AbstractProxySupplier.java
        (clearPendingMessageQueue): new management operation

2005-11-07  Gerald Brose  <gerald.brose@acm.org>

        * build.xml: Added rules to build DDS

        * dds/DomainParticipantFactoryImpl.java,
        dds/DomainParticipantImpl.java, dds/EntityImpl.java,
        dds/PublisherImpl.java, dds/SubscriberImpl.java,
        dds/Supplier.java, dds/ThreadSubscriber.java, dds/TopicImpl.java,
        dds/build.xml: *** empty log message ***

2005-10-31  Andre Spiegel  <spiegel@gnu.org>

        * orb/giop/ClientConnection.java (closeConnectionReceived):
        Include connection id in debug message.

        * orb/giop/GIOPConnectionManager.java (createServerGIOPConnection):
        Add debug logging.

        * orb/giop/ServerGIOPConnection.java (toString): Overridden to
        display target profile and hex id of the object.
        (readTimedOut, streamClosed, tryClose): Improve debug logging.

        * orb/giop/GIOPConnection.java (logger): Protected instead of private.
        (profile): Add javadoc.
        (close, getMessage, sendMessage, waitUntilConnected): Improve
        debug logging.

        * orb/giop/ClientGIOPConnection.java (toString):
        Overridden to display target profile and hex id of the object.
        (closeAllowReopen, readTimedOut, streamClosed): Improve debug logging.

        * orb/giop/ClientConnectionManager.java:
        (addConnection(GIOPConnection)): Method removed, was unused.
        Debug logging enhanced in several methods.

2005-10-28  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/jmx/jboss/JBossCOSNotificationService.java:
        MBean uses persistent storage now to control initial notfiy settings

        * notification/ConsoleMain.java (help): don't invoke System.exit

        * notification/build.xml, notification/jmx/jboss/build.xml:
        inverted build file dependency. main notify build now invokes sar
        build file

        * notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java:
        reference inner class full qualified

        * notification/jmx/COSNotificationService.java (getEventChannelFactory):
        new method

        * notification/ConsoleMain.java (splitArgs): new method

2005-10-27  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/filter/etcl/ArrayOperator.java,
        notification/filter/etcl/AssocOperator.java,
        notification/filter/etcl/DomainNameShorthandNode.java,
        notification/filter/etcl/ETCLFilterConstraint.java,
        notification/filter/etcl/EventNameShorthandNode.java,
        notification/filter/etcl/NeqOperator.java,
        notification/filter/etcl/PropertyShorthandNode.java,
        notification/filter/etcl/TypeNameShorthandNode.java: code
        cleanup (compiler warnings)

        * notification/MessageFactory.java,
        notification/impl/DefaultMessageFactory.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxyConsumerI.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/FilterStageListManager.java,
        notification/servant/IProxyConsumer.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java: renamed
        interface AbstractProxyConsumerI => IProxyConsumer

        * notification/jmx/COSNotificationService.java (c'tor):
        renamed variables

        * notification/util/QoSPropertySet.java (checkPropertyValues):
        renamed variables

        * notification/AbstractEventChannel.java: renamed Interface

        * notification/WrapperMain.java (start): print out exception
        during start using wrapper logger

        * notification/AnyMessage.java,
        notification/NoTranslationException.java,
        notification/StructuredEventMessage.java: changed Exception c'tor

        * notification/EventChannelImpl.java: renamed xdoclet tag

        * orb/TypeCode.java (c'tor): invoke resolveRecursion
        (resolveRecursion): resolve actual typecode if this is an
        recursive typecode. this fixes bug #430. thanks to Dongjun Sun
        for supplying the patch

        * idl/TypeDeclaration.java (helperName): throw NoHelperException
        if type_decl is null

        * idl/UnionType.java (printHelperClass): applied patch for
        bug #505: IDL compiler generated wrong code for union with
        value-box. thanks to Thomas Leineweber for supplying the patch

2005-10-26  Andre Spiegel  <spiegel@gnu.org>

        * orb/giop/ClientConnectionManager.java (releaseConnection):
        Add debug statements.

        * orb/giop/ClientConnection.java (numClients): New method.

        * orb/giop/ClientGIOPConnection.java,
        orb/giop/GIOPConnection.java, orb/giop/ServerGIOPConnection.java:
        Add a few javadocs.

        * orb/giop/ClientConnection.java (decClients, incClients):
        Update javadoc.

2005-10-25  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * ir/RepositoryID.java (className): invoke convertFromISOLatin1
        when creating a RMI RepositoryID.  thanks to Lionel Chevry for
        supplying the patch.  fix for bug #528.

2005-10-25  Andre Spiegel  <spiegel@gnu.org>

        Patch by Trevor Harmon, fixing bug #622.

        * orb/standardInterceptors/SSLComponentInterceptor.java
        (establish_components): Disambiguate TAG_SSL_SEC_TRANS for OpenORB
        compatibility.

        * orb/iiop/IIOPProfile.java (decode_extensions, getSSL): Likewise.

2005-10-25  Duane Griffin  <d.griffin@psenterprise.com>

        * idl/ConstDecl.java (getValue, print, printContained): Refactor
        common code from print methods into separate method to get the
        declaration's value. Ensure that this method correctly handles
        short type codes (bug #631).

        * idl/Interface.java (parse): Fix bug where the compiler tries to
        parse the interface twice (bug #629).
        (parsed): New field.

2005-10-25  Andre Spiegel  <spiegel@gnu.org>

        * orb/iiop/IIOPConnection.java (setTimeout): Synchronize,
        otherwise the socket may be null'ed before we get a chance to set
        the timeout.

        * orb/giop/ServerGIOPConnection.java (tryClose): Add debug statements.

        * orb/giop/GIOPConnection.java (getMessage): Add debug messages.
        (sendMessage): If the transport connect fails, set do_close to true.

        * orb/ORB.java (shutdown): Call GIOPConnectionManager.shutdown().

        * orb/giop/GIOPConnectionManager.java (shutdown): New method.

2005-10-23  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/queue/AbstractBoundedEventQueue.java (addElement):
        renamed param

        * notification/util/QoSPropertySet.java: removed unused member

        * notification/engine/FilterConsumerAdminTask.java (pushToConsumer):
        removed unnecessary exception

        * notification/filter/etcl/ETCLComponentName.java (evaluate):
        reference static fields directly

2005-10-22  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/jmx/jboss/build.xml: jboss.home is now configurable
        form the outside

2005-10-21  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * orb/CDROutputStream.java (increaseSize): fixed bug #607. check
        would cause an ArrayOutOfBounds under certain circumstances (see
        testcase). thanks to Roland Scheel for reporting this bug and
        supplying a patch

        * orb/etf/StreamConnectionBase.java, util/ObjectUtil.java (flush):
        applied patch for bug #546. buffer content was not
        correctly traced.
        (bufToString): removed unnecessary synchronization

        thanks to marc heide for the bug report and the patch.

        * config/Configuration.java (getLoggerName): changed
        implementation as clz.getPackage() may return null.  this fixes
        bug #623 which was reported by Oliver Pajonk who also supplied a
        patch.

2005-10-19  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/jmx/UnregisterObjectNameProviderDecorator.java: doc

        * notification/filter/bsh/BSHFilter.java: javadoc

        * notification/filter/AbstractFilter.java,
        notification/filter/CallbackManager.java: InterruptedException
        does not occur any more due to the switch to
        backport-util-concurrent

        * notification/AbstractChannelFactory.java: cosmetics

        * notification/NotifyServer.java: imports

2005-10-19  David R Robison  <drrobison@openroadsconsulting.com>

        * notification/jmx/jboss/JBossCOSNotificationService.java,
        notification/jmx/jboss/jboss-service.xml: Create channel and
        register with NamingService

2005-10-18  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/jmx/jboss/build.xml: generate jboss jmx before compile

        * notification/jmx/jboss/build.xml: fixes by david robison

2005-10-13  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/jmx/jboss/build.xml,
        notification/jmx/jboss/jboss-service.xml: corrected lib paths

2005-10-12  David R Robison  <drrobison@openroadsconsulting.com>

        * notification/NotifyServer.java: Allows Notification service to
        be instantiated by a separate program.

2005-10-10  Phil Mesnier  <phil.mesnier@ociweb.com>

        * orb/etf/ProtocolAddressBase.java, orb/iiop/IIOPAddress.java:
        Refactored the toCDR() implementation, moving the generic parts to
        ProtocolAddressBase, and having that call write() to get the
        protocol specific details written

        * orb/iiop/IIOPListener.java: Removed unused local variable

2005-10-09  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * idl/SequenceType.java: fix for bug 630. thanks to Duane Griffin

2005-10-08  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/filter/CurrentTimeUtil.java,
        notification/filter/EvaluationContext.java,
        notification/filter/etcl/CurrentTimeNode.java,
        notification/impl/DefaultEvaluationContextFactory.java,
        notification/impl/PoolingEvaluationContextFactory.java: allow etcl
        evaluation to access a COSTime Service

        * notification/container/BiDirGiopPOAComponentAdapter.java,
        notification/container/CurrentTimeUtilComponentAdapter.java,
        notification/container/LocalParameterComponentAdapter.java,
        notification/container/PicoContainerFactory.java: added pico
        ComponentAdapter that allows specification of local params

        * notification/filter/impl/DefaultETCLEvaluator.java:
        minor code cleanup

2005-10-03  Andre Spiegel  <spiegel@gnu.org>

        Patch by Thomas Leineweber to add generation of DII stubs,
        see bug #628.

        * idl/OpDecl.java (printDIIBody, printStreamBody): New methods.
        (printMethod): Use them.

        * idl/ParamDecl.java
        (printAddArgumentStatement, printExtractArgumentStatement): New
        methods.

        * idl/NoHelperException.java: Initial revision.

        * idl/AliasTypeSpec.java, idl/AnyType.java,
        idl/ArrayTypeSpec.java, idl/BooleanType.java, idl/CharType.java,
        idl/ConstrTypeSpec.java, idl/DoubleType.java, idl/EnumType.java,
        idl/ExceptionHolderTypeSpec.java, idl/FixedPointType.java,
        idl/FloatType.java, idl/Interface.java, idl/LongLongType.java,
        idl/LongType.java, idl/ObjectTypeSpec.java, idl/OctetType.java,
        idl/ReplyHandlerTypeSpec.java, idl/SequenceType.java,
        idl/ShortType.java, idl/StringType.java, idl/StructType.java,
        idl/TypeCodeTypeSpec.java, idl/TypeDeclaration.java,
        idl/TypeSpec.java, idl/UnionType.java, idl/ValueAbsDecl.java,
        idl/ValueBoxDecl.java, idl/ValueDecl.java, idl/VectorType.java:
        (printInsertIntoAny, printExtractResult): New methods.

        * idl/parser.cup, idl/parser.java
        (generateDiiStubs): New field.
        (compile): Set it from new option -diistub.

        * idl/JacIDL.java
        (_generateDiiStubs): New field.
        (setGenerateDiiStubs): New method.
        (c'tor, execute): Use it.

2005-10-03  Andre Spiegel  <spiegel@gnu.org>

        * idl/NameTable.java (define, inheritFrom): Prevent shadowed
        definitions from crashing the compiler. Thanks to Duane Griffin
        and Thomas Leineweber, this fixes bug #470, bug #517, bug #616.

        * idl/ReplyHandler.java (createInheritanceSpec): Properly handle
        inheritance scope.  Patch by Duane Griffin, fixing bug #606.

2005-10-02  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/TODO.txt: updated todo list

        * notification/build.xml: added targets for conversion between
        backport-util-concurrent and java.util.concurrent

        * notification/filter/etcl/OrOperator.java,
        notification/servant/AbstractProxyPushSupplier.java: fixed
        compiler warnings

        * notification/filter/EvaluationContext.java: removed superfluous
        logger

        * notification/build.xml: added targets for conversion between
        backport-util-concurrent and java.util.concurrent

        * notification/AbstractChannelFactory.java,
        notification/AbstractEventChannel.java,
        notification/EventTypeSet.java, notification/FilterManager.java,
        notification/OfferManager.java,
        notification/SubscriptionManager.java,
        notification/engine/AbstractFilterTask.java,
        notification/engine/AbstractTask.java,
        notification/engine/DefaultPushTaskExecutor.java,
        notification/engine/DefaultTaskExecutor.java,
        notification/engine/DefaultTaskProcessor.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/Schedulable.java,
        notification/engine/TaskExecutor.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TaskProcessorRetryStrategy.java,
        notification/filter/AbstractFilter.java,
        notification/filter/CallbackManager.java,
        notification/filter/FilterFactoryImpl.java,
        notification/queue/BoundedDeadlineEventQueue.java,
        notification/queue/BoundedPriorityEventQueue.java,
        notification/queue/Heap2.java,
        notification/queue/RWLockEventQueueDecorator.java,
        notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxyPushSupplier.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/PullMessagesOperation.java,
        notification/servant/PullMessagesUtility.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/util/AbstractObjectPool.java: replaced
        util-concurrent with backport-util-concurrent to allow easier
        transition to jdk 1.5

        * notification/filter/etcl/CurrentTimeNode.java (evaluate):
        use optional TimeService

        * notification/jmx/mx4j/JMXMain.java (initORB): use specified args
        to create the ORB

        * notification/filter/bsh/BSHFilter.java: javadoc

        * notification/build.xml: used wrong property

2005-09-29  Francisco Reverbel  <reverbel@ime.usp.br>

        * poa/POA.java (_getChildPOA): changed to consider that an
        "unborn" child POA whose parent POA has no adaptor activator is
        perceived to be in the holding state while it its parent POA is in
        the holding state.

2005-09-27  Phil Mesnier  <phil.mesnier@ociweb.com>

        * imr/ImRAccessImpl.java, naming/namemanager/ContextNode.java,
        orb/BasicAdapter.java, orb/IIOPAddress.java, orb/ImRAccess.java,
        orb/ORB.java, orb/giop/BiDirConnectionInitializer.java,
        orb/giop/BiDirConnectionServerInterceptor.java,
        orb/util/PrintIOR.java: Replace explicit host/port with
        ProtocolAddressBase or IIOPAddress as appropriate

        * orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPAddress.java,
        orb/iiop/IIOPFactories.java, orb/iiop/IIOPListener.java,
        orb/iiop/IIOPLoopbackRegistry.java, orb/iiop/IIOPProfile.java,
        orb/iiop/ServerIIOPConnection.java: Integrate support for
        etfProtocolAddressBase into package.  Listener still can be
        configured via existing host/port config values or via the new
        OAAddress env var, 'iiop://myhost:12345'

        * orb/etf/FactoriesBase.java, orb/etf/ListenerBase.java,
        orb/etf/ProfileBase.java, orb/etf/ProtocolAddressBase.java: Added
        new base class for manipulating protocol-specific addresses in a
        generic way.

2005-09-27  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/BasicAdapter.java, orb/ORB.java, orb/dsi/ServerRequest.java,
        orb/giop/ServerRequestListener.java, poa/POA.java:
        - The previous change was reverted and the config property
          jacorb.registered_adapter_names was dumped.
        - POA._getChildPOA changed to consider that a POA is in the holding
          state while it its parent POA is in the holding state.

        * orb/BasicAdapter.java, orb/ORB.java, orb/dsi/ServerRequest.java,
        orb/giop/ServerRequestListener.java, poa/POA.java: Added config
        property jacorb.registered_adapter_names, which tells
        POA._getChildPOA not to throw

          OBJECT_NOT_EXIST("no adapter activator exists for " + adapter_name)

        for any of the registered adapter names. It makes POA._getChildPOA
        throw TRANSIENT instead. The new property solves the problem of
        spurious OBJECT_NOT_EXIST replies at server startup.

2005-09-10  Gerald Brose  <gerald.brose@acm.org>

        * naming/NameServer.java: removed HTTPClient and HTTP tunneling

2005-09-10  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/filter/AbstractFilter.java (match_NoLock): logging

2005-09-04  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/jmx/mx4j/JMXMain.java (start): do not start iiop
        connector

        * notification/jmx/mx4j/JMXMain.java: fixed IIOP Connector
        registration, added HTTP connector registration

        * notification/jmx/COSNotificationService.java (createChannel,
        ..): use logger instead of e.printStackTrace

        * notification/AbstractChannelFactory.java (c'tor, newFactory):
        only activate poamanager if orb is created locally

2005-08-22  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/filter/etcl/AbstractTCLVisitor.java,
        notification/filter/etcl/ImplicitOperatorNode.java,
        notification/servant/AbstractProxyPushSupplier.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java: code cleanup

2005-08-21  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/AbstractChannelFactory.java,
        notification/WrapperMain.java:
        (shutdown): wait at least 2 sec

        * notification/build.xml: disable jmx.mx4j and jmx.jboss by default

        * orb/dns/DNSLookup.java: full qualify imports to prevent warning
        during xdoclet code generation

        * notification/util/AbstractObjectPool.java,
        notification/util/AbstractPoolable.java,
        notification/util/CollectionsWrapper.java,
        notification/util/DefaultWildcardMap.java,
        notification/util/LogUtil.java,
        notification/util/WildcardMap.java: small fixes

        * notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxyConsumerI.java,
        notification/servant/AbstractProxyPushSupplier.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/ECProxyPullConsumerImpl.java,
        notification/servant/ECProxyPushConsumerImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/FilterStageListManager.java,
        notification/servant/IAdmin.java,
        notification/servant/IEventChannel.java,
        notification/servant/ITypedAdmin.java,
        notification/servant/MessageSupplierDelegate.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/PullMessagesOperation.java,
        notification/servant/PullMessagesUtility.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminImpl.java,
        notification/servant/TypedConsumerAdminImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java,
        notification/servant/TypedSupplierAdminImpl.java: jmx support and
        refactoring

        * notification/queue/AbstractBoundedEventQueue.java,
        notification/queue/BasicMessageQueueAdapter.java,
        notification/queue/BoundedDeadlineEventQueue.java,
        notification/queue/BoundedFifoEventQueue.java,
        notification/queue/BoundedPriorityEventQueue.java,
        notification/queue/EventQueueOverflowStrategy.java,
        notification/queue/MessageQueue.java,
        notification/queue/MessageQueueAdapter.java,
        notification/queue/RWLockEventQueueDecorator.java: jmx support

        * notification/jmx/BroadcastSupportMBeanDecorator.java,
        notification/jmx/COSNotificationService.java,
        notification/jmx/EventChannelFactoryControl.java,
        notification/jmx/EventChannelFactoryMBean.java,
        notification/jmx/JMXMain.java,
        notification/jmx/JMXManageableMBeanProvider.java,
        notification/jmx/UnregisterObjectNameProviderDecorator.java: core
        jmx support

        * notification/engine/AbstractFilterTask.java,
        notification/engine/AbstractRetryStrategy.java,
        notification/engine/AbstractTask.java,
        notification/engine/AlwaysDisposeRetryStrategy.java,
        notification/engine/DefaultPushTaskExecutor.java,
        notification/engine/DefaultPushTaskExecutorFactory.java,
        notification/engine/DefaultTaskExecutor.java,
        notification/engine/DefaultTaskFactory.java,
        notification/engine/DefaultTaskProcessor.java,
        notification/engine/DirectExecutorPushTaskExecutorFactory.java,
        notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/PooledPushTaskExecutorFactory.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/PushTaskExecutorFactory.java,
        notification/engine/TaskExecutor.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TaskProcessorRetryStrategy.java,
        notification/engine/WaitRetryStrategy.java,
        notification/interfaces/CallbackingDisposable.java,
        notification/interfaces/FilterStage.java,
        notification/interfaces/GCDisposable.java,
        notification/interfaces/IProxyPushSupplier.java,
        notification/interfaces/JMXManageable.java,
        notification/interfaces/MessageConsumer.java,
        notification/interfaces/MessageSupplier.java,
        notification/interfaces/NotifyingDisposable.java,
        notification/AbstractChannelFactory.java,
        notification/AbstractEventChannel.java,
        notification/ChannelManager.java, notification/ConsoleMain.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/EventTypeSet.java, notification/OfferManager.java,
        notification/StructuredEventMessage.java,
        notification/TypedEventChannelFactoryImpl.java,
        notification/TypedEventChannelImpl.java, notification/build.xml:
        jmx support

        * notification/impl/DefaultMessageFactory.java (getControllerName):
        removed method

        * notification/filter/AbstractFilter.java,
        notification/filter/AbstractFilterUsageDecorator.java,
        notification/filter/ConstraintEntry.java,
        notification/filter/DefaultFilterFactoryDelegate.java,
        notification/filter/EvaluationContext.java,
        notification/filter/EvaluationResult.java,
        notification/filter/FilterFactoryImpl.java,
        notification/filter/MappingFilterImpl.java: changes for JMX
        support. code cleanup

        * notification/filter/etcl/grammar/comp-lexer.g,
        notification/filter/etcl/grammar/tcl-lexer.g,
        notification/filter/etcl/grammar/tcl.g: updated copyright

        * notification/filter/etcl/AndOperator.java,
        notification/filter/etcl/BinaryOperator.java,
        notification/filter/etcl/DefaultOperator.java,
        notification/filter/etcl/DivOperator.java,
        notification/filter/etcl/ETCLComponentName.java,
        notification/filter/etcl/ETCLFilter.java,
        notification/filter/etcl/EqOperator.java,
        notification/filter/etcl/GtOperator.java,
        notification/filter/etcl/GteOperator.java,
        notification/filter/etcl/InOperator.java,
        notification/filter/etcl/LtOperator.java,
        notification/filter/etcl/LteOperator.java,
        notification/filter/etcl/MultOperator.java,
        notification/filter/etcl/NeqOperator.java,
        notification/filter/etcl/StaticTypeChecker.java,
        notification/filter/etcl/StaticTypeException.java,
        notification/filter/etcl/StringValue.java,
        notification/filter/etcl/SubstrOperator.java: changes for JMX
        support. code cleanup

        * notification/filter/etcl/AbstractTCLNode.java (initialize):
        made methods final

        * notification/container/PicoContainerFactory.java (createContainer):
        split method into smaller methods

        * notification/container/FilterFactoryComponentAdapter.java: cosmetics

        * notification/container/CORBAObjectComponentAdapter.java (c'tor):
        load Helper class via the Service classes Classloader if available

        * notification/container/BiDirGiopPOAComponentAdapter.java: cosmetics

        * notification/SubscriptionManager.java: javadoc

        * notification/AnyMessage.java (toTypedEvent): do not catch Throwable

2005-08-19  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * config/LogKitLoggerFactory.java (c'tor): made constructor public

2005-08-17  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/servant/SequenceProxyPushSupplierImpl.java (c'tor):
        fix for #625. the periodic flush task did not work properly

2005-08-17  Phil Mesnier  <phil.mesnier@ociweb.com>

        * orb/giop/GIOPConnection.java: reorder the reconnection test so
        that any service contexts that are required may be resent
        following a transport level close and reopen.

        * orb/giop/CodeSet.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java: Add support
        for configurable native codeset for char and wchar

2005-08-16  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/servant/SequenceProxyPushSupplierImpl.java:
        (startCronJob) fixed if clause. task would never be started. this
        fixes #625

2005-08-04  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPListener.java,
        orb/iiop/IIOPLoopback.java, orb/iiop/IIOPLoopbackConnection.java,
        orb/iiop/IIOPLoopbackInputStream.java,
        orb/iiop/IIOPLoopbackOutputStream.java,
        orb/iiop/IIOPLoopbackRegistry.java: Kevin Conner's loopback
        transport (see bug #525).

2005-07-26  Phil Mesnier  <phil.mesnier@ociweb.com>

        * poa/POA.java: fix for servant_to_id() to correctly activate the
        object when the implicit_activation policy is set.

2005-06-26  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/Delegate.java: Do not try to load a stub for
        CORBA::Object. The attempt will fail for sure, as there is no
        CORBA::Object stub. Moreover, a classloader that generates stubs
        on-the-fly might log an error message to report that it was not
        able to generate the stub. (This was indeed happening in JBoss.)

        * orb/CDROutputStream.java: Fix NullPointerException when
        attempting to load the helper class for an IDL-generated valuetype
        class loaded through the bootstrap classloader.
        (This bug was reported by Hrishikesh Barua.)

2005-06-10  Andre Spiegel  <spiegel@gnu.org>

        * security/sas/SASClientInterceptor.java (send_request): Be
        prepared for an empty csmList, fixing bug #603.

        * orb/CDRInputStream.java (read_TypeCode): Create proper TypeCode
        for exceptions, fixing bug #602.

2005-06-01  Gerald Brose  <gerald.brose@acm.org>

        * Version 2.2.2 released.

        * orb/ORB.java: changed log message to "The JacORB project" and
        dropped my name and company names.

2005-06-01  Andre Spiegel  <spiegel@gnu.org>

        SAS-related changes suggested by Jesper S�derlund:

        * orb/portableInterceptor/ServerRequestInfoImpl.java (c'tor): Make
        sure to set servant member variable.

        * orb/ServantDelegate.java (get_policy): Always returned null, now
        retrieves the policies from the POA.

        * security/sas/SASTargetInterceptor.java
        (receive_request_service_contexts): Check whether the object is in
        a POA with SAS policy before continuing processing.

        * security/sas/SASClientInterceptor.java (send_request): Now
        doesn't stop processing if the target IOR doesn't contain
        SASpolicy, e.g. if the result of a corbaloc.

        * security/sas/GssUpContext.java (createClientContext): Remove
        superfluous code.

2005-06-01  Andre Spiegel  <spiegel@gnu.org>

        * naming/NameServer.java (incarnate): Don't call System.exit(),
        fixing bug #518.

        * naming/NamingContextImpl.java (new_context): Don't call
        System.exit(), fixing bug #518.

        * orb/ServantDelegate.java (_invoke): Call
        Servant._get_interface_def(), rather than the deprecated method
        _get_interface(), fixing bug #596.

2005-05-12  Andre Spiegel  <spiegel@gnu.org>

        * orb/portableInterceptor/ClientRequestInfoImpl.java (c'tor):
        Properly set target object, fixing bug #597.

        * poa/util/POAUtil.java (extractImplName, extractOID,
        extractPOAName): Properly de-escape separator characters ("/") in
        these names. Fix for bug #493.

2005-05-04  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/TypedEventChannelImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java: added test
        for bug and fix: poll would fail if one of the
        TypedProxyPullSupplier "try" methods failed.

        * notification/TypedEventChannelImpl.java,
        notification/EventChannelImpl.java:
        (newConsumerAdmin):
        (newSupplierAdmin): extracted duplicated code
        as method

        * notification/AbstractChannelFactory.java,
        notification/EventChannelFactoryImpl.java,
        notification/TypedEventChannelFactoryImpl.java (newContainerForChannel):
        pulled duplicated code up to baseclass

        * notification/servant/AbstractAdmin.java,
        notification/servant/IEventChannel.java (getID): renamed to
        getChannelID to avoid confusion

        * notification/TypedEventChannelImpl.java: cosmetics: whitespace

        * notification/NoTranslationException.java,
        notification/WrapperMain.java: cosmetics: compiler warning

        * notification/MessageFactory.java (dispose): removed method

        * notification/FilterManager.java: cosmetics: compiler warning

2005-05-01  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/servant/IAdmin.java,
        notification/servant/IEventChannel.java,
        notification/servant/ISupplierAdmin.java,
        notification/servant/ITypedAdmin.java,
        notification/servant/ITypedEventChannel.java,
        notification/servant/ITypedProxy.java,
        notification/queue/BoundedFifoEventQueue.java,
        notification/queue/BoundedPriorityEventQueue.java,
        notification/interfaces/ApplicationEvent.java,
        notification/interfaces/EventChannelEvent.java,
        notification/interfaces/ProxyEvent.java,
        notification/filter/impl/DefaultETCLEvaluator.java,
        notification/filter/EvaluationException.java,
        notification/filter/EvaluationResult.java,
        notification/filter/FilterConstraint.java,
        notification/filter/ParseException.java,
        notification/filter/PropertyDoesNotExistException.java: cosmetics:
        javadoc and compiler warnings

        * notification/engine/DefaultTaskProcessor.java (c'tor): code cleanup

        * notification/container/PicoContainerFactory.java
        (createRootContainer): use new BiDirGIOPCA.

        * notification/AbstractChannelFactory.java (c'tor):
        enable BiDirGIOP for EventchannelFactoryPOA if configured

        * notification/container/BiDirGiopPOAComponentAdapter.java: new
        Pico CA that creates the POA for the NotifyService Servants to
        use.
        the CA will enable BiDirGIOP for the POA if this is
        configured in jacorb.properties

        * notification/servant/TypedProxyPullConsumerImpl.java
        (connect_typed_pull_supplier): added extra check if interfaceDef_
        is null. see bugzilla id
        http://www.jacorb.org/cgi-bin/bugzilla/show_bug.cgi?id=596

        * notification/servant/AbstractProxy.java: cosmetics

        * notification/impl/DefaultMessageFactory.java: removed unused code

2005-04-27  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/engine/AbstractFilterTask.java,
        notification/engine/AbstractMessageTask.java,
        notification/engine/AbstractRetryStrategy.java,
        notification/engine/AbstractTask.java,
        notification/engine/AlwaysDisposeRetryStrategy.java,
        notification/engine/AlwaysDisposeRetryStrategyFactory.java,
        notification/engine/ConfigurablePushTaskExecutorFactory.java,
        notification/engine/DefaultPushTaskExecutor.java,
        notification/engine/DefaultPushTaskExecutorFactory.java,
        notification/engine/DefaultTaskFactory.java,
        notification/engine/DefaultTaskProcessor.java,
        notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java,
        notification/engine/PooledPushTaskExecutorFactory.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/PushTaskExecutor.java,
        notification/engine/PushTaskExecutorFactory.java,
        notification/engine/RetryException.java,
        notification/engine/RetryStrategyFactory.java,
        notification/engine/TaskFactory.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TaskProcessorRetryStrategy.java,
        notification/engine/TaskProcessorRetryStrategyFactory.java,
        notification/engine/WaitRetryStrategy.java,
        notification/engine/WaitRetryStrategyFactory.java: removed
        PushToConsumer Tasks and Thread Pools as this concept didn't work
        right.
        instead PushTaskExecutor creates a number of threads that pull
        PushTasks from the ProxyPushSuppliers and execute them.

        * notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxyPushSupplier.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java: cleaned up
        inheritance hierarchy of Proxies.  all ProxyPushSuppliers have a
        common baseclass now.

        * notification/queue/RWLockEventQueueDecorator.java (replaceDelegate):
        fixed bug

        * notification/queue/Heap2.java: custom implementation that
        extends util.concurrent.Heap. this impl does some extra work
        during clean. otherwise stalled items seem to stay in the Heap.

        * notification/queue/BoundedPriorityEventQueue.java (getAllElementsInternal):
        invoke clear after all elements are returned. otherwise stalled
        items seem to stay in the queue
        (newHeap): use custom implementation Heap2
        (toString): added impl

        * notification/queue/BasicMessageQueueAdapter.java (toString):
        added implementation

        * notification/interfaces/MessageSupplier.java (destroy): to
        destroy a proxy destroy must be invoked instead of dispsoe

        * notification/interfaces/IProxyPushSupplier.java,
        notification/interfaces/MessageConsumer.java (IProxyPushSupplier):
        new internal interface for ProxyPushSuppliers.

        * notification/engine/AbstractDeliverTask.java,
        notification/engine/PushToConsumerTask.java,
        notification/engine/TimerDeliverTask.java: removed unused code

        * notification/container/PicoContainerFactory.java,
        notification/container/PushTaskExecutorFactoryComponentAdapter.java:
        new ComponentAdapter that registers a PushTaskExecutorFactory

        * notification/container/DisposeLifecycleVisitor.java,
        notification/container/NonCachingRememberingComponentAdapter.java,
        notification/container/PerProxyPushTaskExecutorComponentAdapter.java,
        notification/container/ThreadPoolTaskExecutorComponentAdapter.java:
        removed unused code

        * notification/container/CORBAObjectComponentAdapter.java,
        notification/container/ConfigurationComponentAdapter.java,
        notification/container/DynAnyFactoryComponentAdapter.java,
        notification/container/FilterFactoryComponentAdapter.java,
        notification/container/POAComponentAdapter.java,
        notification/container/RepositoryComponentAdapter.java (serialVersionUID):
        added member to fix compiler warnings. serializable classes should
        ...

        * notification/conf/Attributes.java,
        notification/conf/Default.java: harmonized slightly different
        constant names

        * notification/AbstractMessage.java (getType): fixed javadoc

        * notification/AbstractEventChannel.java (configure): removed
        unused method

2005-04-23  Phil Mesnier  <phil.mesnier@ociweb.com>

        * orb/giop/ClientConnection.java: Set the Input stream's codeset
        upon receipt of a reply message

        * orb/giop/CodeSet.java: Corrected spelling of ISO-8859-1 codeset
        converter for use by the CDRInputStream

        * orb/CDRInputStream.java, orb/CDROutputStream.java: corrected the
        char/string conversion between native and transmitted codesets

2005-04-22  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java (request): If the codesets have not been
        negotiated yet, don't add the service context here, because this
        request might not actually be the first one on the wire.  The
        codeset service context is now added immediately before sending
        the request, in RequestOutputStream.write_to().

        This race condition was identified by Phil Mesnier.

        * orb/giop/ClientConnection.java (setCodeSet): Don't return a
        service context; this is deferred until later now.

        * orb/giop/RequestOutputStream.java (write_to): Overridden to add
        a codeset service context if this is the first request on the
        connection.

        * orb/giop/GIOPConnection.java (setCodeSets): Don't set
        tcs_negotiated yet; this must be done by a separate call to
        markTCSNegotiated() now.

        * orb/giop/ServerRequestListener.java (requestReceived): Call
        markTCSNegotiated() when setting codesets; just for
        completeness (it shouldn't really be necessary on the server
        side).

2005-04-21  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java (request): Clarify comment on CodeSet Negotiation.

2005-04-17  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/util/AbstractPoolablePool.java: moved class

        * notification/util/AbstractObjectPool.java: changed default values

        * notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java: converted
        PushOperation classes to nested classes. this reduces code
        duplication

        * notification/servant/AbstractProxySupplier.java (dispose):
        execute empty task to clean ClockDaemon Heap.
        (handleFailedPushOperation): added check if Proxy is already
        destroyed

        * notification/interfaces/MessageConsumer.java (destroy): added
        method
        (dispose): removed method

        * notification/impl/DefaultMessageFactory.java (anyMessagePool_,
        typedMessagePool_, structuredMessagePool_): extend
        AbstractPoolablePool so that instances are reset as they are
        returned to the pool. otherwise GC'ing is not possible

        * notification/engine/MessagePushOperation.java:
        changed classes to member classes. this reduces code duplication

        * notification/engine/TimerDeliverTask.java,
        notification/engine/TaskProcessorRetryStrategyFactory.java:
        cosmetics

        * notification/engine/TaskProcessorRetryStrategy.java
        (retryPushOperation_, enableMessageConsumer_): added checks if
        messageConsumer is still valid

        * notification/engine/PushAnyOperation.java,
        notification/engine/PushSequenceOperation.java,
        notification/engine/PushStructuredOperation.java,
        notification/engine/PushTypedOperation.java: changed classes to
        member classes. this reduces code duplication

        * notification/engine/FilterProxySupplierTask.java (reset):
        arrayCurrentFilterStage is reset in superclass cosmetics

        * notification/engine/DefaultTaskProcessor.java: cosmetics

        * notification/engine/DefaultTaskFactory.java:
        moved AbstractPoolablePool to util package

        * notification/engine/AlwaysDisposeRetryStrategy.java (retryInternal):
        need to invoke destroy on MessageConsumer to really free all ressources

        * notification/engine/AbstractTask.java: cosmetics

        * notification/engine/AbstractRetryStrategy.java
        (remoteExceptionOccured): need to invoke destroy on
        MessageConsumer to really free all ressources

        * notification/engine/AbstractPoolablePool.java: moved to util package

        * notification/engine/AbstractFilterTask.java (reset):
        reset all members to allow GC'ing renamed variables

2005-04-16  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/impl/PoolingEvaluationContextFactory.java (configure):
        removed unused method

        * notification/engine/AbstractPoolablePool.java (C'tor):
        maximum size is unlimited

        * notification/util/AbstractObjectPool.java:
        added option to control maximum size

        * notification/util/AbstractPoolable.java (configure):
        removed unused method

        * notification/queue/BasicMessageQueueAdapter.java,
        notification/queue/MessageQueueAdapter.java,
        notification/queue/RWLockEventQueueDecorator.java (clear): new
        method to release (=dispose) contents of queue

        * notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java
        (deliverMessagesInternal): added this param to C'tor of PushOperations

        * notification/servant/AbstractProxySupplier.java (connectClient):
        made method public for testing (dispose): clear pendingMessages queue

        * notification/impl/DefaultMessageFactory.java (addDisposeHook):
        fixed compiler warning

        * notification/engine/DefaultTaskProcessor.java (scheduleTimedPushTask):
        setTaskExecutor for TimedPushTask

        * notification/engine/AbstractRetryStrategy.java
        (remoteExceptionOccured): added log statement

        * notification/engine/MessagePushOperation.java,
        notification/engine/PushAnyOperation.java,
        notification/engine/PushSequenceOperation.java,
        notification/engine/PushStructuredOperation.java,
        notification/engine/PushTypedOperation.java (C'tor): added
        MessageConsumer param
        (invokePush): reset MessageConsumer error
        counter after successful push

        * notification/engine/TimerDeliverTask.java (reset):
        fixed compiler warning

        * notification/engine/AbstractMessageTask.java:
        removed superfluous member 'removed_'

        * notification/StructuredEventMessage.java (toString):
        modified toString representation

2005-04-13  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/TypedEventChannelFactoryImpl.java: whitespace

        * notification/EventTypeSet.java (eventTypeSetModified_): renamed
        from setModified_
        (changeSet): modify eventTypeSet_ inside of synchronized block

        * notification/EventChannelFactoryImpl.java (create_channel):
        fixed javadoc

        * notification/AbstractChannelFactory.java (create_channel_servant):
        log statement

2005-04-10  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/TypedEventChannelFactoryImpl.java,
        notification/TypedEventChannelImpl.java,
        notification/servant/TypedConsumerAdminImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java,
        notification/servant/TypedSupplierAdminImpl.java: fixed problems
        found in setup code

        * notification/util/AdminPropertySet.java,
        notification/util/PropertySet.java,
        notification/util/PropertySetAdapter.java,
        notification/util/QoSPropertySet.java: cleaned up PropertySet code
        (PropertySetAdapter): new adapter class that is a empty
        implementations for PropertySetListener

        * notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminImpl.java: code cleanup: removed
        deprecated methods, fixed compiler warnings (proxysuppliers): are
        comparable now

        * notification/servant/ManageableServant.java: code cleanup:
        removed deprecated methods, fixed compiler warnings

        * notification/servant/FilterStageListManager.java (sortCheckedList):
        new extension point to allow list to be sorted with a custom comparator

        * notification/servant/ConsumerAdminImpl.java: code cleanup:
        removed deprecated methods, fixed compiler warnings

        * notification/servant/AbstractProxySupplier.java: code cleanup:
        removed deprecated methods, fixed compiler warnings
        (compareTo, getCost): implement Comparable IF

        * notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java: code cleanup: removed
        deprecated methods, fixed compiler warnings

        * notification/interfaces/MessageConsumer.java (MessageConsumer):
        extends Comparable

        * notification/filter/AbstractFilter.java,
        notification/filter/FilterFactoryImpl.java,
        notification/filter/MappingFilterImpl.java: clean up of garbage
        collector code

        * notification/container/PicoContainerFactory.java
        (createRootContainer): register CA to resolve Repository
        (dumpDependencies): helper method for debugging

        * notification/conf/Attributes.java,
        notification/conf/Default.java
        (RETRY_STRATEGY_FACTORY): renamed property value
        (WILDCARDMAP_CLASS): renamed property value

        * notification/TODO.txt: add id tag

        * notification/AbstractChannelFactory.java,
        notification/AbstractEventChannel.java,
        notification/EventChannelFactoryImpl.java,
        notification/StructuredEventMessage.java: code cleanup: removed
        deprecated methods, fixed compiler warnings

2005-03-31  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/filter/AbstractFilter.java,
        notification/filter/DefaultFilterFactoryDelegate.java,
        notification/filter/FilterFactoryImpl.java,
        notification/filter/MappingFilterImpl.java (*): use Decorator to
        keep track of Filter Usage. added thread that disposes filters
        that have not been used for some time.

        * notification/filter/CallbackManager.java (detach_callback):
        added parentheses

        * notification/filter/AbstractFilterUsageDecorator.java,
        notification/filter/FilterUsageDecorator.java,
        notification/filter/MappingFilterUsageDecorator.java: new classes
        that decorate a Filter or MappingFilter and keep track of usage.

        * notification/util/LogUtil.java (getLogger): added convenience method.

        * notification/interfaces/GCDisposable.java: added new interface

        * notification/conf/Attributes.java, notification/conf/Default.java:
        added attributes to control garbarge collection of filters

2005-03-28  Gerald Brose  <gerald.brose@acm.org>

        * idl/ArrayTypeSpec.java, idl/NameTable.java, idl/ReplyHandler.java:
        (ScopedName.defined) renamed to isDefined()

        * idl/ScopedName.java: (resolvedName) fixed Bug541
        (defined) renamed to isDefined()

2005-03-27  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/CDROutputStream.java
        Commit a slightly improved version of John Farrel's fix for bug #532.

2005-03-25  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/FilterFactoryImpl.java,
        notification/container/FilterFactoryComponentAdapter.java,
        notification/filter/DefaultFilterFactoryDelegate.java,
        notification/filter/FilterFactoryImpl.java,
        notification/filter/IFilterFactoryDelegate.java (FilterFactoryImpl):
        split in Impl and Delegate and introduced internal interface

        * notification/filter/AbstractFilter.java (ConstraintIterator):
        factored out common code

2005-03-25  Benoit Pelletier  <benoit.pelletier@objectweb.org>

        * orb/Delegate.java: (is_a): Fix stub suffix ("Stub"->"_Stub"),
        fixing bug #585.  Allow the load of stub with 'org.omg.stub'
        prefix, fixing bug #586.

        * orb/config/Configuration.java: Remove print message when
        jacorb.properties is not found in '.' dir, fixing bug #587.

        * orb/dynany/DynAny.java,
        orb/dynany/DynAnyFactoryImpl.java,
        orb/dynany/DynArray.java,
        orb/dynany/DynEnum.java,
        orb/dynany/DynSequence.java,
        orb/dynany/DynStruct.java,
        orb/dynany/DynUnion.java:
        Pass the right ORB instance to DynXxx instance, fixing bug #584.

2005-03-20  Alphonse Bendt  <alphonse.bendt@it-fws.de>

        * notification/queue/BoundedFifoEventQueue.java (*Test): added
        tests to see if getAllMessages really removes all fetched elements
        from the queried queue.
        (BoundedFifoEventQueue.getAllMessages): bugfix. fetched elements
        were not removed from the queue. This causes messages to be
        delivered multiple times.  Thanks to Ling Yun for reporting
        (http://lists.spline.inf.fu-berlin.de/pipermail/jacorb-developer/2005-March/007168.html)

2005-03-08  Andre Spiegel  <spiegel@gnu.org>

        * idl/UnionType.java, idl/ValueBoxDecl.java (printHelperClass):
        Drop a superfluous semicolon, fixing bug #550.

2005-03-04  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASClientInterceptor.java,
        security/sas/SASTargetInterceptor.java: If Context Id not found in
        ContextInMessage, send a ContextError with Major error code of 2
        then Client will throw a ForwardRequest back to the object

2005-03-02  Andre Spiegel  <spiegel@gnu.org>

        * orb/ReplyReceiver.java (replyReceived): Grab pending_replies
        lock early.  Suggested by Brian Olson, fixing bug #574.

2005-02-20  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/DefaultTaskProcessor.java,
        notification/engine/TimerDeliverTask.java: fixed wrong inheritance
        for TimerDeliverTask

        * notification/conf/Attributes.java,
        notification/conf/Default.java: new attributes

        * notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java: changed
        ProxySuppliers to *always* enqueue message to avoid that
        TaskExecutors grow without limit (ignoring maxeventsperconsumer
        setting). problem and suggested fix reported by John Farrell and
        Darryl Collins (cat.com).

        * notification/servant/AbstractProxySupplier.java:
        (getRetryStrategy) renamed to newRetryStrategy and use Factory to
        create RetryStrategy.
        (enqueue) copy Message before its put into queue
        (deliverMessage) always enqueue

        * notification/engine/AbstractRetryStrategy.java,
        notification/engine/AlwaysDisposeRetryStrategy.java,
        notification/engine/AlwaysDisposeRetryStrategyFactory.java,
        notification/engine/RetryStrategy.java,
        notification/engine/RetryStrategyFactory.java,
        notification/engine/TaskProcessorRetryStrategy.java,
        notification/engine/TaskProcessorRetryStrategyFactory.java,
        notification/engine/WaitRetryStrategy.java,
        notification/engine/WaitRetryStrategyFactory.java: created
        Interfaces RetryStrategy and RetryStrategyFactory.  adapted
        existing Retry Code to new Structure.

        * notification/queue/BasicMessageQueueAdapter.java: removed
        exception from method declaration

2005-02-14  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/util/AbstractObjectPool.java,
        notification/util/AbstractPoolable.java,
        notification/util/AdminPropertySet.java,
        notification/util/CachingWildcardMap.java,
        notification/util/CollectionsWrapper.java,
        notification/util/DefaultWildcardMap.java,
        notification/util/DisposableManager.java,
        notification/util/EventTypeUtil.java,
        notification/util/GNUPatternWrapper.java,
        notification/util/JDK14PatternWrapper.java,
        notification/util/JakartaRegexpPatternWrapper.java,
        notification/util/LogUtil.java,
        notification/util/PatternWrapper.java,
        notification/util/PropertySet.java,
        notification/util/QoSPropertySet.java,
        notification/util/WeakCacheWildcardMap.java,
        notification/util/WeakHashSet.java,
        notification/util/WildcardMap.java: new class WeakHashSet. code
        cleanup

        * notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/AbstractSupplierAdmin.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/ECProxyPullConsumerImpl.java,
        notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushConsumerImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/FilterStageListManager.java,
        notification/servant/IAdmin.java,
        notification/servant/IEventChannel.java,
        notification/servant/ISupplierAdmin.java,
        notification/servant/ITypedAdmin.java,
        notification/servant/ITypedEventChannel.java,
        notification/servant/ITypedProxy.java,
        notification/servant/ManageableServant.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminImpl.java,
        notification/servant/TypedConsumerAdminImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java,
        notification/servant/TypedSupplierAdminImpl.java: refactoring:
        replaced selfwritten object configuration code with
        picocontainer. bugfixing.

        * notification/queue/AbstractBoundedEventQueue.java,
        notification/queue/BasicMessageQueueAdapter.java,
        notification/queue/BoundedDeadlineEventQueue.java,
        notification/queue/BoundedFifoEventQueue.java,
        notification/queue/BoundedPriorityEventQueue.java,
        notification/queue/EventQueue.java,
        notification/queue/EventQueueFactory.java,
        notification/queue/EventQueueFactoryDependency.java,
        notification/queue/EventQueueOverflowStrategy.java,
        notification/queue/HeapEntry.java,
        notification/queue/MessageQueue.java,
        notification/queue/MessageQueueAdapter.java,
        notification/queue/QueueUtil.java,
        notification/queue/RWLockEventQueueDecorator.java: refactored
        queue package. renamed some classes. fix of bug #544

        * notification/interfaces/AbstractPoolable.java,
        notification/interfaces/AdminEvent.java,
        notification/interfaces/AdminEventListener.java,
        notification/interfaces/CallbackingDisposable.java,
        notification/interfaces/Controllable.java,
        notification/interfaces/Disposable.java,
        notification/interfaces/EvaluationContextFactory.java,
        notification/interfaces/Message.java,
        notification/interfaces/MessageConsumer.java,
        notification/interfaces/ProxyCreationRequestEvent.java,
        notification/interfaces/ProxyDisposedEvent.java: updated internal
        interfaces

        * notification/impl/DefaultEvaluationContextFactory.java,
        notification/impl/DefaultMessageFactory.java,
        notification/impl/PoolingEvaluationContextFactory.java: moved
        default service implementation into own package

        * notification/filter/impl/DefaultETCLEvaluator.java,
        notification/filter/etcl/AbstractTCLNode.java,
        notification/filter/etcl/AbstractTCLVisitor.java,
        notification/filter/etcl/AndOperator.java,
        notification/filter/etcl/ArrayOperator.java,
        notification/filter/etcl/AssocOperator.java,
        notification/filter/etcl/BinaryOperator.java,
        notification/filter/etcl/BoolValue.java,
        notification/filter/etcl/ComponentPositionOperator.java,
        notification/filter/etcl/CurrentTimeNode.java,
        notification/filter/etcl/DivOperator.java,
        notification/filter/etcl/DomainNameShorthandNode.java,
        notification/filter/etcl/DotOperator.java,
        notification/filter/etcl/ETCLComponentName.java,
        notification/filter/etcl/ETCLFilter.java,
        notification/filter/etcl/ETCLFilterConstraint.java,
        notification/filter/etcl/EqOperator.java,
        notification/filter/etcl/EventNameShorthandNode.java,
        notification/filter/etcl/GtOperator.java,
        notification/filter/etcl/GteOperator.java,
        notification/filter/etcl/IdentValue.java,
        notification/filter/etcl/ImmutableEvaluationResult.java,
        notification/filter/etcl/ImplicitOperator.java,
        notification/filter/etcl/ImplicitOperatorNode.java,
        notification/filter/etcl/InOperator.java,
        notification/filter/etcl/LtOperator.java,
        notification/filter/etcl/LteOperator.java,
        notification/filter/etcl/MessageUtils.java,
        notification/filter/etcl/MinusOperator.java,
        notification/filter/etcl/MultOperator.java,
        notification/filter/etcl/NeqOperator.java,
        notification/filter/etcl/NotOperator.java,
        notification/filter/etcl/NumberValue.java,
        notification/filter/etcl/OrOperator.java,
        notification/filter/etcl/PlusOperator.java,
        notification/filter/etcl/PropertyShorthandNode.java,
        notification/filter/etcl/StaticTypeChecker.java,
        notification/filter/etcl/StaticTypeException.java,
        notification/filter/etcl/StringValue.java,
        notification/filter/etcl/SubstrOperator.java,
        notification/filter/etcl/TCLCleanUp.java,
        notification/filter/etcl/TypeNameShorthandNode.java,
        notification/filter/etcl/UnaryOperator.java,
        notification/filter/etcl/VisitorException.java,
        notification/filter/bsh/BSHFilter.java,
        notification/filter/bsh/build.xml,
        notification/filter/AbstractFilter.java,
        notification/filter/CallbackManager.java,
        notification/filter/ConstraintEntry.java,
        notification/filter/DynamicEvaluator.java,
        notification/filter/ETCLEvaluator.java,
        notification/filter/EvaluationContext.java,
        notification/filter/EvaluationResult.java,
        notification/filter/EventTypeIdentifier.java,
        notification/filter/FilterConstraint.java,
        notification/filter/FilterUtils.java,
        notification/filter/MappingFilterImpl.java,
        notification/filter/ParseException.java: moved etcl filter stuff
        into own package. replaced old configuration mechanism with
        picocontainer

        * notification/engine/AbstractDeliverTask.java,
        notification/engine/AbstractFilterTask.java,
        notification/engine/AbstractMessageTask.java,
        notification/engine/AbstractPoolablePool.java,
        notification/engine/AbstractTask.java,
        notification/engine/AbstractTaskPool.java,
        notification/engine/DefaultTaskExecutor.java,
        notification/engine/DefaultTaskFactory.java,
        notification/engine/DefaultTaskProcessor.java,
        notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java,
        notification/engine/MessagePushOperation.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/PushAnyOperation.java,
        notification/engine/PushSequenceOperation.java,
        notification/engine/PushStructuredOperation.java,
        notification/engine/PushToConsumerTask.java,
        notification/engine/PushTypedOperation.java,
        notification/engine/RetryStrategy.java,
        notification/engine/Schedulable.java,
        notification/engine/TaskExecutor.java,
        notification/engine/TaskFactory.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TaskProcessorDependency.java,
        notification/engine/TaskProcessorRetryStrategy.java,
        notification/engine/TimerDeliverTask.java,
        notification/engine/WaitRetryStrategy.java: created interface
        classes for TaskExecutor and TaskProcessor. made member variables
        final where possible.

2005-02-13  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/container/CORBAObjectComponentAdapter.java,
        notification/container/ConfigurationComponentAdapter.java,
        notification/container/DisposeLifecycleVisitor.java,
        notification/container/DynAnyFactoryComponentAdapter.java,
        notification/container/FilterFactoryComponentAdapter.java,
        notification/container/NonCachingRememberingComponentAdapter.java,
        notification/container/POAComponentAdapter.java,
        notification/container/PerProxyPushTaskExecutorComponentAdapter.java,
        notification/container/PicoContainerFactory.java,
        notification/container/RepositoryComponentAdapter.java,
        notification/container/ThreadPoolTaskExecutorComponentAdapter.java:
        new picocontainer configuration mechanism

        * notification/conf/Attributes.java, notification/conf/Default.java:
        new property

        * notification/AbstractChannelFactory.java,
        notification/AbstractEventChannel.java,
        notification/AbstractFilter.java,
        notification/AbstractMessage.java, notification/AnyMessage.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java,
        notification/ChannelContextDependency.java,
        notification/ChannelManager.java,
        notification/CollectionsWrapper.java,
        notification/ConsoleMain.java, notification/ConstraintEntry.java,
        notification/Dependant.java,
        notification/EventChannelDependency.java,
        notification/EventChannelFactoryDependency.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/EventTypeIdentifier.java,
        notification/EventTypeSet.java,
        notification/EventTypeWrapper.java,
        notification/FilterFactoryImpl.java,
        notification/FilterManager.java, notification/IContainer.java,
        notification/IFactory.java, notification/MappingFilterImpl.java,
        notification/MessageFactory.java,
        notification/MessageFactoryDependency.java,
        notification/NoTranslationException.java,
        notification/OfferManager.java,
        notification/StructuredEventMessage.java,
        notification/SubscriptionManager.java, notification/TODO.txt,
        notification/TypedEventChannelFactoryImpl.java,
        notification/TypedEventChannelImpl.java,
        notification/TypedEventMessage.java, notification/build.xml:
        refactoring: replaced selfwritten object configuration code with
        picocontainer. bugfixing.

2005-02-09  Andre Spiegel  <spiegel@gnu.org>

        Patch by Jimmy Wilson to make the MessageReceptorPool size
        configurable via the new property jacorb.connection.max_threads.
        This fixes bug #568.

        * orb/giop/MessageReceptorPool.java (ctor, getInstance): Take a
        Configuration argument.
        (MAX_DEFAULT, maxConnectionThreads): New instance fields.

        * orb/BasicAdapter.java (configure): Pass Configuration to
        MessageReceptorPool ctor.

        * orb/giop/ClientConnectionManager.java (ctor, configure): Move
        creation of the MessageReceptorPool from the former to the latter
        to allow configuration.

        * imr/ImplementationRepositoryImpl.java (SocketListener.ctor,
        SocketListener.configure): Move creation of the
        MessageReceptorPool from the former to the latter to allow
        configuration.

2005-02-04  Andre Spiegel  <spiegel@gnu.org>

        * orb/ReplyReceiver.java (doRebind): Use a finally clause to
        re-open the barrier, fixing bug #566.  Suggested by Brian Olson.

2005-01-28  Andre Spiegel  <spiegel@gnu.org>

        * ir/IdlWriter.java (printEnum, printStruct, printUnion): Avoid
        null pointer reference in the error message when a type is not
        found, fixing bug #558.  Suggested by Sotohiro Terashima.

        * ir/QueryIR.java (main): Exit when IR is not found, fixing bug
        #558.  Suggested by Sotohiro Terashima.

        * orb/ReplyReceiver.java (replyReceived): Change synchronization
        pattern to prevent deadlock, fixing bug #562.  Suggested by Jimmy
        Wilson.

2004-12-20  Simon McQueen  <sm@prismtechnologies.com>

        * orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/iiop/IIOPListener.java: Removed spurious debugging code.

2004-12-11  Andre Spiegel  <spiegel@gnu.org>

        * poa/RequestProcessor.java (invokeIncarnate, invokeOperation):
        For unexpected Throwables, log the stack trace along with the
        exception name. Raise the log level for these events from "warn"
        to "error". This was suggested by Alec Cawley and Christoper
        McDermott.

        * orb/portableInterceptor/ClientRequestInfoImpl.java (ctor):
        Remove no-arg constructor, it is not used.

        * util/threadpool/ThreadPool.java (getJob, putJob): Apply patch by
        Marcel Gosselin, fixing bug #445.

2004-11-24  Nicolas Noffke  <nicolas.noffke@web.de>

        * security/ssl/sun_jsse/KeyStoreUtil.java: bug #489 now loading
        from classpath first to be able to run in an unsigned applet.

        * config/Configuration.java (getConfiguration, <c'tor>): bug #489:
        added boolean param "isApplet", added methid initApplet() that
        avoids accessing files and system properties.

        * orb/ORB.java (set_parameters): bug #489: adapted to new
        interface of jacorb Configuration class

        * config/Configuration.java (loadPropertiesFromClassPath): replaced
        ClassLoader.getSystemResource() by
        Thread.currentThread().getContextClassLoader().getResource() to be
        able to resolve property files from custom jar files e.g. in
        applets.

2004-11-18  Andre Spiegel  <spiegel@gnu.org>

        * util/Version.java: Bump version number to 2.2.1 (the
        release still identifies itself as 2.2).

2004-11-18  Andre Spiegel  <spiegel@gnu.org>

        * orb/SystemExceptionHelper.java (read): If there is an
        ExceptionDetailMessage service context in the input stream, use it
        to construct the exception's detail message.

        * poa/RequestProcessor.java (invokeOperation): For run-time
        exceptions thrown by the Servant, use e.toString() rather than
        e.getMessage() to provide the detail message for
        org.omg.CORBA.UNKNOWN.  This means that the exception name will be
        reported along with the message.

        * orb/giop/ReplyInputStream.java (getServiceContext): New method.

        * orb/dsi/ServerRequest.java (createExceptionDetailMessage): New
        method.
        (setSystemException): Use it to add a service context for the
        exception's message.

2004-11-18  Nicolas Noffke  <nicolas.noffke@web.de>

        * orb/factory/SocketFactoryManager.java: changed to use single
        string constructor of RuntimeException to sustain jdk1.3 support

        * orb/ORB.java (set_parameters): factorized out common
        initialization code for applet and "normal" orbs into new method
        internalInit()

        removed unused/old applet stuff

        * security/ssl/sun_jsse/KeyStoreUtil.java: added support for
        loading keystores through the context classloader (e.g. for
        applets)

        * security/ssl/sun_jsse/build.xml: removed
        ServerInvocationInterceptor patch/unpatch - doesn't seem to be
        needed

        * security/ssl/sun_jsse/ServerInvocationInterceptor.java.patch:
        not needed anymore

        * security/ssl/sun_jsse/SSLServerSocketFactory.java.patch: updated
        to match current version of java file

        * security/ssl/sun_jsse/SSLServerSocketFactory.java
        (createServerSocket): if request_mutual_auth using
        setWantClientAuth() instead of setNeedClientAuth()

        * security/ssl/sun_jsse/SSLSocketFactory.java.patch: adapted to
        current version of the java file

        * security/ssl/sun_jsse/SSLSocketFactory.java
        (createSocketFactory): removed commented out line
        "Security.addProvider..."

2004-11-02  Gerald Brose  <gerald.brose@acm.org>

        * Version 2.2.1 released.

2004-11-02  Simon McQueen  <sm@prismtechnologies.com>

        * security/ssl/sun_jsse/SSLSocketFactory.java: Revert SSLContext
        protocol to TLS and remove explicit enabling of SSLv3 only on the
        socket.  The new property jacorb.security.ssl.client.protocols can
        be used to set this if needed.

2004-10-29  Simon McQueen  <sm@prismtechnologies.com>

        * security/ssl/sun_jsse/SSLServerSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java: Added two new
        configuration properties:
        jacorb.security.ssl.client/server.protocols - to control the
        protocols enabled on the socket.
        jacorb.security.ssl.client/server.trust_manager - to allow a user
        defined trust manger to be used.  Thanks to Jay Colson for
        providing the original patch.

        * orb/iiop/IIOPListener.java (configure): Add default value for
        property to prevent configuration exception when no properties
        file used.

2004-10-29  Andre Spiegel  <spiegel@gnu.org>

        * config/Configuration.java (init): Load system properties again
        after properties files have been read, so that command-line args
        take precedence.

2004-10-29  Simon McQueen  <sm@prismtechnologies.com>

        * poa/POAManager.java (ctr): The POAManagerMonitor must be
        configured. This fixes bug # 531.  Thanks to Mauritz Lovgren for
        raising the bug.

2004-10-28  Andre Spiegel  <spiegel@gnu.org>

        * poa/RPPoolManager.java: Changes to fix race condition when
        destroying the pool manager, fixing bug #530.
        (activeProcessors): New field.
        (getProcessor, releaseProcessor): Update the list of
        activeProcessors accordingly.
        (init): Initialize activeProcessor list.
        (destroy): Wait for all active processors to return.

2004-10-26  Andre Spiegel  <spiegel@gnu.org>

        * orb/CDRInputStream.java (read_string): Uncomment check for
        NUL-terminated strings, fixing regression test failure
        testGIOP_1_2_CorrectFragmentedRequest.

2004-10-21  Francisco Reverbel  <reverbel@ime.usp.br>

        * security/ssl/sun_jsse/SSLSocketFactory.java:
          - SSLSocketFactory is now using "SSLv3" instead of "TLS". The call

            Security.addProvider( new com.sun.net.ssl.internal.ssl.Provider() );

            was removed from SSLSocketFactory. These changes solved an SSL
            handshaking problem in the J2EE CTS. Perhaps they should be
            configurable?

        * orb/ParsedIOR.java:
          - Method parse_corbaloc does not use the object key map anymore.
            Should this be configurable? I don't think so, but may be missing
            something...

        * orb/iiop/IIOPListener.java:
          - If there is an sslAcceptor, the previous version of the method
            createEndPointProfile always adds a component with TAG_SSL_SEC_TRANS
            to the new IIOPProfile. The new version also looks at the config
            property jacorb.security.ssl_components_added_by_ior_interceptor.
            If the property is set, createEndPoingtProfile does not add
            the SSL component to the IIOPProfile.

        * orb/iiop/IIOPProfile.java:
          - Method getSSLPort looks also at the CSIv2 component, which is
            tagged with TAG_CSI_SEC_MECH_LIST.

        * orb/util/PrintIOR.java:
          - Minor improvements in the method that prints a CSIv2 target
            name (printNTExportedName) and in the one that prints the
            alternate IIOP address (printAlternateAddress).

        * poa/POA.java:
          - POA stores the value the new POA policy SSLPolicy (which is
            either SSL_REQUIRED or SSL_NOT_REQUIRED) and has new public
            method isSSLRequired().

        * orb/ORB.java:
          - Implement the deprecated methods connect(obj) and
            disconnect(obj), because the server-side programming model
            traditionally used by RMI/IIOP strongly relies on them.

          - Method createIOR changed so that it sets to 0 the primary
            address port in the IIOP profile of an IOR created by a POA
            whose SSLPolicy is SSL_REQUIRED.

        * security/ssl/build.xml:
          - Added ant target for compilation of new files
            src/org/jacorb/security/ssl/SSLPolicyFactory.java and
            src/org/jacorb/security/ssl/SSLPolicyImpl.java.

        * security/ssl/SSLPolicyFactory.java, security/ssl/SSLPolicyImpl.java:
          - Added new JacORB-specific POA policy that serves the purpose
            of allowing SSL requirements to be specified in a per-POA basis.

        * orb/CDROutputStream.java:
          - Handle java.lang.Class instances as a special case, as
            mandated by the spec.

          - Call ValueHandler.writeReplace only once for each RMI value
            marshalled, even in the presence of recursion.

          - Look at the value returned by ValueHandler.writeReplace and
            marshall it using an indirection if possible. It
            ValueHandler.writeReplace returns an org.omg.CORBA.Object,
            then marshal this object as an IOR.

        * orb/CDRInputStream.java:
          - Handle java.lang.Class instances as a
            special case, as mandated by the spec.

2004-10-18  Simon McQueen  <sm@prismtechnologies.com>

        * ir/Contained.java, ir/ExceptionDef.java, ir/IRServer.java,
        ir/InterfaceDef.java, ir/StructDef.java, ir/TypeCodeUtil.java,
        ir/UnionDef.java, orb/Delegate.java, orb/TypeCode.java: Java 1.5.0
        compatibility changes. Suppress some varargs warnings.

        * collection/util/Cach.java, concurrency/LockSetFactoryImpl.java,
        concurrency/TransactionCoordinator.java,
        concurrency/TransactionalLockSetImpl.java,
        idl/IDLTreeVisitor.java, idl/UnionType.java, idl/ValueDecl.java,
        idl/javamapping/JavaMappingGeneratingVisitor.java,
        orb/dynany/DynUnion.java,
        orb/portableInterceptor/ORBInitInfoImpl.java, poa/POA.java,
        poa/RequestController.java, collection/CollectionImpl.java: Java
        1.5.0 compatibility changes. Replace use of 'enum' as variable
        name and qualify use of class 'State' to avoid confusion with
        java.lang.State.

        * orb/factory/SocketFactoryManager.java (getFactory): Configure
        SocketFactory instances iff they are Configurable (as
        PortRangeSocketFactory is).  This fixes bug # 522. Thanks to
        Johannes Stamminger for raising the bug.

2004-10-07  Simon McQueen  <sm@prismtechnologies.com>

        * orb/BufferManager.java (getBuffer): Nullify cached bufferMax
        when the it's been given out to prevent another thread getting
        hold of it and / or utter carnage when handling multiple nested
        larged anys.

        Thanks to John Farrell for suggesting this.

2004-09-23  Simon McQueen  <sm@prismtechnologies.com>

        * config/Configuration.java (getAttributeAsBoolean x 2): Added
        trim()'s because of a very frustrating afternoon caused by a rogue
        trailing space.

        * orb/factory/PortRangeServerSocketFactory.java,
        orb/factory/PortRangeSocketFactory.java (configure): Amended so
        that you can specify a range of 1 port (i.e. MIN_PROP ==
        MAX_PROP).

        Thanks to Jay Colson for the report.

2004-09-13  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASTargetInterceptor.java: Reply service context
        was being overritten

2004-09-02  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/AbstractProxy.java (diposeInProgress_): new
        member to indicate shutdown
        (dispose): set disposeInProgress_ as first action
        (isConnected): only return true if dispose is not in progress
        (tryDisconnectClient): check disposeInProgress_ instead of
        isConnected(). otherwise consumer would not be disconnected

2004-08-27  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/PushToConsumerTask.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java
        (PushToConsumerTask): do not reset error counter here
        (*PushSupplierImpl): reset error counter after remote push was
        invoked successfully

        this should fix a bug where dead consumer were not properly
        disconnected from the channel

        http://lists.spline.inf.fu-berlin.de/pipermail/jacorb-developer/2004-August/006737.html

        thanks to John Farrell for reporting

2004-08-26  Simon McQueen  <sm@prismtechnologies.com>

        * orb/iiop/IIOPProfile.java: Oops. Cut and paste error in previous fix.

        * orb/iiop/IIOPProfile.java (equals): Fix for bug #507. No account
        was taken of SSL listen port when comparing profiles.

        Thanks to Norrie Quinn for suggesting a fix.

2004-08-25  Simon McQueen  <sm@prismtechnologies.com>

        * orb/util/PrintIOR.java (printIOR): Use the new method
        getOriginalHost rather than getHostname to display the actual
        contents of the profile's host string.

        * orb/IIOPAddress.java (getOriginalHost): Added this method for
        use by org.jacorb.orb.util.PrintIOR so that it can print what is
        actually encoded as the host string in an IOR.

        * orb/etf/StreamConnectionBase.java:
        Careless last minute change had broken compilation.

        * config/Configuration.java, orb/ParsedIOR.java, orb/build.xml,
        orb/etf/ConnectionBase.java, orb/etf/FactoriesBase.java,
        orb/etf/ListenerBase.java, orb/etf/ProfileBase.java,
        orb/etf/StreamConnectionBase.java,
        orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPConnection.java,
        orb/iiop/IIOPFactories.java, orb/iiop/IIOPListener.java,
        orb/iiop/IIOPProfile.java, orb/iiop/ServerIIOPConnection.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java: Created
        abstract base classes for ETF implementations and made the IIOP
        implementation derive from them.

2004-08-19  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/jmx/EventChannelFactoryControl.java,
        notification/jmx/EventChannelFactoryMBean.java,
        notification/jmx/JMXMain.java: code cleanup  added IOR and
        Corbaloc Attributes

        * notification/FilterFactoryImpl.java:
        (ctor) removed exception from signature (loadFilterPlugins) use
        ObjectUtil to load classes

        * notification/build.xml,
        notification/jmx/EventChannelFactoryControl.java,
        notification/jmx/EventChannelFactoryMBean.java,
        notification/jmx/JMXMain.java:
        (*.java) initial work for a mgmt facility based on
        JMX (build.xml) exclude from build for now

        * notification/servant/AbstractProxySupplier.java:
        (handleFailedPushOperation) dispose retry operation in case it fails

        * notification/engine/TaskProcessorRetryStrategy.java: javadoc

        * notification/AbstractChannelFactory.java,
        notification/FilterFactoryImpl.java: moved FilterFactoryImpl class
        to the ManageableServant IF and fixed Refs in
        AbstractChannelFactory

        * notification/util/AbstractObjectPool.java:
        (stopListCleaner) empty the cached array to allow cached elements
        to be GC'ed

2004-08-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/DefaultTaskProcessor.java,
        notification/engine/TaskExecutor.java: allow pull worker threads
        to die

        * notification/ApplicationContext.java: comment out unused field

        * notification/servant/AbstractProxySupplier.java: cleanup

        * notification/util/AbstractObjectPool.java: organized imports

        * notification/servant/StructuredProxyPushSupplierImpl.java:
        (disconnect) instead of setting pushConsumer_ to null set to
        NULL_CONSUMER

        * notification/servant/AbstractProxy.java:
        (checkDisposalstatus) do not throw OBJECT_NOT_EXIST

        * notification/queue/EventQueue.java: added javadoc

        * notification/interfaces/MessageConsumer.java:
        commented out unused methods

        * notification/engine/RetryStrategy.java,
        notification/engine/TaskProcessorRetryStrategy.java,
        notification/engine/WaitRetryStrategy.java: cleanup

        * notification/engine/PushStructuredOperation.java: replaced class
        StructuredPushConsumer with IF StructuredPushConsumerOperations

        * notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterConsumerAdminTask.java:
        (doWork, filter) dispose message if no ProxySuppliers are
        connected

        * notification/engine/AbstractTask.java:
        (dipose) implement in this class. Call reset on dispose so that
        referenced resources are freed

2004-08-16  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/util/AbstractObjectPool.java:
        (ListCleaner) longer interval between runs. use Array instead of
        Iterator as the overuse of Iterator seemed to cause a memory
        problem

2004-08-14  Andre Spiegel  <spiegel@gnu.org>

        * orb/CDROutputStream.java (write_repository_id,
        write_special_value, write_codebase, writeRecursiveTypeCode): Fix
        the calculation of indirection offsets according to John Farrell's
        investigation -- use size() rather than pos or index, to account
        for deferred writes.

        * orb/CDRInputStream.java (openEncapsulation, closeEncapsulation):
        Back out previous change, since Francisco correctly pointed out
        that we needn't scope the indirection maps on input (they contain
        absolute positions in the stream anyway).

        * org/EncapsInfo.java (c'tor): Likewise.

2004-08-13  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java,
        notification/engine/PushToConsumerTask.java,
        notification/engine/TaskExecutor.java,
        notification/engine/TaskFactory.java: code cleanup

        * notification/AbstractChannelFactory.java:
        (eventChannelIDPool_) is final (setORB) added {}

        * notification/AbstractMessage.java:
        (extractValue) better error checking if you try to access non
        defined properties in filter strings

        * notification/filter/etcl/AndOperator.java,
        notification/filter/etcl/BinaryOperator.java,
        notification/filter/etcl/ComponentPositionOperator.java,
        notification/filter/etcl/DefaultOperator.java,
        notification/filter/etcl/DivOperator.java,
        notification/filter/etcl/ETCLComponentName.java,
        notification/filter/etcl/EqOperator.java,
        notification/filter/etcl/EventNameShorthandNode.java,
        notification/filter/etcl/GtOperator.java,
        notification/filter/etcl/GteOperator.java,
        notification/filter/etcl/IdentValue.java,
        notification/filter/etcl/ImmutableEvaluationResult.java,
        notification/filter/etcl/InOperator.java,
        notification/filter/etcl/LtOperator.java,
        notification/filter/etcl/LteOperator.java,
        notification/filter/etcl/MessageUtils.java,
        notification/filter/etcl/MinusOperator.java,
        notification/filter/etcl/MultOperator.java,
        notification/filter/etcl/NeqOperator.java,
        notification/filter/etcl/NotOperator.java,
        notification/filter/etcl/OrOperator.java,
        notification/filter/etcl/PlusOperator.java,
        notification/filter/etcl/RuntimeVariableNode.java,
        notification/filter/etcl/StaticTypeException.java,
        notification/filter/etcl/StringValue.java,
        notification/filter/etcl/SubstrOperator.java,
        notification/filter/etcl/UnaryOperator.java,
        notification/filter/etcl/UnionPositionOperator.java: better error
        checking if you try to access non defined properties in filter
        strings

2004-08-04  Andre Spiegel  <spiegel@gnu.org>

        * naming/ContextLister.java: Untabify.

2004-08-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/build.xml: (server) use pathref to access classpath

        * notification/FilterManager.java: filterLock_ should be final

2004-07-19  Phil Mesnier  <mesnier_p@ociweb.com>

        * orb/ORB.java,
        orb/portableInterceptor/IORInterceptorIterator.java,
        orb/portableInterceptor/InterceptorManager.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java: added
        support for applying codeset tagged component to all profiles
        included in an IOR, including non-IIOP and non-MultipleComponents

2004-07-19  Andre Spiegel  <spiegel@gnu.org>

        * orb/giop/ClientConnection.java (sendRequest): When receiving an
        exception, remove the ReplyPlaceholder to avoid memory leak.  This
        is part of the fix for bug 478, suggested by Marc Heide.

        * orb/CDRInputStream.java (openEncapsulation): Fix parameter order
        in prev change.

2004-07-16  Simon McQueen  <sm@prismtechnologies.com>

        * poa/RequestProcessor.java (invokeOperation): Added some debug to
        permit display of runtime exception stack traces.

        Thanks to Justin Permar for the suggestion.

2004-07-16  Andre Spiegel  <spiegel@gnu.org>

        * collection/KeySortedCollectionImpl.java,
        collection/OrderedIteratorImpl.java,
        collection/PositionalIteratorImpl.java: Remove some superfluous
        semicolons to get rid of unreachable code errors in Eclipse.

        * collection/SequenceFactoryImpl.java,
        collection/SortedRelationFactoryImpl.java (create): Use ObjectUtil
        instead of Environment.

        * orb/Delegate.java (invoke_internal): When catching a
        SystemException on send, remove the ReplyReceiver to break
        reference cycle, allowing GC.  This is part of the fix for bug
        478, thanks to Marc Heide.

        * orb/CDRInputStream.java (openEncapsulation, closeEncapsulation):
        Save and restore the indirection maps.

        * orb/EncapsInfo.java (c'tor): Include the indirection maps in the
        constructor for CDRInputStreams as well.

2004-07-15  Simon McQueen  <sm@prismtechnologies.com>

        * orb/IIOPAddress.java (getIP, getHostname): Moved 'is configured'
        check from former to latter.

        Configuration is only required / accessed for reverse lookups so
        it was in the wrong place.

2004-07-12  Simon McQueen  <sm@prismtechnologies.com>

        * orb/factory/SocketFactoryManager.java (getServerFactory):
        Configure ServerSocketFactory instances iff they are
        Configurable (as PortRangeServerSocketFactory is).

        This fixes bug #496. Thanks to 'Phil42' for reporting that there
        was a problem.

        * config/Configuration.java (init): Permit setting of
        jacorb.config.log.verbosity via System property.

        Thanks to Richard Hash for the fix. This fixes bug # 499.

2004-07-12  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractChannelFactory.java,
        notification/AbstractEventChannel.java,
        notification/AbstractFilter.java,
        notification/AbstractMessage.java, notification/AnyMessage.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java,
        notification/ChannelManager.java,
        notification/CollectionsWrapper.java,
        notification/ConstraintEntry.java,
        notification/EventChannelFactoryDependency.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/EventTypeSet.java,
        notification/FilterFactoryImpl.java,
        notification/FilterManager.java,
        notification/MappingFilterImpl.java,
        notification/MessageFactory.java, notification/OfferManager.java,
        notification/StructuredEventMessage.java,
        notification/SubscriptionManager.java,
        notification/TypedEventChannelFactoryImpl.java,
        notification/TypedEventChannelImpl.java,
        notification/TypedEventMessage.java,
        notification/util/AdminPropertySet.java,
        notification/util/JDK14PatternWrapper.java,
        notification/util/PropertySet.java,
        notification/util/PropertySetListener.java,
        notification/util/QoSPropertySet.java,
        notification/util/WildcardMap.java,
        notification/util/AbstractObjectPool.java,
        notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/ECProxyPullConsumerImpl.java,
        notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushConsumerImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/FilterStageListManager.java,
        notification/servant/ManageableServant.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminImpl.java,
        notification/servant/TypedConsumerAdminImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java,
        notification/servant/TypedSupplierAdminImpl.java,
        notification/queue/EventQueueFactory.java,
        notification/interfaces/AbstractPoolable.java,
        notification/interfaces/EventChannelEvent.java,
        notification/interfaces/Message.java,
        notification/interfaces/ProxyEvent.java,
        notification/filter/DynamicEvaluator.java,
        notification/filter/EvaluationContext.java,
        notification/filter/EvaluationException.java,
        notification/filter/EvaluationResult.java,
        notification/filter/etcl/AbstractTCLNode.java,
        notification/filter/etcl/AndOperator.java,
        notification/filter/etcl/AssocOperator.java,
        notification/filter/etcl/BoolValue.java,
        notification/filter/etcl/DefaultOperator.java,
        notification/filter/etcl/DivOperator.java,
        notification/filter/etcl/ETCLComponentName.java,
        notification/filter/etcl/ETCLFilterConstraint.java,
        notification/filter/etcl/EqOperator.java,
        notification/filter/etcl/ExistOperator.java,
        notification/filter/etcl/GteOperator.java,
        notification/filter/etcl/IdentValue.java,
        notification/filter/etcl/ImplicitOperatorNode.java,
        notification/filter/etcl/InOperator.java,
        notification/filter/etcl/LteOperator.java,
        notification/filter/etcl/MessageUtils.java,
        notification/filter/etcl/MinusOperator.java,
        notification/filter/etcl/MultOperator.java,
        notification/filter/etcl/NeqOperator.java,
        notification/filter/etcl/NotOperator.java,
        notification/filter/etcl/NumberValue.java,
        notification/filter/etcl/OrOperator.java,
        notification/filter/etcl/PlusOperator.java,
        notification/filter/etcl/RuntimeVariableNode.java,
        notification/filter/etcl/StringValue.java,
        notification/filter/etcl/SubstrOperator.java,
        notification/engine/AbstractDeliverTask.java,
        notification/engine/AbstractFilterTask.java,
        notification/engine/AbstractTask.java,
        notification/engine/DefaultTaskProcessor.java,
        notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/PushAnyOperation.java,
        notification/engine/PushSequenceOperation.java,
        notification/engine/PushStructuredOperation.java,
        notification/engine/PushTypedOperation.java,
        notification/engine/RetryStrategy.java,
        notification/engine/TaskExecutor.java,
        notification/engine/TaskFactory.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TaskProcessorRetryStrategy.java,
        notification/engine/TimerDeliverTask.java,
        notification/conf/Default.java: organized imports

2004-06-30  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/FilterFactoryImpl.java: exception messages

        * notification/AbstractMessage.java: whitespace

        * notification/filter/bsh/build.xml: lookup bsh in ${classpath}

2004-06-29  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractFilter.java,
        notification/filter/PropertyDoesNotExistException.java,
        notification/filter/etcl/PropertyShorthandNode.java: *** empty log
        message ***

2004-06-28  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/util/AbstractObjectPool.java: call registerPool in
        configure not in ctor. otherwise race condition can occur

2004-06-26  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractChannelFactory.java,
        notification/MessageFactory.java: compatibility w JDK1.3

2004-06-25  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/filter/etcl/grammar/tcl-lexer.g:
        (OTHER_TEXT) added ascii chars to OTHER_TEXT token. this fixes a
        bug reported by Mike Zhao. It was impossible to use special
        chars as *, ~,  @, etc. in string constants.

2004-06-24  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractChannelFactory.java:
        (registerName) do nothing if nameId == null.

        * notification/AbstractChannelFactory.java:
        (registerName) if nameKind is not set it defaults to "". this
        caused a null pointerexception while registering a reference to
        the NameService.  reported by Gregory Gimler
        news://news.gmane.org:119/6.0.0.22.2.20040623182008.01d8ab68@group33.llan.ll.mit.edu

2004-06-22  Phil Mesnier  <mesnier_p@ociweb.com>

        * orb/giop/ClientConnection.java: Have the setCodeSet method
        return a defaulted service context even if no codeset component is
        found in the profile. This resolves an interoperability problem
        with TAO when a non-IIOP profile is used

2004-06-22  Simon McQueen  <sm@prismtechnologies.com>

        * orb/iiop/IIOPListener.java (configure): Add property
        jacorb.security.ssl.always_open_unsecured_endpoint to override the
        default behaviour of not opening an unsecured acceptor when SSL is
        required.

        Fixes bug #491.

2004-06-22  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/AbstractProxySupplier.java:
        (removeListener) changed visibility to protected

        whitespace

        * notification/servant/AbstractProxy.java:
        (dispose) call removeListener during dispose

        (removeListener) added abstract method

        this is to fix an issue reported by James Haiar
        news://news.gmane.org:119/200406212023.i5LKNwx25277@group33.kmr.ll.mit.edu

        * notification/servant/AbstractProxyConsumer.java:
        (removeListener) changed visibility to protected

        * notification/TypedEventChannelFactoryImpl.java:
        (preActivate) added descriptive text in exception

2004-06-21  David R Robison  <drrobison@openroadsconsulting.com>

        * orb/build.xml, orb/rmi/PortableRemoteObjectDelegateImpl.java:
        RMI over IIOP

2004-06-19  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/FilterFactoryImpl.java: cleaned up imports

        added better descriptions in exceptions

2004-06-18  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/build.xml: fixed typo

        * notification/AbstractChannelFactory.java,
        notification/AbstractMessage.java,
        notification/ChannelContext.java,
        notification/ChannelManager.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventTypeSet.java,
        notification/FilterFactoryImpl.java,
        notification/MappingFilterImpl.java,
        notification/MessageFactory.java,
        notification/TypedEventChannelFactoryImpl.java: more changes to
        support TypedNotifications

        * notification/ConsoleMain.java, notification/Main.java,
        notification/WrapperMain.java, notification/build.xml:
        (EventChannelFactoryImpl) extracted console related stuff to new
        class ConsoleMain

        (Main) renamed class to WrapperMain

        * notification/servant/TypedProxyPushConsumerImpl.java: renamed
        variable

        * notification/servant/AbstractProxySupplier.java:
        (offer_change) catch and log exception if offer_change fails

        * notification/servant/AbstractProxyConsumer.java:
        (subscription_change) catch and display exception if
        subscription_change fails

        * notification/filter/etcl/grammar/tcl.g: whitespace

        * notification/conf/Attributes.java: new attribute

        * notification/filter/bsh/BSHFilter.java, notification/filter/bsh/build.xml:
        created beanshell filter as demonstration of a custom filter.

        * notification/AbstractFilter.java, notification/FilterImpl.java,
        notification/filter/FilterConstraint.java,
        notification/filter/etcl/ETCLFilter.java,
        notification/filter/etcl/ETCLFilterConstraint.java: split
        FilterImpl in AbstractFilterImpl and ETCLFilter to allow custom
        filters

2004-06-14  Simon McQueen  <sm@prismtechnologies.com>

        * config/Configuration.java (init): Added two missing checks for a
        logging verbosity value.

        Thanks to Oguzhan Eris for supplying the patch.

2004-06-11  Simon McQueen  <sm@prismtechnologies.com>

        * config/Configuration.java (setAttributes): Check for illegal non
        String keys / values in Properties objects.

        Thanks to John Farrell for supplying the patch.

2004-06-09  Andre Spiegel  <spiegel@gnu.org>

        * orb/ClientInterceptorHandler.java (handle_location_forward,
        handle_receive_exception, handle_receive_other,
        handle_receive_reply): Use setter methods to put data into
        interceptor info.

        * poa/RequestProcessor.java (process): Use setter methods to put
        data into interceptor info.

        * orb/dii/Request.java (_invoke): Likewise.

        * orb/dsi/ServerRequest.java (arguments): Likewise.

        * orb/portableInterceptor/RequestInfoImpl.java (arguments,
        caller_op, current, exceptions, forward_reference, operation,
        reply_status, request_id, response_expected, result): Made fields
        protected instead of public.
        (arguments, exceptions, forward_reference): Accessor methods
        weren't implemented properly.
        (current, setArguments, setReplyStatus, setCurrent): New methods.

2004-06-08  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/util/AbstractObjectPool.java: checked
        synchronization for non-synchronized members

        * notification/MessageFactory.java, notification/FilterImpl.java:
        whitespace

2004-06-07  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/interfaces/AbstractPoolable.java: whitespace

2004-06-04  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/util/AbstractObjectPool.java: fix bug reported by
        John Farrell
        news://news.gmane.org:119/200406041629.48096.Farrell_John_W@cat.com

        (active_) wrapped member active_ in synchronized Collectionswrapper

2004-06-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/filter/etcl/EqOperator.java:
        (evaluate) undo last changes

        * notification/filter/etcl/PropertyShorthandNode.java:
        (evaluate) throw EvaluationException if property cannot be
        resolved

2004-06-02  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/filter/etcl/grammar/comp-lexer.g,
        notification/filter/etcl/grammar/tcl-lexer.g,
        notification/filter/etcl/grammar/tcl.g: updated copyright

        * notification/filter/etcl/EqOperator.java: added fix to a bug
        reported by John Farrell

        quote:

        We are seeing a problem in Jacorb Notification in class EqOperator
        in method evaluate(EvaluationContext), where _left is null so the
        .compareTo(_right) is failing with a NullPointerException (line
        46). I believe this is caused by using an ETCL expression where I
        am saying "x == 3", when "x" is not defined in the event.

        (evaluate) check if _left and _right are not null before invoking
        compare

2004-05-25  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/build.xml: updated ref to wrapper.jar

2004-05-19  Andre Spiegel  <spiegel@gnu.org>

        * orb/ReplyReceiver.java (c'tor): Pass the ORB up to the
        superclass constructor, fixing bug #482.

        * orb/giop/ReplyPlaceholder.java (c'tor): Delete the no-arg
        constructor, calling it would result in a non-configured
        ReplyPlaceholder.

2004-05-18  Nicolas Noffke  <nicolas.noffke@web.de>

        * orb/giop/ClientConnection.java:
        (locateReplyReceived, replyReceived) better error message

2004-05-12  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/ChannelManager.java,
        notification/EventChannelFactoryImpl.java,
        notification/TypedEventChannelFactoryImpl.java,
        notification/interfaces/EventChannelEvent.java: added
        TypedEventChannelFactory

2004-05-11  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractEventChannel.java,
        notification/EventChannelFactoryDependency.java,
        notification/EventChannelImpl.java,
        notification/TypedEventChannelImpl.java,
        notification/interfaces/FilterStageSource.java,
        notification/servant/AbstractSupplierAdmin.java,
        notification/servant/SupplierAdminImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java: further
        towards typed channels.

        (EventChannelImpl) split EventChannelImpl into
        AbstractEventChannel and EventChannelImpl so that new
        TypedEventChannelImpl can reuse parts of the implementation

        (*) various fixes so that Unit tests run again

2004-05-09  Francisco Reverbel  <reverbel@ime.usp.br>

        * config/LoggerFactory.java: The LoggerFactory interface should be
        public, as users should be able to plug other logging mechanisms
        in by creating their own LoggerFactory implementations outside of
        the org.jacorb.config package.

2004-05-09  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/AbstractProxy.java: added missing import

        * notification/AbstractMessage.java, notification/AnyMessage.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java,
        notification/ChannelContextDependency.java,
        notification/Dependant.java,
        notification/EventChannelDependency.java,
        notification/EventChannelFactoryDependency.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/EventTypeSet.java,
        notification/FilterFactoryImpl.java, notification/FilterImpl.java,
        notification/FilterManager.java,
        notification/MappingFilterImpl.java,
        notification/MessageFactory.java,
        notification/MessageFactoryDependency.java,
        notification/NoTranslationException.java,
        notification/OfferManager.java,
        notification/StructuredEventMessage.java,
        notification/SubscriptionManager.java,
        notification/TypedEventMessage.java, notification/build.xml,
        notification/engine/AbstractDeliverTask.java,
        notification/engine/AbstractFilterTask.java,
        notification/engine/AbstractTask.java,
        notification/engine/DefaultTaskProcessor.java,
        notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java,
        notification/engine/MessagePushOperation.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/PushAnyOperation.java,
        notification/engine/PushOperation.java,
        notification/engine/PushSequenceOperation.java,
        notification/engine/PushStructuredOperation.java,
        notification/engine/PushToConsumerTask.java,
        notification/engine/PushTypedOperation.java,
        notification/engine/RetryStrategy.java,
        notification/engine/TaskFactory.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TaskProcessorDependency.java,
        notification/engine/TaskProcessorRetryStrategy.java,
        notification/engine/TimerDeliverTask.java,
        notification/filter/DynamicEvaluator.java,
        notification/filter/EvaluationContext.java,
        notification/filter/EvaluationResult.java,
        notification/filter/FilterConstraint.java,
        notification/filter/etcl/AbstractTCLNode.java,
        notification/filter/etcl/CurrentTimeNode.java,
        notification/filter/etcl/DomainNameShorthandNode.java,
        notification/filter/etcl/ETCLComponentName.java,
        notification/filter/etcl/EventNameShorthandNode.java,
        notification/filter/etcl/GtOperator.java,
        notification/filter/etcl/LtOperator.java,
        notification/filter/etcl/MessageUtils.java,
        notification/filter/etcl/PropertyShorthandNode.java,
        notification/filter/etcl/RuntimeVariableNode.java,
        notification/filter/etcl/StaticTypeChecker.java,
        notification/filter/etcl/TCLCleanUp.java,
        notification/filter/etcl/TypeNameShorthandNode.java,
        notification/filter/etcl/UnionPositionOperator.java,
        notification/interfaces/AbstractPoolable.java,
        notification/interfaces/FilterStage.java,
        notification/interfaces/FilterStageSource.java,
        notification/interfaces/Message.java,
        notification/interfaces/MessageConsumer.java,
        notification/queue/AbstractBoundedEventQueue.java,
        notification/queue/BoundedPriorityEventQueue.java,
        notification/queue/EventQueueFactory.java,
        notification/queue/EventQueueFactoryDependency.java,
        notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/ConsumerAdminTieImpl.java,
        notification/servant/ECProxyPullConsumerImpl.java,
        notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushConsumerImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/FilterStageListManager.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminImpl.java,
        notification/servant/SupplierAdminTieImpl.java,
        notification/servant/TypedConsumerAdminImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java,
        notification/servant/TypedSupplierAdminImpl.java,
        notification/util/AbstractObjectPool.java,
        notification/util/AdminPropertySet.java,
        notification/util/GNUPatternWrapper.java,
        notification/util/JDK14PatternWrapper.java,
        notification/util/PatternWrapper.java,
        notification/util/PropertySet.java,
        notification/util/QoSPropertySet.java,
        notification/util/WildcardMap.java: further towards
        typednotification

        * notification/ChannelContextDependency.java,
        notification/Dependant.java,
        notification/EventChannelDependency.java,
        notification/EventChannelFactoryDependency.java,
        notification/MessageFactoryDependency.java,
        notification/NoTranslationException.java,
        notification/TypedEventMessage.java: New file.

        * notification/AbstractMessage.java, notification/AnyMessage.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java,
        notification/ChannelContextDependency.java,
        notification/Dependant.java,
        notification/EventChannelDependency.java,
        notification/EventChannelFactoryDependency.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java, notification/FilterImpl.java,
        notification/FilterManager.java, notification/MessageFactory.java,
        notification/MessageFactoryDependency.java,
        notification/NoTranslationException.java,
        notification/StructuredEventMessage.java,
        notification/TypedEventMessage.java, notification/build.xml,
        notification/engine/AbstractFilterTask.java: started
        implementation of typednotification channels

        * notification/engine/DefaultTaskProcessor.java,
        notification/engine/MessagePushOperation.java,
        notification/engine/PushTypedOperation.java,
        notification/engine/TaskProcessorDependency.java,
        notification/interfaces/FilterStageSource.java,
        notification/queue/EventQueueFactoryDependency.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/SupplierAdminImpl.java,
        notification/servant/TypedConsumerAdminImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java,
        notification/servant/TypedSupplierAdminImpl.java: New file.

        * notification/engine/DefaultTaskProcessor.java,
        notification/engine/MessagePushOperation.java,
        notification/engine/PushAnyOperation.java,
        notification/engine/PushOperation.java,
        notification/engine/PushSequenceOperation.java,
        notification/engine/PushStructuredOperation.java,
        notification/engine/PushTypedOperation.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TaskProcessorDependency.java,
        notification/engine/TaskProcessorRetryStrategy.java,
        notification/filter/FilterConstraint.java,
        notification/filter/etcl/AbstractTCLNode.java,
        notification/filter/etcl/ETCLComponentName.java,
        notification/filter/etcl/GtOperator.java,
        notification/filter/etcl/LtOperator.java,
        notification/interfaces/FilterStage.java,
        notification/interfaces/FilterStageSource.java,
        notification/interfaces/Message.java,
        notification/queue/BoundedPriorityEventQueue.java,
        notification/queue/EventQueueFactory.java,
        notification/queue/EventQueueFactoryDependency.java,
        notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ConsumerAdminImpl.java,
        notification/servant/ConsumerAdminTieImpl.java,
        notification/servant/ECProxyPullConsumerImpl.java,
        notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushConsumerImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminImpl.java,
        notification/servant/SupplierAdminTieImpl.java,
        notification/servant/TypedConsumerAdminImpl.java,
        notification/servant/TypedProxyPullConsumerImpl.java,
        notification/servant/TypedProxyPullSupplierImpl.java,
        notification/servant/TypedProxyPushConsumerImpl.java,
        notification/servant/TypedProxyPushSupplierImpl.java,
        notification/servant/TypedSupplierAdminImpl.java,
        notification/util/JDK14PatternWrapper.java,
        notification/util/JakartaRegexpPatternWrapper.java,
        notification/util/PatternWrapper.java,
        notification/util/PropertySet.java,
        notification/util/WildcardMap.java: started implementation of
        typednotification channels

2004-05-07  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GSSUPMechFactory.java,
        security/sas/GSSUPNameSpi.java, security/sas/GSSUPProvider.java,
        security/sas/GSSUPProviderInitializer.java,
        security/sas/GssUpContext.java, security/sas/ISASContext.java,
        security/sas/JsseContext.java, security/sas/KerberosContext.java,
        security/sas/NullContext.java,
        security/sas/SASClientInterceptor.java,
        security/sas/SASInitializer.java,
        security/sas/SASTargetInterceptor.java: Changes to compile with
        2.2

2004-05-07  Gerald Brose  <gerald.brose@acm.org>

        * orb/dns/build.xml: reenableed Xbill

        * orb/dns/DNSLookup.java, orb/dns/XbillDelegateImpl.java, orb/dns/build.xml:
        removed dependency on Xbill, DNS now works with JDK 1.4 only

        * util/Version.java: set to release date

2004-05-07  Nick Cross  <nick.cross@prismtechnologies.com>

        * poa/RPPoolManager.java: Fix compile problem

2004-05-06  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/CDRInputStream.java:
        Fix read_Object(Class clz) so that it now works when clz is a stub class.
        The previous revision worked only when clz was an RMI/IDL interface.
        (Patch contributed by Bill Burke <bill@jboss.org>)

2004-05-06  Phil Mesnier  <mesnier_p@ociweb.com>

        * util/ObjectUtil.java:
        Added a fix to allow file:// to take relative as well as absolute path names for IOR urls

2004-05-06  Nicolas Noffke  <nicolas.noffke@web.de>

        * imr/ImplementationRepositoryImpl.java:
        added missing calls to configure of orb package classes

        * imr/ImRPOAInfo.java:
        (c'tor) added timeout param to avoid needing to be Configurable; removed logger and configuration members, the weren't Serializable

2004-05-06  Nicolas Noffke <Nicolas.Noffke@web.de>

        * security/ssl/iaik/SSLServerSocketFactory.java:
        (c'tor) removed call to configure(), is done by the BasicAdapter; removed
        "role change" feature; pretty printed

        * security/ssl/iaik/SSLSocketFactory.java:
        removed "role change" feature; pretty printed

        * security/ssl/sun_jsse/SSLServerSocketFactory.java:
        (switchToClientMode) removed this feature

        * security/ssl/sun_jsse/SSLSocketFactory.java:
        removed "change roles" feature; pretty printed

        * orb/factory/SSLServerSocketFactory.java:
        (switchToClientMode) removed this feature

        * orb/iiop/IIOPListener.java:
        (SSLAcceptor.setup) removed completely, because
        SSLServerSocketFactory.switchToClientMode() has been removed as
        well

        * security/ssl/sun_jsse/SSLServerSocketFactory.java:
        (c'tor) removed call to configure, it is called by the
        BasicAdapter; Pretty printed

        * orb/iiop/ClientIIOPConnection.java:
        (createSocket) fixed bug: method would always use plain TCP/IP
        socket factory even if SSL should have been used

        * ChangeLog: updated

2004-05-06  Gerald Brose  <gerald.brose@acm.org>

        * config/Configuration.java: pretty printing only

        * orb/BasicAdapter.java:
        (return_result) removed superflous synchronization for better
        scalability.

2004-05-05  David R. Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASTargetInterceptor.java, security/sas/GssUpContext.java, security/sas/SASClientInterceptor.java, security/sas/GSSUPNameSpi.java:
        Fixes for SAS

2004-05-04  Gerald Brose  <gerald.brose@acm.org>

        * orb/util/PingObject.java:
        (main) was completely broken and never returned okay.

2004-05-03  Andre Spiegel  <spiegel@gnu.org>

        * poa/RequestController.java (getPoolManager):
        Pass the configuration to the RPPoolManager.

        * poa/RPPoolManager.java (configuration): New field.
        (c'tor): Set it from new parameter.
        (addProcessor): Configure the RequestProcessor after
        creating it.

        * poa/RequestProcessor.java (checkReplyEndTime): New field.
        (configure): New method, sets the above from the new
        property jacorb.poa.check_reply_end_time.
        (process): Only check reply end time if the above property
        is set.

        * orb/giop/GIOPConnection.java (configure): Rename property to
        jacorb.connection.client.connect_timeout, for consistency.

        * orb/iiop/ClientIIOPConnection.java (connect):
        Don't ignore the retry count if a timeout for
        connection establishment has been set.

        * orb/giop/GIOPConnection.java (configure):
        Use new property jacorb.connection.connect_timeout,
        rather than jacorb.connection.client.pending_reply_timeout.

2004-04-30  Phil Mesnier  <mesnier_p@ociweb.com>

        * orb/ORB.java: Added code to configure the object key map with
          name/value pairs now stored in attributes of the Configuration. This
          restores the functionality previously supplied by the
          Environment.getProperties() method.

2004-04-30  Gerald Brose  <gerald.brose@acm.org>

        * config/Configuration.java, orb/ORB.java: added check for reserved
          ORBids ("jacorb" and "orb"), moved these to
          Configuration.getConfiguration

2004-04-28  Gerald Brose  <gerald.brose@acm.org>

        * build.xml, config/Configuration.java,
          config/LogKitLoggerFactory.java, config/LoggerFactory.java,
          config/build.xml, imr/ImRAccessImpl.java, imr/ImRHostInfo.java,
          imr/ImRPOAInfo.java, imr/ImRServerInfo.java,
          imr/ImplementationRepositoryImpl.java, imr/ResourceLock.java,
          imr/RessourceLock.java, imr/ServerStartupDaemonImpl.java,
          imr/ServerTable.java, imr/util/ImRManager.java,
          imr/util/ImRManagerGUI.java, imr/util/ImRModel.java,
          imr/util/ImRTreeCellRenderer.java, ir/AliasDef.java,
          ir/ArrayDef.java, ir/AttributeDef.java, ir/ConstantDef.java,
          ir/Contained.java, ir/Container.java, ir/EnumDef.java,
          ir/ExceptionDef.java, ir/IDLType.java, ir/InterfaceDef.java,
          ir/ModuleDef.java, ir/OperationDef.java, ir/RepositoryID.java,
          ir/RepositoryImpl.java, ir/SequenceDef.java, ir/StructDef.java,
          ir/TypeCodeUtil.java, ir/UnionDef.java, ir/gui/IRBrowser.java,
          ir/gui/typesystem/remote/RemoteTypeSystem.java,
          naming/ContextLister.java, naming/NameServer.java,
          naming/NamingContextImpl.java, notification/AbstractMessage.java,
          notification/ApplicationContext.java,
          notification/ChannelContext.java,
          notification/EventChannelFactoryImpl.java,
          notification/EventChannelImpl.java,
          notification/EventTypeSet.java,
          notification/FilterFactoryImpl.java,
          notification/FilterImpl.java, notification/FilterManager.java,
          notification/MappingFilterImpl.java,
          notification/MessageFactory.java, notification/OfferManager.java,
          notification/StructuredEventMessage.java,
          notification/SubscriptionManager.java, notification/build.xml,
          notification/conf/Attributes.java,
          notification/conf/Configuration.java,
          notification/engine/AbstractDeliverTask.java,
          notification/engine/AbstractFilterTask.java,
          notification/engine/AbstractTask.java,
          notification/engine/FilterConsumerAdminTask.java,
          notification/engine/FilterProxyConsumerTask.java,
          notification/engine/FilterProxySupplierTask.java,
          notification/engine/FilterSupplierAdminTask.java,
          notification/engine/PullFromSupplierTask.java,
          notification/engine/PushToConsumerTask.java,
          notification/engine/RetryStrategy.java,
          notification/engine/TaskExecutor.java,
          notification/engine/TaskFactory.java,
          notification/engine/TaskProcessor.java,
          notification/engine/TaskProcessorRetryStrategy.java,
          notification/engine/TimerDeliverTask.java,
          notification/filter/DynamicEvaluator.java,
          notification/filter/EvaluationContext.java,
          notification/filter/EvaluationResult.java,
          notification/filter/FilterConstraint.java,
          notification/filter/etcl/AbstractTCLNode.java,
          notification/filter/etcl/CurrentTimeNode.java,
          notification/filter/etcl/DomainNameShorthandNode.java,
          notification/filter/etcl/ETCLComponentName.java,
          notification/filter/etcl/EqOperator.java,
          notification/filter/etcl/EventNameShorthandNode.java,
          notification/filter/etcl/MessageUtils.java,
          notification/filter/etcl/PropertyShorthandNode.java,
          notification/filter/etcl/RuntimeVariableNode.java,
          notification/filter/etcl/StaticTypeChecker.java,
          notification/filter/etcl/TCLCleanUp.java,
          notification/filter/etcl/TypeNameShorthandNode.java,
          notification/filter/etcl/UnionPositionOperator.java,
          notification/interfaces/AbstractPoolable.java,
          notification/interfaces/MessageConsumer.java,
          notification/queue/AbstractBoundedEventQueue.java,
          notification/queue/EventQueueFactory.java,
          notification/servant/AbstractAdmin.java,
          notification/servant/AbstractProxy.java,
          notification/servant/AbstractProxyConsumer.java,
          notification/servant/AbstractProxySupplier.java,
          notification/servant/ConsumerAdminTieImpl.java,
          notification/servant/FilterStageListManager.java,
          notification/servant/ProxyPullConsumerImpl.java,
          notification/servant/ProxyPushConsumerImpl.java,
          notification/servant/StructuredProxyPullConsumerImpl.java,
          notification/servant/StructuredProxyPushConsumerImpl.java,
          notification/util/AbstractObjectPool.java,
          notification/util/AdminPropertySet.java,
          notification/util/GNUPatternWrapper.java,
          notification/util/JDK14PatternWrapper.java,
          notification/util/JakartaRegexpPatternWrapper.java,
          notification/util/PatternWrapper.java,
          notification/util/PropertySet.java,
          notification/util/QoSPropertySet.java,
          notification/util/TaskExecutor.java,
          notification/util/WildcardMap.java, orb/Any.java,
          orb/ApplicationExceptionHelper.java, orb/BasicAdapter.java,
          orb/BufferManager.java, orb/CDRInputStream.java,
          orb/CDROutputStream.java, orb/ClientInterceptorHandler.java,
          orb/Delegate.java, orb/ExceptionHolderImpl.java,
          orb/IIOPAddress.java, orb/LocateReplyReceiver.java, orb/ORB.java,
          orb/ORBSingleton.java, orb/ParsedIOR.java,
          orb/ReplyReceiver.java, orb/ServantDelegate.java,
          orb/SystemExceptionHelper.java, orb/TypeCode.java,
          orb/dii/Request.java, orb/dns/DNSLookup.java,
          orb/dns/JdkDelegateImpl.java, orb/dsi/ServerRequest.java,
          orb/dynany/DynAnyFactoryImpl.java, orb/dynany/DynUnion.java,
          orb/factory/PortRangeFactory.java,
          orb/factory/PortRangeServerSocketFactory.java,
          orb/factory/PortRangeSocketFactory.java,
          orb/factory/SocketFactoryManager.java,
          orb/giop/BiDirConnectionInitializer.java,
          orb/giop/BiDirConnectionServerInterceptor.java,
          orb/giop/BiDirPolicyFactory.java, orb/giop/ClientConnection.java,
          orb/giop/ClientConnectionManager.java,
          orb/giop/ClientGIOPConnection.java, orb/giop/GIOPConnection.java,
          orb/giop/GIOPConnectionManager.java,
          orb/giop/MessageReceptor.java, orb/giop/MessageReceptorPool.java,
          orb/giop/NoBiDirClientRequestListener.java,
          orb/giop/NoBiDirServerReplyListener.java,
          orb/giop/ReplyInputStream.java, orb/giop/ReplyOutputStream.java,
          orb/giop/ReplyPlaceholder.java,
          orb/giop/ServerGIOPConnection.java,
          orb/giop/ServerRequestListener.java,
          orb/giop/TransportManager.java,
          orb/iiop/ClientIIOPConnection.java, orb/iiop/IIOPConnection.java,
          orb/iiop/IIOPFactories.java, orb/iiop/IIOPListener.java,
          orb/iiop/IIOPProfile.java, orb/iiop/ServerIIOPConnection.java,
          orb/policies/PolicyManager.java,
          orb/portableInterceptor/ClientInterceptorIterator.java,
          orb/portableInterceptor/ClientRequestInfoImpl.java,
          orb/portableInterceptor/CodecImpl.java,
          orb/portableInterceptor/Codec_CDR_1_0_Impl.java,
          orb/portableInterceptor/IORInterceptorIterator.java,
          orb/portableInterceptor/InterceptorManager.java,
          orb/portableInterceptor/ORBInitInfoImpl.java,
          orb/portableInterceptor/ServerInterceptorIterator.java,
          orb/portableInterceptor/ServerRequestInfoImpl.java,
          orb/standardInterceptors/CodeSetInfoInterceptor.java,
          orb/standardInterceptors/IORInterceptorInitializer.java,
          orb/standardInterceptors/SASComponentInterceptor.java,
          orb/standardInterceptors/SSLComponentInterceptor.java,
          orb/util/FixIOR.java, orb/util/PingObject.java,
          orb/util/PrintIOR.java, poa/POA.java, poa/POAManagerMonitor.java,
          poa/POAManagerMonitorImpl.java,
          poa/POAManagerMonitorLightImpl.java, poa/POAMonitor.java,
          poa/POAMonitorImpl.java, poa/POAMonitorLightImpl.java,
          poa/RequestController.java, poa/RequestProcessor.java,
          poa/RequestQueue.java, poa/util/POAUtil.java,
          proxy/ProxyClientForwardInterceptor.java,
          proxy/ProxyClientInitializer.java, proxy/ProxyImpl.java,
          proxy/ProxyServerForwardInterceptor.java,
          proxy/ProxyServerInitializer.java, security/build.xml,
          security/level2/AccessDecisionImpl.java,
          security/level2/CredentialsImpl.java,
          security/level2/CurrentImpl.java,
          security/level2/PrincipalAuthenticatorImpl.java,
          security/level2/ServerAccessDecisionInterceptor.java,
          security/level2/ServerInitializer.java,
          security/level2/SunJssePrincipalAuthenticatorImpl.java,
          security/sas/GSSUPContextSpi.java,
          security/sas/GSSUPMechFactory.java,
          security/sas/GSSUPNameSpi.java, security/sas/GSSUPProvider.java,
          security/sas/GSSUPProviderInitializer.java,
          security/sas/GssUpContext.java, security/sas/JsseContext.java,
          security/sas/KerberosContext.java, security/sas/NullContext.java,
          security/sas/SASClientInterceptor.java,
          security/sas/SASInitializer.java,
          security/sas/SASTargetInterceptor.java, security/ssl/build.xml,
          security/ssl/iaik/SSLServerSocketFactory.java,
          security/ssl/iaik/SSLSetup.java,
          security/ssl/iaik/SSLSocketFactory.java,
          security/ssl/iaik/SecurityServiceInitializer.java,
          security/ssl/iaik/ServerInvocationInterceptor.java,
          security/ssl/sun_jsse/KeyStoreUtil.java,
          security/ssl/sun_jsse/SSLServerSocketFactory.java,
          security/ssl/sun_jsse/SSLSocketFactory.java,
          security/ssl/sun_jsse/SecurityServiceInitializer.java,
          security/ssl/sun_jsse/ServerInvocationInterceptor.java,
          security/ssl/sun_jsse/build.xml, security/util/CertUtils.java,
          trading/TradingService.java,
          trading/db/simple/offers/AnyValue.java,
          trading/db/simple/offers/OfferDatabaseImpl.java,
          trading/impl/LinkImpl.java, trading/impl/LookupImpl.java,
          trading/impl/OfferUtil.java, trading/test/ExampleSetup.java,
          trading/util/QueryPropagator.java, trading/util/Semaphore.java,
          trading/util/TimeoutThread.java, trading/util/TimerListNode.java,
          transaction/ClientContextTransferInterceptor.java,
          transaction/ServerContextTransferInterceptor.java,
          transaction/TransactionCurrentImpl.java,
          transaction/TransactionInitializer.java,
          transaction/TransactionService.java, util/Debug.java,
          util/Environment.java, util/LogKitLoggerFactory.java,
          util/LoggerFactory.java, util/ObjectUtil.java, util/Time.java,
          util/Version.java, util/threadpool/ConsumerTie.java,
          util/threadpool/ThreadPool.java: Joined in changes from the
          CONFIG_FEATURE branch.

2004-04-26  Andre Spiegel  <spiegel@gnu.org>

        * poa/RequestQueue.java:
          (add): Log a warning if the request queue is full.

2004-04-26  Andre Spiegel  <spiegel@gnu.org>

        * poa/RPPoolManager.java:
          (logger): New instance field.  (c'tor): New logger arg, set the
          above field.
          (getProcessor): Log a warning if the thread pool is exhausted.

2004-04-26  Andre Spiegel  <spiegel@gnu.org>

        * poa/RequestController.java:
          (getPoolManager): Pass the logger to the RPPoolManager.

2004-04-26  Andre Spiegel  <spiegel@gnu.org>

        * orb/iiop/ClientIIOPConnection.java:
          (connect, createSocket): Rewritten to use
          jacorb.connection.client.pending_reply_timeout as a timeout for
          connection attempts.  This is done by spawning a separate thread for
          connecting, not with the corresponding TCP/IP socket-level timeout.
          This ensures compatibility with JDKs prior to JDK 1.4.  (Patch by
          Marc Heide.)

2004-04-26  Andre Spiegel  <spiegel@gnu.org>

        * orb/giop/GIOPConnection.java:
          (write): Pass jacorb.connection.client.pending_reply_timeout down to
          the transport layer connect method.

2004-04-24  Andre Spiegel  <spiegel@gnu.org>

        * idl/ValueDecl.java:
          (printClass): When inheriting from an abstract interface, use the
          type name without "Operations" appended.

2004-04-24  Andre Spiegel  <spiegel@gnu.org>

        * idl/Interface.java:
          (abstractInterfaces): Protected instead of private, so that we can
          use it from ValueDecl as well.

2004-04-21  Gerald Brose  <gerald.brose@acm.org>

        * idl/: parser.cup, parser.java, sym.java: added an extra option
          -in <file> to the IDL compiler which will accept files that do not
          end in ".idl"

2004-04-21  Gerald Brose  <gerald.brose@acm.org>

        * idl/: ValueBase.java, parser.cup, parser.java, sym.java: made
          type CORBA:ValueBase usable

2004-04-19  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASClientInterceptor.java: Check for null service
          context value

2004-03-29  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractMessage.java: code cleanup whitespace

2004-03-18  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * util/LogKitLoggerFactory.java:
          (getPriorityForNamedLogger) trim string read from Environment to
          remove trailing spaces.

2004-03-18  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/: engine/AbstractDeliverTask.java,
          engine/AbstractFilterTask.java, engine/AbstractTask.java,
          engine/FilterProxyConsumerTask.java,
          engine/FilterProxySupplierTask.java,
          engine/FilterSupplierAdminTask.java,
          engine/PullFromSupplierTask.java, engine/PushAnyOperation.java,
          engine/PushOperation.java, engine/PushSequenceOperation.java,
          engine/PushStructuredOperation.java,
          engine/PushToConsumerTask.java, engine/RetryException.java,
          engine/RetryStrategy.java, engine/TaskFactory.java,
          engine/TaskProcessor.java,
          engine/TaskProcessorRetryStrategy.java,
          engine/TimerDeliverTask.java, engine/WaitRetryStrategy.java,
          interfaces/MessageConsumer.java, servant/AbstractProxy.java,
          servant/AbstractProxySupplier.java,
          servant/ProxyPullConsumerImpl.java,
          servant/ProxyPullSupplierImpl.java,
          servant/ProxyPushConsumerImpl.java,
          servant/ProxyPushSupplierImpl.java,
          servant/SequenceProxyPullConsumerImpl.java,
          servant/SequenceProxyPullSupplierImpl.java,
          servant/SequenceProxyPushConsumerImpl.java,
          servant/SequenceProxyPushSupplierImpl.java,
          servant/StructuredProxyPullConsumerImpl.java,
          servant/StructuredProxyPullSupplierImpl.java,
          servant/StructuredProxyPushConsumerImpl.java,
          servant/StructuredProxyPushSupplierImpl.java: whitespace

          cleaned up retry mechanism

          added doc

2004-03-18  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/ECProxyPushSupplierImpl.java: whitespace

2004-03-18  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/: AbstractAdmin.java,
          ConsumerAdminTieImpl.java: adapted to EventListener IF

2004-03-18  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/FilterConsumerAdminTask.java: code cleanup

          whitespace

2004-03-18  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/interfaces/: ProxyCreationRequestEventListener.java,
          ProxyEvent.java, ProxyEventListener.java: combined interfaces
          ProxyCreationEventListener and ProxyEventListener

2004-03-18  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelImpl.java: fixed imports

2004-03-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/util/QoSPropertySet.java: removed unused member
          variable

2004-03-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/StructuredEventMessage.java: synchronized access to
          member anyValue_

2004-03-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelImpl.java: code cleanup

2004-03-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java: removed unused member

2004-03-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AnyMessage.java: synchronized access to member
          structuredEventValue_

2004-03-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/ChannelContext.java: removed superfluous code

2004-03-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/: AnyMessage.java, StructuredEventMessage.java:
          added toString method

2004-03-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractMessage.java: whitespace

2004-03-13  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * poa/POA.java:
          (makeDestructionComplete) added whitespace in log statement

2004-03-12  Simon McQueen  <sm@prismtechnologies.com>

        * naming/namemanager/NSTableCellRenderer.java: Fixed compile error.
          Color.blue not Color.BLUE.

2004-03-11  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/parser.cup: Added print unrecognized option to cup file as
          well.

2004-03-05  Gerald Brose  <gerald.brose@acm.org>

        * idl/EnumType.java:
          (parse) changed error message for name clashes

2004-03-05  Gerald Brose  <gerald.brose@acm.org>

        * util/Environment.java:
          (initLogging) after the most recent fix, the default logger would
          never log to file, so fixed that again.

2004-03-04  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASClientInterceptor.java: Handle 1 byte service
          context

2004-03-04  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GSSUPContextSpi.java,
          security/sas/GSSUPCredentialSpi.java,
          security/sas/GSSUPMechFactory.java,
          security/sas/GSSUPNameSpi.java,
          security/sas/SASTargetInterceptor.java, orb/ServantDelegate.java,
          orb/portableInterceptor/ClientInterceptorIterator.java: Debug
          messages

2004-03-04  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/README: information was merged into the programming
          guide

2004-03-04  Gerald Brose  <gerald.brose@acm.org>

        * naming/namemanager/NSTableCellRenderer.java: [no log message]

2004-03-03  Gerald Brose  <gerald.brose@acm.org>

        * naming/: NameServer.java, namemanager/ContextNode.java,
          namemanager/Handler.java, namemanager/NSTable.java,
          namemanager/NSTableModel.java, namemanager/NSTree.java,
          namemanager/NameManager.java, namemanager/ObjectDialog.java: GUI
          enhancements (added shortcuts, e.g) and a bug fix (synchronization
          problem that results in ArrayyOutOfBoundsException when doing an
          unbind)

2004-03-03  Gerald Brose  <gerald.brose@acm.org>

        * util/Environment.java:
          (initLogging) explic call to set log file on logger factory, fix for
          #466

2004-03-03  Gerald Brose  <gerald.brose@acm.org>

        * util/LogKitLoggerFactory.java: new defaultTarget field and
          corresponding code  in getNamedLogger(String name, LogTarget
          target), new method setDefaultLogFile() all used to fix #466 (thnx,
          Simon!)

2004-03-03  Gerald Brose  <gerald.brose@acm.org>

        * util/LoggerFactory.java:
          (setDefaultLogFile) new method, used in fixing #466

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * util/Debug.java:
          (output) log messages with level != WARN were logged with level WARN

          whitespace

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/TaskProcessor.java: javadoc

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/: EventChannelFactoryImpl.java, Main.java:
          (EventChannelFactoryImpl) now extends JacORB specific extension of
          CosNotification.idl. This is a management IF.

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/ChannelContext.java: renamed variables

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/conf/: Configuration.java, Default.java: added new
          properties

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/StructuredEventMessage.java: whitespace

          (startTime_)
          (stopTime_) explicitely set to null before usage

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/TaskProcessor.java:
          (scheduleTimedPushTask) check if MessageConsumer is not disposed
          before scheduling it for delivery

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/SupplierAdminTieImpl.java: javadoc

          renamed member key to id

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/StructuredProxyPullConsumerImpl.java:
          whitespace

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/: servant/ProxyPushSupplierImpl.java,
          SubscriptionManager.java: [no log message]

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/AbstractProxyConsumer.java: QosPropertySet
          has been moved to new package.

          QoS defaults are now managed in class QoSPropertySet

          (checkMessageProperties) dont throw BAD_QOS if Message has
          Start/StopTimeSupported set.

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/: AbstractProxy.java,
          ConsumerAdminTieImpl.java:
          (mapping_filter)
          (lifetime_filter)  return CORBA null ref instead of Java null if no
          filter was set

          renamed member key to id

          QoSPropertySet has been moved to package util

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/AbstractAdmin.java: QosPropertySet has been
          moved to new package.

          QoS defaults are now managed in class QoSPropertySet

          renamed member key to id

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/: queue/EventQueueFactory.java,
          servant/AbstractProxySupplier.java,
          servant/SequenceProxyPushSupplierImpl.java,
          EventChannelImpl.java: QosPropertySet has been moved to new
          package.

          QoS defaults are now managed in class QoSPropertySet

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/ServantFactory.java: removed superfluous
          class

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/: servant/AdminPropertySet.java,
          servant/PropertySet.java, servant/PropertySetListener.java,
          servant/QoSPropertySet.java, util/AdminPropertySet.java,
          util/PropertySet.java, util/PropertySetListener.java,
          util/QoSPropertySet.java: moved to package util

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/interfaces/MessageConsumer.java: added method
          isDisposed

2004-03-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/AbstractDeliverTask.java: added doc

          changed log level

2004-03-03  Simon McQueen  <sm@prismtechnologies.com>

        * util/Environment.java: Fixed comments.

2004-03-01  francisco

        * orb/CDRInputStream.java:
          - Improve debugging info in MARSHAL exceptions.
          - Fix alignment bug in read_codebase(). This bug showed up
            when unmarshaling a valuetype that contains a Java long
            (IDL long long) field was marshaled with codebase info.

2004-02-27  Gerald Brose  <gerald.brose@acm.org>

        * util/Debug.java: (output(Logger logger, int msg_level, Throwable
          e)) added so that stack traces can be output more conveniently from
          our code.

          Also changed a number of output methods so that now the integer log
          priority is actually honored.

2004-02-26  Gerald Brose  <gerald.brose@acm.org>

        * orb/portableInterceptor/ClientRequestInfoImpl.java: (c'tor)
          applied patch from OCI to avoid unchecked cast (?)

2004-02-25  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/filter/: EvaluationContext.java,
          FilterConstraint.java, FilterUtils.java: whitespace

          (setMessage) renamed setMessagea to setMessage

2004-02-25  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/: FilterImpl.java, MappingFilterImpl.java:
          (match)
          (match_structured) match on empty filter should return false

2004-02-25  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/filter/FilterUtils.java:
          (calcConstraintKey) empty domain_name or type_name should be mapped
          to "*". thanks to John Farrell for reporting this bug.

2004-02-25  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/filter/FilterConstraint.java: rootNode_ is null if
          the filter expression was "". this wasn't handled correctly. thanks
          to John Farrell for reporting this bug.

2004-02-25  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/filter/EvaluationResult.java: whitespace

          code cleanup

2004-02-24  David R Robison  <drrobison@openroadsconsulting.com>

        * idl/parser.java: Print unrecognized option

2004-02-24  David R Robison  <drrobison@openroadsconsulting.com>

        * idl/ValueInheritanceSpec.java: Remove redeclaration of Vector v

2004-02-24  Gerald Brose  <gerald.brose@acm.org>

        * orb/Delegate.java:
          (try_rebind) added a line supplied by OCI so that lastFailedIOR is
          reset to null (fixes a location forwarding problem).

2004-02-24  Simon McQueen  <sm@prismtechnologies.com>

        * orb/iiop/ClientIIOPConnection.java:
          (checkSSL): Fixed bug #464.

          SSL should now work if client is configured to require it.

2004-02-24  Simon McQueen  <sm@prismtechnologies.com>

        * security/ssl/sun_jsse/SSLSocketFactory.java: Fixed incorrect
          error message.

2004-02-24  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/: FilterFactoryImpl.java, FilterImpl.java,
          MappingFilterImpl.java: fixed bug reported by John Farrell
          news://news.gmane.org:119/200402241510.49869.Farrell_John_W@cat.com

          an ConstraintExp that contains an empty EventType seq  should behave
          as if EventType {"*", "*"} has been specified.

2004-02-24  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/ConstraintEntry.java: whitespace

          renamed variable

2004-02-23  David R Robison  <drrobison@openroadsconsulting.com>

        * idl/ValueDecl.java: setInheritanceSpec() to getInheritanceSpec()

2004-02-23  Simon McQueen  <sm@prismtechnologies.com>

        * poa/POA.java:
          (_invoke): Beefed up the debug level log output for WrongAdapter
          circumstances.

2004-02-20  Gerald Brose  <gerald.brose@acm.org>

        * idl/StructType.java:
          (printStructClass) fix for bug #462

2004-02-20  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/util/EventTypeUtil.java: Utility Class for CORBA
          EventTypes

2004-02-20  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/: engine/PullFromSupplierTask.java,
          engine/TaskProcessor.java, interfaces/MessageSupplier.java,
          interfaces/TimerEventSupplier.java, servant/AbstractProxy.java,
          servant/AbstractProxyConsumer.java,
          servant/AbstractProxyConsumerI.java,
          servant/AbstractProxySupplier.java,
          servant/ProxyPullConsumerImpl.java,
          servant/ProxyPullSupplierImpl.java,
          servant/ProxyPushConsumerImpl.java,
          servant/ProxyPushSupplierImpl.java,
          servant/SequenceProxyPullConsumerImpl.java,
          servant/SequenceProxyPullSupplierImpl.java,
          servant/SequenceProxyPushConsumerImpl.java,
          servant/SequenceProxyPushSupplierImpl.java,
          servant/StructuredProxyPullConsumerImpl.java,
          servant/StructuredProxyPullSupplierImpl.java,
          servant/StructuredProxyPushConsumerImpl.java,
          servant/StructuredProxyPushSupplierImpl.java: renamed interface
          TimerEventSupplier to MessageSupplier

          moved State Control (connected/disconnected) for Proxies to the
          Baseclasses

          javadoc

          whitespace

2004-02-20  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractMessage.java: javadoc

2004-02-20  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/filter/etcl/AbstractTCLNode.java: javadoc

          whitespace

2004-02-19  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/FilterImpl.java: fixed a bug

          (news://news.gmane.org:119/200402191446.17527.Farrell_John_W@cat.com).Thanks a lot to John Farrell for reporting the bug and providing the
          fix.

          whitespace.

2004-02-18  Gerald Brose  <gerald.brose@acm.org>

        * naming/: Name.java, NameServer.java, NamingContextImpl.java,
          namemanager/ContextNode.java, namemanager/Handler.java,
          namemanager/NSTable.java, namemanager/NSTableModel.java,
          namemanager/NSTree.java, namemanager/NameManager.java,
          namemanager/ObjectDialog.java: Added the bindObject operation to
          the GUI and display contexts in table

2004-02-16  Gerald Brose  <gerald.brose@acm.org>

        * util/Version.java: Version update for 2.1

2004-02-14  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java:
        (shutdown) the estimated shutdown time is now based on the number
        of connected Consumers and Suppliers

        * notification/EventChannelImpl.java:
        added method getNumberOfConnectedClients

        * notification/Main.java: whitespace

2004-02-13  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java: code cleanup

        replaced Vector with ArrayList

        * notification/EventChannelImpl.java: code cleanup

        * notification/EventTypeSet.java: whitespace

        * notification/MessageFactory.java: code cleanup

        whitespace

        * notification/engine/AbstractDeliverTask.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/PushToConsumerTask.java,
        notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ConsumerAdminTieImpl.java,
        notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminTieImpl.java:
        (deliverMessage) ProxySuppliers do not catch exception
        Disconnected anymore. instead the calling PushToConsumerTask
        destroys the ProxySupplier.

        (runPullEvent) may throw Disconnected now too. this causes the
        ProxyConsumer to be destroyed.

        whitespace

        * notification/interfaces/TimerEventSupplier.java: added dispose
        operation so that dispose() can be called if pull operation raises
        Disconnected

        * notification/interfaces/MessageConsumer.java:
        (deliverMessage) changed signature. push operations may raise
        Disconnected not NotConnected.

        * notification/engine/TaskProcessor.java: whitespace

2004-02-13  Gerald Brose  <gerald.brose@acm.org>

        * idl/Interface.java:  comment change only

2004-02-13  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/EnumType.java, idl/Interface.java: Correct accessor

        * idl/TypeMap.java: printStackTrace->getLogger().debug

        * idl/JacIDL.java: Make the error output consistent

        * idl/lexer.java: Removed some printStackTrace

        * idl/parser.cup, idl/parser.java, idl/sym.java: Updated doc and
        regenerated parser.

2004-02-13  Gerald Brose  <gerald.brose@acm.org>

        * idl/parser.cup: renamed j2me flag to cldc10

2004-02-13  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractMessage.java: organized imports

2004-02-13  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/GlobalInputStream.java, idl/ScopedName.java, idl/build.xml,
        idl/parser.cup, idl/parser.java, idl/sym.java: Remove deprecated
        -i option on the compiler. Updated docs.

2004-02-13  Nicolas Noffke  <nicolas.noffke@web.de>

        * security/sas/SASClientInterceptor.java:
        (receive_reply, receive_exception) fixed bug: calling
        ri.get_reply_service_context() instead of
        ri.get_request_service_context()

2004-02-13  Simon McQueen  <sm@prismtechnologies.com>

        * orb/IIOPAddress.java (equals): Fix for out of memory error
        caused by using object equality rather than .equals()

2004-02-12  Gerald Brose  <gerald.brose@acm.org>

        * util/Version.java: new intermediate date

        * orb/giop/ReplyPlaceholder.java:
        (timeout) method tentatively commented out, seems not to get used
        by any code

        * orb/giop/GIOPConnectionManager.java: use new logging

        * orb/giop/GIOPConnection.java:
        (receiveMessages) added returning message buffer to buffer manager
        in two error cases to avoid potential memory leakage

        * idl/parser.java, idl/sym.java: *** empty log message ***

        * idl/EnumType.java: (printEnumClass) j2me behavior

        * idl/Interface.java:
        (printStub) new code supplied by Nokia for J2ME compatibility

        * idl/parser.cup: new option -j2me

2004-02-11  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/PushToConsumerTask.java: whitespace

        reset errorcounter after successful delivery

        * notification/engine/TaskProcessor.java: whitespace

        added doc

        * notification/engine/FilterConsumerAdminTask.java: code cleanup

        * notification/engine/AbstractTaskPool.java: whitespace

        * notification/engine/AbstractFilterTask.java: doc

        * notification/engine/AbstractDeliverTask.java:
        renamed variable target_ to messageConsumer_

        removed commented out code

2004-02-11  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASTargetInterceptor.java: _is_a and _non_existent
        fix - this helps with the Name service

        * security/sas/SASClientInterceptor.java: _is_a fix

2004-02-09  Gerald Brose  <gerald.brose@acm.org>

        * orb/giop/ServerGIOPConnection.java:
        (close) new method to override super class' close and to
        unregister the connection from its manager. Fixes #456 and #458

        * orb/portableInterceptor/CodecFactoryImpl.java: uses new
        CodecImpl implementation

2004-02-09  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ConsumerAdminTieImpl.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminTieImpl.java,
        notification/servant/AbstractAdmin.java: added support for
        operations offer_change and subscription_change

        * notification/EventChannelImpl.java,
        notification/EventTypeSet.java, notification/OfferManager.java,
        notification/SubscriptionManager.java: support for operations
        offer_change and subscription_change

        * notification/MessageFactory.java: *** empty log message ***

        * notification/EventChannelFactoryImpl.java: modified log message

        * notification/ChannelContext.java: whitespace

        * notification/AnyMessage.java: replaced string literal with constant

2004-02-09  Gerald Brose  <gerald.brose@acm.org>

        * orb/IIOPAddress.java: cosmetics (coding style)

2004-02-09  Andre Spiegel  <spiegel@gnu.org>

        * orb/IIOPAddress.java: Revert back to version 1.7, but change
        equals() and hashCode() to use the IP address for all comparisons,
        not the host name.

2004-02-08  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/MessageFactory.java: an Any that is wrapped in a
        StructuredEvent is extracted by the Channel before its processed
        further.

        Similarly, a StructuredEvent wrapped in an Any is extracted before
        further processing.

        See page 2-11 in the Spec.

        * notification/FilterManager.java, notification/KeyedListEntry.java:
        removed superfluous class KeyedListEntry

        * notification/AbstractMessage.java, notification/AnyMessage.java,
        notification/StructuredEventMessage.java:
        (match) moved method to superclass

        * notification/CollectionsWrapper.java: whitespace

        * notification/engine/TaskProcessor.java: renamed method
        processEventInternal to processMessageInternal

        * notification/engine/FilterProxySupplierTask.java: replaced
        Hashtable with HashMap

2004-02-06  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/portableInterceptor/ClientRequestInfoImpl.java: Logger name
        match other interceptor logger

2004-02-06  Gerald Brose  <gerald.brose@acm.org>

        * orb/portableInterceptor/CodecImpl.java: replaces old
        Codec_CDR_1_0_Impl

2004-02-06  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASTargetInterceptor.java: Debug messages

2004-02-06  Gerald Brose  <gerald.brose@acm.org>

        * orb/ORB.java: added policyManager field and getPolicyManager()
        operation

        * orb/Delegate.java:
        (get_client_policy) now also checks for policies at the ORB-level

        * orb/policies/PolicyManager.java, orb/policies/PolicyUtil.java:
        *** empty log message ***

2004-02-05  Nick Cross  <nick.cross@prismtechnologies.com>

        * naming/NamingContextImpl.java, orb/Delegate.java,
        orb/giop/ClientConnection.java,
        orb/giop/ClientConnectionManager.java,
        orb/giop/GIOPConnection.java, orb/iiop/ClientIIOPConnection.java,
        orb/iiop/IIOPConnection.java,
        orb/standardInterceptors/SASComponentInterceptor.java,
        proxy/ProxyImpl.java, security/sas/GSSUPContextSpi.java,
        security/sas/GSSUPNameSpi.java,
        security/sas/GSSUPProviderInitializer.java,
        security/sas/GssUpContext.java, security/sas/JsseContext.java,
        security/sas/KerberosContext.java, security/sas/NullContext.java,
        security/sas/SASClientInterceptor.java,
        security/sas/SASInitializer.java,
        security/sas/SASTargetInterceptor.java,
        util/threadpool/ThreadPool.java:
        org.jacorb.util.Debug.getNamedLogger -> Debug.getNamedLogger

2004-02-05  David R Robison  <drrobison@openroadsconsulting.com>

        * orb/iiop/ClientIIOPConnection.java: AdironTest TLS_CSIv2_UP UP -
        test now working

2004-02-05  Nick Cross  <nick.cross@prismtechnologies.com>

        * security/sas/ATLASPolicyImpl.java,
        security/sas/GSSUPContextSpi.java,
        security/sas/GSSUPMechFactory.java,
        security/sas/GSSUPNameSpi.java,
        security/sas/GSSUPProviderInitializer.java,
        security/sas/GssUpContext.java, security/sas/ISASContext.java,
        security/sas/JsseContext.java, security/sas/KerberosContext.java,
        security/sas/NullContext.java,
        security/sas/SASClientInterceptor.java,
        security/sas/SASInitializer.java, security/sas/SASPolicyImpl.java,
        security/sas/SASTargetInterceptor.java: Whitespace only - tab
        removal

2004-02-05  David R Robison  <drrobison@openroadsconsulting.com>

        * orb/util/PrintIOR.java: Print SAS target name

2004-02-05  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: Removed stacktrace

        * imr/ServerStartupDaemonImpl.java: printStackTrace -> Debug.output

2004-02-05  David R Robison  <drrobison@openroadsconsulting.com>

        * orb/util/PrintIOR.java: tabs to spaces

        * security/sas/GSSUPNameSpi.java, security/sas/GssUpContext.java,
        security/sas/NullContext.java: AdironTest IIOP_CSIv2 Basic - test
        now works

        * orb/util/PrintIOR.java: removed reference to org.ietf.jgss

2004-02-05  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/util/PrintIOR.java: Whitespace only

2004-02-05  Simon McQueen  <sm@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: Fixed use of request
        stream header target for all fomats of TargetAddress.

        * orb/giop/LocateRequestInputStream.java,
        orb/giop/RequestInputStream.java: Removed use of
        ParsedIOR.unfiyTargetAddress which was coercing all
        TargetAddresses to GIOP 1.0 form.

        * orb/dsi/ServerRequest.java (Constructor): Changed initialisation
        of object_key attribute for general case TargetAddress.

        * orb/ParsedIOR.java (unfiyTargetAddress, extractObjectKey): First
        method removed and replaced by the second.  This allows the
        extraction of an object key from a TargetAddress without modifying
        the TargetAddress object.  Now works for all profiles rather than
        just IIOP.

2004-02-05  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/standardInterceptors/SASComponentInterceptor.java:
        Whitespace only (tab removal)

2004-02-04  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/ServantDelegate.java,
        orb/portableInterceptor/ServerRequestInfoImpl.java: Fix for bug
        #444: pass non-null arguments to _all_interfaces().

2004-02-04  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GSSUPNameSpi.java, security/sas/GssUpContext.java,
        security/sas/ISASContext.java, security/sas/JsseContext.java,
        security/sas/KerberosContext.java,
        security/sas/SASClientInterceptor.java,
        security/sas/SASTargetInterceptor.java: Interoperability Tests
        with Adiron

        * orb/util/PrintIOR.java: SAS tag components

2004-02-04  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/portableInterceptor/InterceptorManager.java: WeakHashMap
        currents (from Threads to PICurrent instances) replaced by a
        ThreadLocal variable (piCurrent). Before this change, multiple
        PICurrent instances could somehow be associated with the same
        thread. (This was happening in JBoss, which uses a PICurrent for
        the transaction context.)

2004-02-04  Gerald Brose  <gerald.brose@acm.org>

        * util/Version.java: changed to 2.1 beta (CVS)

        * naming/ContextLister.java: removed ^M's...

        * idl/JacIDL.java: changed default debug level to 1

        * orb/IIOPAddress.java: fix for bug# 453: rely internally on
        java.net.InetAddress as the representation, especially for
        equals() and hashCode().

        * orb/Delegate.java: minor logging changes

        * orb/giop/GIOPConnection.java: more logger changes

        * orb/giop/ClientConnection.java: added about four words of
        javadoc comment

        * orb/iiop/IIOPProfile.java:
        (equals) compare only the primaryAddress (as in hashCode()!)

        * util/threadpool/ThreadPool.java, orb/giop/ClientConnection.java:
        updates for new logging framework

        * orb/Delegate.java: logging code changed

        * orb/ORB.java: first step towards policy manager, new field added

        * orb/giop/ClientConnectionManager.java: updates for new logging
        framework

        * orb/giop/GIOPConnection.java:
        (readMessage) updates for new logging framework

        * orb/iiop/IIOPConnection.java: updated logging to new logger
        framework

        * orb/iiop/ClientIIOPConnection.java: updated logging to logger
        framework

2004-02-03  Francisco Reverbel  <reverbel@ime.usp.br>

        * util/Environment.java: Revert change of the "jacorb.implname"
        property (from "jacorb.impl_name" back to
        "jacorb.implname"). Applications that rely on this property were
        throwing OBJECT_NOT_EXIST ("object key not previously generated!")
        due to the implname not being set.

2004-02-02  Gerald Brose  <gerald.brose@acm.org>

        * idl/ValueDecl.java:
        (print) added check so that no code is generated for included
        definitions

2004-02-01  Francisco Reverbel  <reverbel@ime.usp.br>

        * util/Environment.java: Property name changed back to
        "jacorb.interop.strict_check_on_tc_creation"
        (instead of "jacorb.strict_check_on_tc_creation"), as the name
        with "interop" appears in the regression tests and in the
        .jacorb.properties template.

        * poa/RequestProcessor.java: Instead of leaving the wait loop, a
        RequestProcessor thread now ignores InterruptedException while it
        waits for a new task.

2004-02-01  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASTargetInterceptor.java,
        orb/portableInterceptor/InterceptorManager.java: SAS Intrerceptors

2004-01-30  Gerald Brose  <gerald.brose@acm.org>

        * idl/IdlSymbol.java, idl/Literal.java, idl/build.xml,
        idl/fixed_token.java, idl/lexer.java, idl/parser.cup,
        idl/parser.java, idl/runtime/char_token.java,
        idl/runtime/double_token.java, idl/runtime/float_token.java,
        idl/runtime/int_token.java, idl/runtime/long_token.java,
        idl/runtime/lr_parser.java, idl/runtime/str_token.java,
        idl/runtime/symbol.java, idl/runtime/token.java,
        idl/runtime/virtual_parse_stack.java, idl/str_token.java,
        idl/sym.java: Incorporated Java_CUP runtime classes into the
        JacORB package name space to avoid clashes with newer java_cup
        libararies used elsewhere.

2004-01-30  Nick Cross  <nick.cross@prismtechnologies.com>

        * naming/NamingContextImpl.java, orb/CDROutputStream.java,
        poa/POAManagerMonitorImpl.java, poa/POAMonitorImpl.java,
        util/Debug.java, util/Environment.java: As Alphonse has made
        jacorb.log.default.log_pattern configurable removed
        jacorb.log.timestamp. Simplified environment more.

2004-01-30  David R Robison  <drrobison@openroadsconsulting.com>

        * orb/portableInterceptor/InterceptorManager.java:
        Let PICcurrent pass to target methods

2004-01-30  Nick Cross  <nick.cross@prismtechnologies.com>

        * util/LogKitLoggerFactory.java: Whitespace only

2004-01-30  Nicolas Noffke  <nicolas.noffke@web.de>

        * security/sas/SASTargetInterceptor.java:
        (constructor) assigning value of useSsl from Boolean.valueOf()
        instead of Boolean.getBoolean()

2004-01-29  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxyConsumer.java,
        notification/servant/AbstractProxyConsumerI.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/AdminPropertySet.java,
        notification/servant/ConsumerAdminTieImpl.java,
        notification/servant/ECProxyPullConsumerImpl.java,
        notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushConsumerImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/ManageableServant.java,
        notification/servant/PropertySet.java,
        notification/servant/PropertySetListener.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/QoSPropertySet.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/ServantFactory.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/SupplierAdminTieImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java:
        cleanup.

        make better use of inheritance hierarchy.
        fixed a wrong value returned by Proxy.MyType().

        rewrote QoS Settings Management.

        * notification/queue/EventQueueFactory.java:
        replaced references to PropertyManager with QoSPropertySet

        * notification/interfaces/FilterStage.java: renamed method

        * notification/engine/TaskProcessor.java:
        set Name for ClockDaemon Thread

        * notification/engine/TaskFactory.java,
        notification/engine/PushToConsumerTask.java: whitespace

        * notification/engine/FilterProxySupplierTask.java: added doc

        whitespace

        * notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterConsumerAdminTask.java: renamed method

        * notification/conf/Configuration.java,
        notification/conf/Default.java: added properties:
        "jacorb.notification.consumer.max_number"
        "jacorb.notification.supplier.max_number"
        "jacorb.notification.start_time_supported"
        "jacorb.notification.stop_time_supported"
        "jacorb.notification.proxy.destroy_causes_disconnect"

        * notification/EventChannelImpl.java,
        notification/EventTypeIdentifier.java,
        notification/FilterFactoryImpl.java, notification/FilterImpl.java,
        notification/FilterManager.java, notification/KeyedListEntry.java,
        notification/Main.java, notification/MessageFactory.java,
        notification/StructuredEventMessage.java: further code cleanup

        * notification/EventChannelFactoryImpl.java: cleanup

        * notification/ConstraintEntry.java: added method getConstraintKey.

        * notification/ChannelContext.java: cleanup

        * notification/ApplicationContext.java: removed references to
        removed classes

        * notification/AbstractMessage.java: modified log output

        * notification/properties.html, notification/README.PROPERTIES:
        merged into ProgrammingGuide

        * notification/PropertyManager.java,
        notification/PropertyValidator.java: removed

        * notification/util/TaskExecutor.java: changed log output

2004-01-28  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/ATLASPolicyFactory.java,
        security/sas/ATLASPolicyImpl.java, security/sas/GssUpContext.java,
        security/sas/ISASContext.java, security/sas/JsseContext.java,
        security/sas/KerberosContext.java,
        security/sas/SASClientInitializer.java,
        security/sas/SASClientInterceptor.java,
        security/sas/SASInitializer.java,
        security/sas/SASPolicyFactory.java,
        security/sas/SASPolicyImpl.java,
        security/sas/SASTargetInitializer.java,
        security/sas/SASTargetInterceptor.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SASComponentInterceptor.java: SASPolicy

2004-01-28  Andre Spiegel  <spiegel@gnu.org>

        * orb/iiop/IIOPListener.java (createEndPointProfile): Make the
        IIOPAddress from either the symbolic or the numeric host name,
        depending on what we need later (jacorb.dns.enable).  Fix for bug
        #447.

2004-01-28  David R Robison  <drrobison@openroadsconsulting.com>

        * util/LogKitLoggerFactory.java: Use text for debug levels

2004-01-28  Nicolas Noffke  <nicolas.noffke@web.de>

        * orb/giop/GIOPConnection.java:
        removed debug code that unintentionally got into my last commit

        * orb/giop/BiDirConnectionClientInterceptor.java:
        (fix for bug #449) non bidir connections will have their request
        listener replaced if necessary

        * orb/giop/ClientConnection.java:
        (fix for bug #449) added method getGIOPConnection() so the
        BiDirConnectionClientInterceptor gets access to the GIOPConnection

        * orb/giop/GIOPConnection.java:
        (fix for bug #449) made getRequestListener() protected so it can
        be accessed by the BiDirConnectionClientInterceptor.

2004-01-26  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * util/LogKitLoggerFactory.java: PatternFormat used by console
        logger can be set by new property jacorb.log.default.log_pattern

        (getNamedLogger) if no priority is set for the requested logger use
        the priority of the parent logger.

        (getNamedLogger) null LogTarget defaults to consoleTarget

2004-01-24  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/properties.html: Properties as HTML

2004-01-23  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/util/AbstractObjectPool.java: removed debugging code

        * notification/filter/FilterConstraint.java: removed unnecessary
        Reference to class

        * notification/AbstractAdmin.java,
        notification/AbstractMessage.java,
        notification/AbstractProxy.java,
        notification/AbstractProxySupplier.java,
        notification/AnyMessage.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java,
        notification/ConfigurableProperties.java,
        notification/Constants.java, notification/ConstraintEntry.java,
        notification/ConsumerAdminTieImpl.java,
        notification/EvaluationContext.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/FilterFactoryImpl.java, notification/FilterImpl.java,
        notification/FilterManager.java, notification/MessageFactory.java,
        notification/MessageUtils.java,
        notification/ProxyPullConsumerImpl.java,
        notification/ProxyPullSupplierImpl.java,
        notification/ProxyPushConsumerImpl.java,
        notification/ProxyPushSupplierImpl.java,
        notification/README.PROPERTIES,
        notification/SequenceProxyPullConsumerImpl.java,
        notification/SequenceProxyPullSupplierImpl.java,
        notification/SequenceProxyPushConsumerImpl.java,
        notification/SequenceProxyPushSupplierImpl.java,
        notification/StructuredEventMessage.java,
        notification/StructuredProxyPullConsumerImpl.java,
        notification/StructuredProxyPullSupplierImpl.java,
        notification/StructuredProxyPushConsumerImpl.java,
        notification/StructuredProxyPushSupplierImpl.java,
        notification/SupplierAdminTieImpl.java, notification/build.xml,
        notification/conf/Configuration.java,
        notification/conf/Default.java,
        notification/engine/AbstractDeliverTask.java,
        notification/engine/AbstractFilterTask.java,
        notification/engine/AbstractTask.java,
        notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/PushToConsumerTask.java,
        notification/engine/TaskFactory.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TimerDeliverTask.java,
        notification/filter/ComponentName.java,
        notification/filter/DynamicEvaluator.java,
        notification/filter/EvaluationContext.java,
        notification/filter/EvaluationException.java,
        notification/filter/EvaluationResult.java,
        notification/filter/FilterConstraint.java,
        notification/filter/FilterUtils.java,
        notification/filter/ParseException.java,
        notification/filter/RuntimeVariable.java,
        notification/filter/etcl/AbstractTCLNode.java,
        notification/filter/etcl/AbstractTCLVisitor.java,
        notification/filter/etcl/AndOperator.java,
        notification/filter/etcl/ArrayOperator.java,
        notification/filter/etcl/AssocOperator.java,
        notification/filter/etcl/BoolValue.java,
        notification/filter/etcl/ComponentPositionOperator.java,
        notification/filter/etcl/CurrentTimeNode.java,
        notification/filter/etcl/DefaultOperator.java,
        notification/filter/etcl/DivOperator.java,
        notification/filter/etcl/DomainNameShorthandNode.java,
        notification/filter/etcl/DotOperator.java,
        notification/filter/etcl/ETCLComponentName.java,
        notification/filter/etcl/EqOperator.java,
        notification/filter/etcl/EventNameShorthandNode.java,
        notification/filter/etcl/ExistOperator.java,
        notification/filter/etcl/GtOperator.java,
        notification/filter/etcl/GteOperator.java,
        notification/filter/etcl/IdentValue.java,
        notification/filter/etcl/ImmutableEvaluationResult.java,
        notification/filter/etcl/ImplicitOperator.java,
        notification/filter/etcl/ImplicitOperatorNode.java,
        notification/filter/etcl/InOperator.java,
        notification/filter/etcl/LtOperator.java,
        notification/filter/etcl/LteOperator.java,
        notification/filter/etcl/MessageUtils.java,
        notification/filter/etcl/MinusOperator.java,
        notification/filter/etcl/MultOperator.java,
        notification/filter/etcl/NeqOperator.java,
        notification/filter/etcl/NotOperator.java,
        notification/filter/etcl/NumberValue.java,
        notification/filter/etcl/OrOperator.java,
        notification/filter/etcl/PlusOperator.java,
        notification/filter/etcl/PropertyShorthandNode.java,
        notification/filter/etcl/RuntimeVariableNode.java,
        notification/filter/etcl/StaticTypeChecker.java,
        notification/filter/etcl/StaticTypeException.java,
        notification/filter/etcl/StringValue.java,
        notification/filter/etcl/SubstrOperator.java,
        notification/filter/etcl/TCLCleanUp.java,
        notification/filter/etcl/TypeNameShorthandNode.java,
        notification/filter/etcl/UnionPositionOperator.java,
        notification/filter/etcl/VisitorException.java,
        notification/filter/etcl/grammar/CommonTokenTypes.txt,
        notification/filter/etcl/grammar/comp-lexer.g,
        notification/filter/etcl/grammar/tcl-lexer.g,
        notification/filter/etcl/grammar/tcl.g,
        notification/interfaces/AdminEvent.java,
        notification/interfaces/FilterStage.java,
        notification/interfaces/Message.java,
        notification/interfaces/ProxyCreationRequestEvent.java,
        notification/interfaces/ProxyDisposedEvent.java,
        notification/interfaces/ProxyEvent.java,
        notification/servant/AbstractAdmin.java,
        notification/servant/AbstractProxy.java,
        notification/servant/AbstractProxySupplier.java,
        notification/servant/ConsumerAdminTieImpl.java,
        notification/servant/ECProxyPullConsumerImpl.java,
        notification/servant/ECProxyPullSupplierImpl.java,
        notification/servant/ECProxyPushConsumerImpl.java,
        notification/servant/ECProxyPushSupplierImpl.java,
        notification/servant/FilterStageListManager.java,
        notification/servant/ManageableServant.java,
        notification/servant/ProxyPullConsumerImpl.java,
        notification/servant/ProxyPullSupplierImpl.java,
        notification/servant/ProxyPushConsumerImpl.java,
        notification/servant/ProxyPushSupplierImpl.java,
        notification/servant/SequenceProxyPullConsumerImpl.java,
        notification/servant/SequenceProxyPullSupplierImpl.java,
        notification/servant/SequenceProxyPushConsumerImpl.java,
        notification/servant/SequenceProxyPushSupplierImpl.java,
        notification/servant/ServantFactory.java,
        notification/servant/StructuredProxyPullConsumerImpl.java,
        notification/servant/StructuredProxyPullSupplierImpl.java,
        notification/servant/StructuredProxyPushConsumerImpl.java,
        notification/servant/StructuredProxyPushSupplierImpl.java,
        notification/servant/SupplierAdminTieImpl.java: general cleanup to
        simplify dependencies

        moved Admins and Proxies to package notification.servant

        moved Filter related Stuff to package notification.filter

        moved AST classes in package notification.filter.etcl

        added javadoc

        whitespace

        * notification/queue/EventQueueFactory.java:
        replaced Hashtable by HashMap

        whitespace

        * notification/queue/BoundedPriorityEventQueue.java,
        notification/queue/BoundedDeadlineEventQueue.java: replaced Vector
        by ArrayList

        whitespace

        * notification/queue/AbstractBoundedEventQueue.java: whitespace

        * notification/util/WildcardMap.java: replaced Vector by ArrayList

        added javadoc

        added whitespace

2004-01-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/ConstraintEntry.java,
        notification/EventChannelFactoryImpl.java,
        notification/FilterImpl.java,
        notification/SequenceProxyPushSupplierImpl.java,
        notification/StructuredProxyPushSupplierImpl.java,
        notification/SupplierAdminTieImpl.java:
        (*) renamed getConstraintEvaluator -> getFilterConstraint

        * notification/queue/EventQueue.java: cleanup, fixed javadoc

        * notification/queue/QueueUtil.java,
        notification/queue/EventQueueFactory.java: cleanup, added private
        ctor

        * notification/util/TaskExecutor.java: cleanup

        * notification/util/TaskExecutor.java: cosmetics

        * notification/engine/TaskProcessor.java,
        notification/engine/TimerDeliverTask.java,
        notification/engine/AbstractTask.java,
        notification/engine/AbstractDeliverTask.java,
        notification/AbstractProxySupplier.java: whitespace

2004-01-16  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java: commented out
        references to not yet checked in classes

        * notification/README.PROPERTIES: added new property
        jacorb.notification.proxysupplier.threadpolicy

        * notification/EvaluationContext.java:
        (*) removed references to removed class ResultExtractor

        * notification/build.xml: added target clean.classes that only
        cleans compiled classes and leaves generated sources (antlr)
        intact.

        * notification/AbstractAdmin.java,
        notification/AbstractMessage.java,
        notification/AbstractProxy.java,
        notification/AbstractProxySupplier.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java,
        notification/ConfigurableProperties.java,
        notification/Constants.java,
        notification/ConsumerAdminTieImpl.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java, notification/FilterImpl.java,
        notification/MessageFactory.java, notification/MessageUtils.java,
        notification/ProxyPullConsumerImpl.java,
        notification/ProxyPullSupplierImpl.java,
        notification/ProxyPushConsumerImpl.java,
        notification/ProxyPushSupplierImpl.java,
        notification/SequenceProxyPullConsumerImpl.java,
        notification/SequenceProxyPullSupplierImpl.java,
        notification/SequenceProxyPushSupplierImpl.java,
        notification/StructuredEventMessage.java,
        notification/StructuredProxyPullConsumerImpl.java,
        notification/StructuredProxyPullSupplierImpl.java,
        notification/StructuredProxyPushConsumerImpl.java,
        notification/StructuredProxyPushSupplierImpl.java,
        notification/SupplierAdminTieImpl.java:
        (*) reflect changes in package interfaces and util cleanup

        (AbstractAdmin) renamed getThisRef to getCorbaRef

        (AbstractProxy) renamed getThisRef to getCorbaRef

        * notification/engine/AbstractDeliverTask.java,
        notification/engine/AbstractFilterTask.java,
        notification/engine/AbstractTask.java,
        notification/engine/AbstractTaskPool.java,
        notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/PushToConsumerTask.java,
        notification/engine/Task.java,
        notification/engine/TaskConfigurator.java,
        notification/engine/TaskErrorHandler.java,
        notification/engine/TaskFactory.java,
        notification/engine/TaskFinishHandler.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TimerDeliverTask.java:
        (Task) remove superfluous interface Task

        (TaskErrorHandler) remove superfluous interface
        TaskErrorHandler. method handleTaskError is moved to AbstractTask

        (TaskFinishHandler) remove superfluous interface TaskFinishHandler

        (*Task) simplified structure and control flow

        (*) reflect changes in package interfaces

        * notification/util/AbstractObjectPool.java:
        (c'tor) added parameter name

        (various) use parameter name during logging

        * notification/util/TaskExecutor.java, notification/util/ThreadPool.java:
        renamed class ThreadPool to TaskExecutor

        * notification/interfaces/EventConsumer.java,
        notification/interfaces/FilterStage.java,
        notification/interfaces/Message.java,
        notification/interfaces/MessageConsumer.java: renamed
        EventConsumer to MessageConsumer

        (MessageConsumer) added Method getExecutor

        * notification/MappingFilterImpl.java: cleanup, cosmetics

        * notification/Main.java: cosmetics

2004-01-16  Nicolas Noffke  <nicolas.noffke@web.de>

        * util/Environment.java: removed unused members, cleaned up
        readValue[s] methods

2004-01-16  Gerald Brose  <gerald.brose@acm.org>

        * orb/ORB.java:
        (getReference) changed repId to
        "IDL:omg.org/CORBA/Object:1.0" (org and omg were the wrong way
        around!)

        * orb/ParsedIOR.java:
        (createObjectIOR) changed repId to
        "IDL:omg.org/CORBA/Object:1.0" (org and omg were the wrong way
        around!)

2004-01-15  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/AliasTypeSpec.java, idl/ArrayDeclarator.java,
        idl/ArrayTypeSpec.java, idl/Case.java, idl/ConstDecl.java,
        idl/Definition.java, idl/Definitions.java, idl/ElementSpec.java,
        idl/EnumType.java, idl/Environment.java, idl/FixedPointType.java,
        idl/GlobalInputStream.java, idl/IdlSymbol.java,
        idl/Interface.java, idl/InterfaceBody.java, idl/JacIDL.java,
        idl/MemberList.java, idl/Method.java, idl/Module.java,
        idl/OpDecl.java, idl/ParamDecl.java, idl/PrimaryExpr.java,
        idl/RaisesExpr.java, idl/ScopedName.java, idl/SequenceType.java,
        idl/StructType.java, idl/TypeDeclaration.java, idl/TypeMap.java,
        idl/TypeSpec.java, idl/UnionType.java, idl/Value.java,
        idl/ValueAbsDecl.java, idl/ValueBoxDecl.java, idl/ValueDecl.java,
        idl/lexer.java, idl/parser.cup, idl/parser.java, idl/sym.java:
        Removed commented out code. Cleaned up exception
        propogation. System.out/err->logger.

        * idl/AliasTypeSpec.java, idl/ArrayDeclarator.java,
        idl/ArrayTypeSpec.java, idl/ConstExprEvaluator.java,
        idl/ConstrTypeSpec.java, idl/ExceptionHolderTypeSpec.java,
        idl/IdlSymbol.java, idl/InterfaceBody.java, idl/Literal.java,
        idl/Member.java, idl/NameTable.java, idl/ObjectTypeSpec.java,
        idl/ReplyHandlerTypeSpec.java, idl/TemplateTypeSpec.java,
        idl/TypeCodeTypeSpec.java, idl/VectorType.java: Whitespace only

2004-01-15  Simon McQueen  <sm@prismtechnologies.com>

        * orb/CDROutputStream.java: Fixed message in marshal exception.

        Thanks to Timothy Wall for supplying the fix.

2004-01-14  Andre Spiegel  <spiegel@gnu.org>

        * orb/util/PrintIOR.java (printAlternateAddress): New method.
        (printTaggedComponents): Use it.

2004-01-14  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/OpDecl.java, idl/GlobalInputStream.java,
        idl/ScopedName.java, idl/TypeDeclaration.java, idl/TypeSpec.java,
        idl/Value.java: Whitespace only

2004-01-14  Nicolas Noffke  <nicolas.noffke@web.de>

        * util/Environment.java:
        (readValues) fix for bug #442
        jacorb.connection.client.pending_reply_timeout wasn't read in
        because the wrong readValue() method was used.

2004-01-12  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/giop/ClientConnection.java: Whitespace only

2004-01-12  Simon McQueen  <sm@prismtechnologies.com>

        * idl/JacIDL.java: Changed format of i2jpackage nested element
        from: <i2jpackage>x:y<i2jpackage> to <i2jpackage names="x:y"/> to
        allow for variable substitution.

        This fixes bug #437. Thanks to Peter Kanis for the report and fix.

2004-01-12  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/giop/CodeSet.java, orb/util/PingObject.java: Whitespace only

2004-01-09  Nick Cross  <nick.cross@prismtechnologies.com>

        * poa/POA.java, poa/POAMonitorImpl.java: Whitespace only

2004-01-07  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/giop/ClientGIOPConnection.java,
        orb/giop/GIOPConnection.java, orb/giop/ServerGIOPConnection.java:
        Change protection levels; use inheritance hierarchy better.

        * orb/CDROutputStream.java, orb/giop/MessageOutputStream.java:
        Remove getInternalBuffer call; use inheritance instead.

        * orb/CDRInputStream.java, proxy/ProxyImpl.java:
        Rename getBuffer to getBufferCopy to match CDROutputStream

        * util/Environment.java: Strings final

        * orb/http/ServerConnection.java,
        orb/standardInterceptors/SASComponentInterceptor.java: CDRStreams
        - normalise close/release

2004-01-06  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/Delegate.java: Error handling

        * orb/giop/ClientConnection.java,
        orb/giop/ClientConnectionManager.java: Keep close in clientconnmgr

        * orb/CDRInputStream.java, orb/CDROutputStream.java,
        orb/giop/MessageOutputStream.java,
        orb/giop/ServiceContextTransportingOutputStream.java,
        orb/portableInterceptor/Codec_CDR_1_0_Impl.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/standardInterceptors/SSLComponentInterceptor.java: CDRStreams
        - normalise close/release

        * poa/RequestProcessor.java: Better error

        * poa/POA.java, poa/RequestQueue.java: Whitespace only

        * orb/Any.java: Minor optimization save creating new Boolean objects

        * idl/AliasTypeSpec.java, idl/ArrayTypeSpec.java,
        idl/ConstDecl.java, idl/EnumType.java, idl/Environment.java,
        idl/FixedPointType.java, idl/Interface.java,
        idl/SequenceType.java, idl/StructType.java, idl/UnionType.java,
        idl/ValueAbsDecl.java, idl/ValueBoxDecl.java: Remove -jdk14
        option (now outputs a warning rather than forcing an error).

        * idl/parser.cup, idl/parser.java, idl/sym.java: Remove -jdk14
        option (now outputs a warning rather than forcing an error) and
        updated year string.

2004-01-06  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GssUpContext.java: SAS Documentation

2004-01-05  Gerald Brose  <gerald.brose@acm.org>

        * Version 2.0 GA released.

        * orb/portableInterceptor/IORInfoExt.java: fixed typo in javadoc tag

        * orb/portableInterceptor/IORInfoImpl.java:
        fixed typo in in javadoc tag

        * idl/parser.java, idl/sym.java: *** empty log message ***

2004-01-05  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GssUpContext.java: Updates GssUp demo files

2004-01-05  Gerald Brose  <gerald.brose@acm.org>

        * idl/parser.cup: remove -global-import option, updated -help
        output, changed order of inserting vector elements in switch_body
        rule (preserves order of IDL union cases in the generated code).

        * util/LogKitLoggerFactory.java: changes in comments

        * util/Version.java: update for 2.0 GA

        * util/Environment.java: minor cosmetics

2004-01-03  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java (set_policy_override): Remove code that
        recreates the ParsedIOR each time, because that makes it point to
        the local POA instead of the remote one.  Fix for bug 408.

        * util/Environment.java (init): Made public so that we can call it
        from the regression suite.

2004-01-02  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/giop/LocateRequestInputStream.java,
        orb/giop/ReplyInputStream.java: Error->Corba Exception and correct
        finalize signature.

        * util/Environment.java, orb/dsi/ServerRequest.java:
        Error->Corba Exception

        * orb/ORB.java: Better error message

2004-01-02  Andre Spiegel  <spiegel@gnu.org>

        * poa/AOM.java, poa/Current.java, poa/POA.java,
        poa/POAManager.java, poa/RPPoolManager.java,
        poa/RequestController.java: Revert collections back to JDK 1.1,
        since synchronization is important for some of them.

2004-01-01  Gerald Brose  <gerald.brose@acm.org>

        * idl/parser.cup, idl/parser.java, idl/sym.java: new
        unchecked_narrow option

        * idl/JacIDL.java: added new flag for unchecked_narrow option

        * idl/Interface.java: added code to generated helpers with
        unchecked_narrow() calls (rather than narrow()), plus minor
        cosmetics

2003-12-30  Andre Spiegel  <spiegel@gnu.org>

        * util/LogKitLoggerFactory.java (namedLoggers): Use a HashMap
        instead of a Hashtable.

        * util/Environment.java (trimmedPrefixProps,
        untrimmedPrefixProps): Use HashMaps instead of Hashtables.

        * poa/RequestProcessor.java (specialOperations): Use a HashMap
        instead of a Hashtable.

        * poa/RequestController.java (activeRequestTable): Use a HashMap
        instead of a Hashtable.

        * poa/POA.java (all_policies, childs, createdReferences): Use
        HashMaps instead of Hashtables.

        * poa/Current.java (threadTable): Use a HashMap instead of a
        Hashtable.

        * poa/AOM.java (objectMap, servantMap): Use HashMaps instead of
        Hashtables.

        * orb/ORB.java (initial_references, knownReferences,
        policy_factories): Use HashMaps instead of Hashtables.

        * orb/CDROutputStream.java,
        orb/CDRInputStream.java (cachedTypeCodes): Use a HashMap instead
        of a Hashtable.

        * poa/RPPoolManager.java (pool): Use a List instead of a Vector.

        * poa/RequestController.java (deactivationList): Use a List
        instead of a Vector.

        * poa/POAManager.java (poas): Use a List instead of a Vector,
        update all callers.

        * poa/Current.java (_addContext, _removeContext,
        getInvocationContext): Use Lists instead of Vectors.

        * poa/AOM.java (deactivationList, etherealisationList,
        incarnationList): Use Lists instead of Vectors. Update all
        callers.

        * poa/util/POAUtil.java (extractScopedPOANames): Return a List
        instead of a Vector.

        * orb/ParsedIOR.java (createObjectIOR): Use List instead of
        Vector.

        * orb/ORB.java (findPOA): Use a List for scopes, not a Vector.

        * orb/CDROutputStream.java (deferredArrayQueue):
        Instantiate with an ArrayList, not a Vector.

        * orb/giop/ServerRequestListener.java (scopes):
        Use a List instead of a Vector.

        * orb/dsi/ServerRequest.java (scopes, getScopes):
        Use a List instead of a Vector.

        * orb/BufferManager.java (bufferPool): Use an array of Lists,
        rather than Stacks, to avoid synchronization.

        * poa/RequestQueue.java (queue): Use an ArrayList rather than a Vector,
        to avoid synchronization. Update all callers.

        * orb/Delegate.java (policy_overrides): Use a HashMap rather than
        a Hashtable.
        (request): Streamline the check for timing policies.

2003-12-27  Nicolas Noffke  <nicolas.noffke@web.de>

        * orb/giop/ClientConnection.java: removed forgotten debug
        System.out.println

2003-12-23  Simon McQueen  <sm@prismtechnologies.com>

        * orb/giop/ClientConnection.java: Fixed compilation error.

2003-12-22  Francisco Reverbel  <reverbel@ime.usp.br>

        * util/LoggerFactory.java: The visibility of the LoggerFactory
        interface was changed to public, so that a class can implement
        this interface without having to live in the package
        org.jacorb.util.

2003-12-22  Gerald Brose  <gerald.brose@acm.org>

        * util/Environment.java:
        (init) modified order or loading properties from files.

2003-12-19  Nicolas Noffke <Nicolas.Noffke@web.de>

        * orb/giop/ClientConnection.java, orb/giop/ClientConnectionManager.java:
        fixed BiDir bug: BiDir ClientConnections were registered with with the
        ServiceContext supplied profile but removed with the transport profile
        (so in fact they weren't removed). Added "registeredProfile" to
        ClientConnection that contains the profile the connections has been
        cached with by the manager.

2003-12-19  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GssUpContext.java, security/sas/GssUpContextValidator.java, security/sas/ISASContext.java, security/sas/ISASContextCreator.java, security/sas/ISASContextValidator.java, security/sas/JsseContext.java, security/sas/JsseContextValidator.java, security/sas/KerberosContext.java, security/sas/KerberosContextCreator.java, security/sas/KerberosContextValidator.java, security/sas/SASClientInterceptor.java, security/sas/SASTargetInterceptor.java, orb/standardInterceptors/SASComponentInterceptor.java:
        Combine ISASContextCreator and ISASContextValidator

2003-12-19  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/giop/ClientConnectionManager.java, orb/giop/TransportManager.java:
        Remove unused variables

2003-12-19  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractMessage.java (removeReference):
        changed visibility to protected as this is
        necessary for test cases

2003-12-19  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ReplyReceiver.java:
        Remove unused variables

        * orb/dii/Request.java:
        Remove unused variable. Inner class static

        * security/level2/CredentialsImpl.java, security/level2/SecAttributeManager.java:
        Error->Exception

        * idl/Environment.java, util/LogKitLoggerFactory.java:
        Add comment

        * idl/JacIDL.java:
        Use local intToPriority not the one in jacorb/util

        * orb/CDRInputStream.java, orb/CDROutputStream.java:
        Stop masking exceptions. Change error->corba exception

2003-12-18  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/TypeCode.java:
        Remove printStackTraces that will never be seen due to logging.

2003-12-18  Nicolas Noffke <Nicolas.Noffke@web.de>

        * security/ssl/iaik/SSLServerSocketFactory.java:
        (switchToClientMode) adapted Debug.output() (no more symbolic names...)

2003-12-18  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/ServantDelegate.java:
        - Instead of calling get_servant() directly on an instance of
          org.omg.PortableServant.Current, do it via org.jacorb.poa.Current.
          This change makes JacORB compatible with the obsolete version of
          org.omg.PortableServant.Current in Sun's JDK 1.4.2, which does not have
          the method get_servant().

        - Removed catch clause for NoSuchMethodError, which will not occur anymore.

2003-12-18  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/giop/LocateReplyInputStream.java, orb/giop/LocateReplyOutputStream.java, orb/giop/LocateRequestOutputStream.java, orb/giop/MessageInputStream.java, orb/giop/Messages.java, orb/giop/ReplyOutputStream.java, orb/giop/RequestInputStream.java, orb/giop/RequestOutputStream.java, orb/giop/ServerRequestListener.java, orb/giop/ServiceContextTransportingOutputStream.java, orb/ReplyReceiver.java, orb/ORB.java:
        Error->CorbaException

        * orb/CDRInputStream.java, orb/CDROutputStream.java:
        Whitespace only

        * imr/ServerStartupDaemonImpl.java:
        Error->RuntimeException

        * imr/ServerStartupDaemonImpl.java:
        Whitespace only

        * orb/giop/ServerRequestListener.java:
        White space

2003-12-17  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ServantDelegate.java, orb/BasicAdapter.java, orb/dynany/DynAny.java:
        Error->CorbaException

        * idl/InterfaceBody.java, idl/UnionType.java:
        Change error to runtime to match other exceptions

        * orb/giop/RequestOutputStream.java, orb/giop/ReplyOutputStream.java:
        Whitespace only

        * poa/POAManager.java:
        Normalise imports, Error->CorbaException

        * poa/RequestQueue.java:
        Normalise imports

        * orb/giop/ReplyInputStream.java, orb/giop/LocateReplyOutputStream.java:
        Whitespace only

        * orb/ORB.java:
        Remove a trace that is never seen from when thread wakes

        * orb/util/CorbaLoc.java:
        Efficiency - don't create new string on result of substring

        * orb/SystemExceptionHelper.java:
        Remove commented out code

        * poa/RequestController.java:
        Added opname to logging and removed a notify

        * poa/RequestProcessor.java:
        Removed unused variable, commented out debug and added opname to logging

        * poa/RPPoolManager.java:
        Remove a throws from addProcessor (as it doesn't throw anything) and related try/catch

        * poa/POAManagerMonitorImpl.java:
        Removed printStackTrace and corrected some output

        * poa/POAMonitorImpl.java:
        Removed unused variable

        * poa/POA.java, poa/RequestQueue.java:
        Add opname

        * poa/RequestController.java:
        Rollback mistaken commit

        * poa/RPPoolManager.java, poa/RequestController.java:
        Remove setPoolSize as unused.

2003-12-16  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/ISASContextCreator.java, security/sas/ISASContextValidator.java, security/sas/SASTargetInterceptor.java:
        Cleanup

2003-12-16  Nick Cross  <nick.cross@prismtechnologies.com>

        * ir/RepositoryID.java:
        1.3 Build - remove chained exception

2003-12-16  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractMessage.java, notification/AbstractProxySupplier.java, notification/ApplicationContext.java, notification/FilterImpl.java, notification/MappingFilterImpl.java, notification/MessageFactory.java, notification/ProxyPullConsumerImpl.java, notification/ProxyPullSupplierImpl.java, notification/ProxyPushConsumerImpl.java, notification/ProxyPushSupplierImpl.java, notification/SequenceProxyPullConsumerImpl.java, notification/SequenceProxyPullSupplierImpl.java, notification/SequenceProxyPushConsumerImpl.java, notification/SequenceProxyPushSupplierImpl.java, notification/StructuredProxyPullConsumerImpl.java, notification/StructuredProxyPullSupplierImpl.java, notification/StructuredProxyPushConsumerImpl.java, notification/StructuredProxyPushSupplierImpl.java, notification/engine/TaskConfigurator.java, notification/interfaces/AbstractPoolable.java:
        moved queue handling from proxies (*Proxy{Push|Pull}Supplier) to superclass
        AbstractProxySupplier

        renamed method AbstractPoolable.release() to dispose

        cosmetics

        * notification/EventChannelImpl.java:
        removed buggy double checked lock

        * notification/AbstractAdmin.java:
        cosmetics

        removed unnecessary synchronized

        * notification/node/TCLCleanUp.java:
        cosmetics

2003-12-16  Andre Spiegel  <spiegel@gnu.org>

        * orb/ORB.java (createIOR):
        Pass list of profiles to IORInfoImpl.

        * orb/portableInterceptor/IORInfoImpl.java:
        Implement the new interface IORInfoExt, rather than IORInfo.
        (_profiles): New field.
        (c'tor): Take a list of profiles as an additional argument.
        (add_profile, get_number_of_profiles, get_profile): New methods.

        * orb/portableInterceptor/IORInfoExt.java:
        Initial revision.

2003-12-16  Gerald Brose  <gerald.brose@acm.org>

        * naming/NameServer.java, poa/POAMonitorImpl.java, util/CAD.java, util/CADTableModel.java, util/Environment.java, util/Time.java, util/Version.java, util/threadpool/ConsumerTie.java, util/threadpool/ThreadPool.java:
        removed references to logging constants in util.Debug

        * proxy/ProxyImpl.java:
        removed code referencing the old logging constants in util.Debug

        * util/Debug.java:
        removed old log component constants and any code related to them. This
        code is made obsolete by the new logging API

        * orb/iiop/IIOPListener.java:
        (c'tor) moved logger retrieval to front.

        * orb/BasicAdapter.java, orb/BufferManager.java, orb/ClientInterceptorHandler.java, orb/Delegate.java, orb/ExceptionHolderImpl.java, orb/ORB.java, orb/ReplyReceiver.java, orb/dii/Request.java, orb/factory/PortRangeServerSocketFactory.java, orb/factory/PortRangeSocketFactory.java, orb/factory/SocketFactoryManager.java, orb/giop/ClientConnectionManager.java, orb/giop/TransportManager.java, orb/iiop/IIOPListener.java, orb/portableInterceptor/ClientInterceptorIterator.java, orb/portableInterceptor/ClientRequestInfoImpl.java, orb/portableInterceptor/IORInterceptorIterator.java, orb/portableInterceptor/InterceptorManager.java, orb/portableInterceptor/ORBInitInfoImpl.java, orb/portableInterceptor/ServerInterceptorIterator.java, orb/portableInterceptor/ServerRequestInfoImpl.java, orb/standardInterceptors/IORInterceptorInitializer.java, orb/standardInterceptors/SSLComponentInterceptor.java:
        removed references to constants in util.Debug, added extra loggers in
        some places, plus some cosmetics

        * security/level2/CurrentImpl.java, security/level2/PrincipalAuthenticatorImpl.java, security/level2/ServerInitializer.java, security/level2/SunJssePrincipalAuthenticatorImpl.java, security/ssl/sun_jsse/SSLServerSocketFactory.java, security/ssl/sun_jsse/SSLSocketFactory.java, security/ssl/sun_jsse/SecurityServiceInitializer.java, security/ssl/sun_jsse/ServerInvocationInterceptor.java:
        removed references to constants in util.Debug, plus some
        cosmetics

        * imr/ImRAccessImpl.java, imr/ImRHostInfo.java, imr/ImRPOAInfo.java, imr/ImRServerInfo.java, imr/ImplementationRepositoryImpl.java, imr/RessourceLock.java, imr/ServerStartupDaemonImpl.java, imr/ServerTable.java, imr/util/ImRManager.java, imr/util/ImRModel.java:
        removed references to constants in util.Debug, plus some cosmetics

2003-12-16  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractAdmin.java: cosmetics

        removed unnecessary synchronized

        * notification/node/TCLCleanUp.java: cosmetics

2003-12-16  Andre Spiegel  <spiegel@gnu.org>

        * orb/ORB.java (createIOR): Pass list of profiles to IORInfoImpl.

        * orb/portableInterceptor/IORInfoImpl.java: Implement the new
        interface IORInfoExt, rather than IORInfo.
        (_profiles): New field.
        (c'tor): Take a list of profiles as an additional argument.
        (add_profile, get_number_of_profiles, get_profile): New methods.

        * orb/portableInterceptor/IORInfoExt.java: Initial revision.

2003-12-16  Gerald Brose  <gerald.brose@acm.org>

        * naming/NameServer.java, poa/POAMonitorImpl.java, util/CAD.java,
        util/CADTableModel.java, util/Environment.java, util/Time.java,
        util/Version.java, util/threadpool/ConsumerTie.java,
        util/threadpool/ThreadPool.java: removed references to logging
        constants in util.Debug

        * proxy/ProxyImpl.java: removed code referencing the old logging
        constants in util.Debug

        * util/Debug.java: removed old log component constants and any
        code related to them. This code is made obsolete by the new
        logging API

        * orb/iiop/IIOPListener.java: (c'tor) moved logger retrieval to front.

        * orb/BasicAdapter.java, orb/BufferManager.java,
        orb/ClientInterceptorHandler.java, orb/Delegate.java,
        orb/ExceptionHolderImpl.java, orb/ORB.java,
        orb/ReplyReceiver.java, orb/dii/Request.java,
        orb/factory/PortRangeServerSocketFactory.java,
        orb/factory/PortRangeSocketFactory.java,
        orb/factory/SocketFactoryManager.java,
        orb/giop/ClientConnectionManager.java,
        orb/giop/TransportManager.java, orb/iiop/IIOPListener.java,
        orb/portableInterceptor/ClientInterceptorIterator.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java,
        orb/portableInterceptor/IORInterceptorIterator.java,
        orb/portableInterceptor/InterceptorManager.java,
        orb/portableInterceptor/ORBInitInfoImpl.java,
        orb/portableInterceptor/ServerInterceptorIterator.java,
        orb/portableInterceptor/ServerRequestInfoImpl.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SSLComponentInterceptor.java: removed
        references to constants in util.Debug, added extra loggers in some
        places, plus some cosmetics

        * security/level2/CurrentImpl.java,
        security/level2/PrincipalAuthenticatorImpl.java,
        security/level2/ServerInitializer.java,
        security/level2/SunJssePrincipalAuthenticatorImpl.java,
        security/ssl/sun_jsse/SSLServerSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java,
        security/ssl/sun_jsse/SecurityServiceInitializer.java,
        security/ssl/sun_jsse/ServerInvocationInterceptor.java: removed
        references to constants in util.Debug, plus some cosmetics

        * imr/ImRAccessImpl.java, imr/ImRHostInfo.java,
        imr/ImRPOAInfo.java, imr/ImRServerInfo.java,
        imr/ImplementationRepositoryImpl.java, imr/RessourceLock.java,
        imr/ServerStartupDaemonImpl.java, imr/ServerTable.java,
        imr/util/ImRManager.java, imr/util/ImRModel.java: removed
        references to constants in util.Debug, plus some cosmetics

2003-12-15  Gerald Brose  <gerald.brose@acm.org>

        * idl/GlobalInputStream.java: added documentation: previous
        check-in fixes bug #385 :-)

2003-12-12  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GssUpContextValidator.java,
        security/sas/KerberosContextCreator.java,
        security/sas/KerberosContextValidator.java: Logging

2003-12-12  Gerald Brose  <gerald.brose@acm.org>

        * idl/Interface.java:
        (parse) for added robustness, tolerate multiple forward
        declarations of the same interface name, even after the name has
        been defined.

2003-12-11  Andre Spiegel  <spiegel@gnu.org>

        * orb/CDRInputStream.java:
        (read_value(TypeCode, OutputStream)): Use the new method
        ORB.getBoxedValueHelper() to look up helpers via the cache in the
        ORB. This fixes a serious performance issue.

        * orb/CDROutputStream.java:
        (write_value(TypeCode, InputStream)): Use the new method
        ORB.getBoxedValueHelper() to look up helpers via the cache in the
        ORB. This fixes a serious performance issue.

        * orb/ORB.java (boxedValueHelpers, getBoxedValueHelpers): New
        field and access method.

2003-12-11  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/ConsumerAdminTieImpl.java: removed buggy "double
        checked lock"

        cosmetics

        * notification/FilterFactoryImpl.java: removed buggy "double
        checked lock"

        * notification/CollectionsWrapper.java: fixed possible
        nullpointerexception

        * notification/AnyMessage.java,
        notification/StructuredEventMessage.java: removed buggy "double
        checked lock"

        cosmetics

        * notification/AbstractProxy.java: removed buggy "double checked lock"

        * notification/AbstractMessage.java: cosmetics

2003-12-11  Gerald Brose  <gerald.brose@acm.org>

        * idl/lexer.java, idl/parser.java, idl/sym.java:
        *** empty log message ***

2003-12-10  Gerald Brose  <gerald.brose@acm.org>

        * idl/ValueAbsDecl.java:
        (parse) added robustness for buggy IDL generated by rmic.

        * idl/SimpleDeclarator.java: cosmetic only

        * idl/parser.cup:
        (compile) changed reference to intToLogPriority to package-local
        Environment class.

        * idl/Environment.java:
        (intToLogPriority) added method to avoid extra package
        dependencies

        * idl/ParseException.java: (getMessage) deal with null error messages

        * idl/InitDecl.java: added a raises expression for factory
        methods, as allowed in CORBA 3.0 and used by rmic

        * idl/Interface.java:
        (parse) additional unwinding of aliased types, necessary!

        * idl/AttrDecl.java:
        (parse) only parse declarators if strict parsing is on,
        i.e. tolerate buggy IDL generated by rmic.

        * idl/GlobalInputStream.java:
        (read) now closes ALL current streams at EOF, not just the
        included ones.

        * idl/parser.cup: added a new option -permissive_rmic to deal with
        IDL generated bu Sun's rmic (buggy!). Also emit all error messages
        through the lexer now rather than directly to stderr.

2003-12-10  Nicolas Noffke <Nicolas.Noffke@web.de>

        * util/Environment.java: removed obsolete domain service
        properties

        * orb/ReplyReceiver.java, util/Environment.java: small performance
        improvement: made retry_on_failure member of Environment, so this
        property doesn't need to be evaluated for every request

2003-12-09  Nicolas Noffke <Nicolas.Noffke@web.de>

        * orb/ReplyReceiver.java: added property
        jacorb.connection.client.retry_on_failure to control if network
        failures result in a COMM_FAILURE or remarshal

        * orb/giop/ClientGIOPConnection.java: added property
        jacorb.connection.client.timeout_ignores_pending_messages to
        control if idle timeouts take care of pending messages

2003-12-04  Simon McQueen  <sm@prismtechnologies.com>

        * idl/JacIDL.java, idl/parser.cup, idl/parser.java, idl/sym.java:
        Added support for i2jpackage nested element tags under the jacidl
        task tags. Fixed setting of logging priority when jacidl task
        used.

        This fixes bug #422. Thanks to Peter Kanis for the report and
        suggested fix.

        * util/LogKitLoggerFactory.java: Abstracted int to
        org.apache.log.Priority conversion into a public method.

2003-12-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/queue/AbstractBoundedEventQueue.java,
        notification/queue/BoundedDeadlineEventQueue.java,
        notification/queue/BoundedPriorityEventQueue.java: removed unused
        variables

        * notification/interfaces/FilterStage.java: cosmetics

2003-12-02  Simon McQueen  <sm@prismtechnologies.com>

        * util/LogKitLoggerFactory.java: (constructor)

        Introduced property jacorb.log.default.verbosity which will be the
        verbosity level of all loggers that do not have a specific
        <name>.log.verbosity property value defined.

2003-11-29  Andre Spiegel  <spiegel@gnu.org>

        * orb/giop/ReplyPlaceholder.java (c'tor): Don't parse
        jacorb.connection.client.pending_reply_timeout from the
        environment each time.  This change gives us a performance gain of
        about 35% for pings on the local machine.
        (timeout): Initialize from a new caching method in the
        Environment.

        * util/Environment.java (_client_pending_reply_timeout,
        clientPendingReplyTimeout): New static field and access method.
        (readValue, readValues): Handle the above.

2003-11-28  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/ORB.java: Minor fix in a javadoc comment (typo and wrong
        param names).

2003-11-26  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASClientInterceptor.java,
        orb/standardInterceptors/SASComponentInterceptor.java: Decode
        ATLAS URL

        * security/sas/SASClientInterceptor.java,
        orb/standardInterceptors/SASComponentInterceptor.java: LogKit
        logging and decode ATLAS URL

2003-11-26  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/TaskProcessor.java,
        notification/engine/PushToConsumerTask.java: cosmetics

        * notification/engine/FilterSupplierAdminTask.java: as access to
        member listOfFilterStageToBeProccessed_ is private now use
        accessor methods.

        cosmetics

        BUGFIX: overriding method reset was not calling super.reset(). This
        resulted in an instance not properly beeing recycled after return to
        its pool and caused multiple delivery of messages to consumers.
        (news://news.gmane.org:119/3FBE2F7D.6090503@ll.mit.edu)

        * notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterProxyConsumerTask.java: as access to
        member listOfFilterStageToBeProccessed_ is private now use
        accessor methods.

        cosmetics

        * notification/engine/FilterConsumerAdminTask.java: as access to
        member listOfFilterStageToBeProccessed_ is private now use
        accessor methods.

        * notification/engine/AbstractFilterTask.java:
        listOfFilterStageToBeProcessed is private now

        added accessor methods

        * notification/SupplierAdminTieImpl.java: cosmetics

        removed synchronized double check idiom as its unsafe

        * notification/StructuredProxyPushSupplierImpl.java,
        notification/StructuredProxyPullSupplierImpl.java,
        notification/ProxyPushSupplierImpl.java: cosmetics

        removed EventQueue member as its managed in a superclass

        * notification/ProxyPullSupplierImpl.java: cosmetics

        removed synchronized double check idiom as its unsafe

        * notification/PropertyManager.java: cosmetics

        * notification/FilterManager.java: added initial support for
        filter callbacks (not active yet)

        * notification/AbstractProxySupplier.java: initial checkin

        * notification/AbstractProxy.java: cosmetics

        * notification/AbstractMessage.java:
        (clone) changed InterruptedException to IllegalArgumentException
        as this makes more sense

        cosmetics

        * notification/AbstractAdmin.java: cosmetics

        * notification/interfaces/Message.java: added method

2003-11-25  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASClientInterceptor.java: Remove debug statement

        * security/sas/GSSUPContextSpi.java,
        security/sas/GSSUPCredentialSpi.java,
        security/sas/GSSUPMechFactory.java,
        security/sas/GSSUPNameSpi.java, security/sas/GSSUPProvider.java,
        security/sas/GSSUPProviderInitializer.java,
        security/sas/GssUpContextValidator.java,
        security/sas/ISASContextValidator.java,
        security/sas/JsseContextValidator.java,
        security/sas/SASClientInitializer.java,
        security/sas/SASClientInterceptor.java,
        security/sas/SASTargetInitializer.java,
        security/sas/SASTargetInterceptor.java: logkit logging

2003-11-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/queue/EventQueue.java: fix javadoc

2003-11-11  Andre Spiegel  <spiegel@gnu.org>

        * ir/RepositoryID.java (createBoxedValueHelper): New method.

        * util/Environment.java (identityHashMapClass): New static field.
        (createIdentityHashMap): New method.

        * util/IdentityHashMap.java: Initial revision.

        * idl/sym.java: Header change only.

        * idl/parser.java, idl/parser.cup (value_box_decl):
        Call RESULT.set_token().  This is needed so that
        repository ids for boxed value types are properly qualified.

        * orb/CDROutputStream.java (beginEncapsulation, getValueMap): Use
        Environment.createIdentityHashMap() for the value map.
        (write_value(TypeCode, InputStream)): For _tk_value_box,
        read the value based on repository ID, not TypeCode.
        Fix for bug #387.

        * orb/CDRInputStream.java:
        (read_value(TypeCode, OutputStream)): For _tk_value_box,
        read the value based on repository ID, not TypeCode.
        Fix for bug #387.

2003-11-07  Gerald Brose  <gerald.brose@acm.org>

        * poa/util/LogTrace.java, poa/util/LogWriter.java: removed these
        files as part of migrating to the new logger interface

        * poa/AOM.java, poa/POA.java, poa/POAMonitor.java,
        poa/POAMonitorImpl.java, poa/POAMonitorLightImpl.java,
        poa/RequestController.java, poa/RequestProcessor.java,
        poa/RequestQueue.java, poa/gui/POAMonitorView.java: migrated to
        new logging interface, removed references to poa/util LogTrace and
        LogWriter

        cosmetics

2003-11-07  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/giop/TransportManager.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        security/level2/CurrentImpl.java,
        security/sas/SASClientInterceptor.java,
        security/sas/SASTargetInterceptor.java, util/Environment.java,
        collection/SequenceFactoryImpl.java,
        collection/SortedRelationFactoryImpl.java, ir/RepositoryID.java,
        notification/util/PatternWrapper.java,
        orb/ApplicationExceptionHelper.java, orb/BasicAdapter.java,
        orb/Delegate.java, orb/ExceptionHolderImpl.java, orb/ORB.java,
        orb/ParsedIOR.java, orb/SystemExceptionHelper.java,
        orb/dns/DNSLookup.java, orb/factory/SocketFactoryManager.java,
        orb/giop/ClientConnectionManager.java,
        orb/giop/GIOPConnectionManager.java: - Class.forName(String)
        replaced by Environment.classForName(String), which uses the
        thread context class loader.  - Explicit usages of the thread
        context class loader also replaced by calls to
        Environment.classForName(String).

2003-11-06  Francisco Reverbel  <reverbel@ime.usp.br>

        * util/Environment.java: Javadoc comments and implementation
        comments added to classForName().

2003-11-05  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/giop/GIOPConnection.java: Correct a boolean test in tryDiscard()

2003-11-05  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/Any.java, orb/TypeCode.java: Fixes for bug #404:
         - Any.extract_Value() now handle value boxes and abstract interfaces
         - Any.read_value() and Any.write_value() now handle value boxes
         - TypeCode.create_tc was not treating Java arrays correctly
         - TypeCode.create_tc now works with abstract interfaces, IDLEntities,
           java.io.Serializable, java.io.Externalizable, and java.lang.Object.

        * orb/CDRInputStream.java: Fixed typo in error message.

2003-11-04  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/FilterImpl.java: removed unused import

        * notification/node/DomainNameShorthandNode.java,
        notification/node/EventNameShorthandNode.java,
        notification/node/TypeNameShorthandNode.java: replaced logkit with
        avalon logger

2003-11-03  Andre Spiegel  <spiegel@gnu.org>

        * orb/iiop/IIOPProfile.java (decode_corbaloc): Fix parsing of
        protocol version numbers, thanks to Phil Mesnier.

2003-11-03  Simon McQueen  <sm@prismtechnologies.com>

        * notification/build.xml: This file is using its own javac target
        - updated it to use version numbered 'wrapper' jar rather than
        plain wrapper.jar.

2003-11-03  Gerald Brose  <gerald.brose@acm.org>

        * notification/build.xml: use version-numbered antlr jar file.

2003-11-03  Andre Spiegel  <spiegel@gnu.org>

        * naming/NameServer.java (main): Use new property name
        jacorb.connection.server.timeout.

        * orb/iiop/IIOPListener.java (getServerTimeout): Change property
        name to jacorb.connection.server.timeout.

        * orb/BasicAdapter.java (timeout): Remove unused field.
        (c'tor): Remove initialization code for that field.

        * orb/giop/ClientGIOPConnection.java (closeAllowReopen): Reuse
        existing transport, rather than cloning it.

2003-11-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractAdmin.java,
        notification/AbstractMessage.java,
        notification/AbstractProxy.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/FilterFactoryImpl.java, notification/FilterImpl.java,
        notification/MappingFilterImpl.java,
        notification/MessageUtils.java, notification/PropertyManager.java,
        notification/build.xml, notification/engine/AbstractTask.java,
        notification/engine/TaskConfigurator.java,
        notification/engine/TaskProcessor.java,
        notification/evaluate/DynamicEvaluator.java,
        notification/evaluate/FilterConstraint.java,
        notification/evaluate/ResultExtractor.java,
        notification/node/AbstractTCLNode.java,
        notification/node/EvaluationResult.java,
        notification/node/StaticTypeChecker.java,
        notification/node/TCLCleanUp.java,
        notification/queue/AbstractBoundedEventQueue.java,
        notification/queue/BoundedDeadlineEventQueue.java,
        notification/queue/BoundedPriorityEventQueue.java,
        notification/queue/EventQueueFactory.java,
        notification/util/AbstractObjectPool.java,
        notification/util/LogConfiguration.java,
        notification/util/PatternWrapper.java,
        notification/util/ThreadPool.java,
        notification/util/WildcardMap.java: adapted new logging mechanism

2003-10-31  Gerald Brose  <gerald.brose@acm.org>

        * util/LogKitLoggerFactory.java: added some more javadoc

        * util/Environment.java: added some javadoc (classForName, initLogging)

2003-10-30  Simon McQueen  <sm@prismtechnologies.com>

        * idl/StructType.java: Fix for (part of) Bug # 394.

        Incorrect package names were being printed in constructor arguments.

2003-10-30  Gerald Brose  <gerald.brose@acm.org>

        Version 2.0 beta 3 released.

2003-10-30  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ORB.java: Fix for Jac#393 - added patch for addObjectKey.

2003-10-30  Gerald Brose  <gerald.brose@acm.org>

        * transaction/build.xml, util/tracing/build.xml, events/build.xml,
        imr/build.xml, ir/build.xml, notification/build.xml,
        orb/dns/build.xml, orb/portableInterceptor/build.xml,
        orb/standardInterceptors/build.xml, poa/build.xml,
        security/build.xml, security/sas/build.xml,
        security/ssl/build.xml, security/ssl/iaik/build.xml,
        security/ssl/sun_jsse/build.xml, trading/build.xml,
        trading/client/build.xml, trading/db/build.xml,
        collection/build.xml, concurrency/build.xml: updated to mirror new
        etc/ location of common.xml

2003-10-30  Gerald Brose  <gerald.brose@acm.org>

        * build.xml, idl/build.xml, naming/build.xml, orb/build.xml,
        util/build.xml: modified to mirror moved common.xml to jacorb/etc

2003-10-30  Gerald Brose  <gerald.brose@acm.org>

        * poa/POAMonitorImpl.java: minor change to align with new logging,
        needs more work.

        * poa/POA.java: minor syntactic reformatting

        * poa/util/LogTrace.java, poa/util/LogWriter.java: use new logging
        interfaces, first shot.

        * security/level2/KeyAndCert.java:
        (getPublicKey) new method to return the pubkey of the first cert
        in the chain.

        * util/Version.java: updated for 2.0 beta 3

        * naming/NameServer.java, naming/NamingContextImpl.java: move to
        new loggin interfaces

        * util/Debug.java, util/Environment.java,
        util/LogKitLoggerFactory.java, util/LoggerFactory.java: New
        logging interfaces, implementation integration and facades

2003-10-30  Andre Spiegel  <spiegel@gnu.org>

        * orb/EncapsInfo.java: (codebaseMap, repIdMap, valueMap) Change
        type to java.util.Map.
        (c'tor): Adapt argument types.

        * orb/CDRInputStream.java (codebaseMap, recursiveTCMap, repIdMap,
        valueMap): Change type to java.util.Map, to allow for different
        implementations.  Change carried through in all getters. Improve
        javadoc.

        * orb/CDROutputStream.java (recursiveTCMap, repIdMap, valueMap,
        codebaseMap): Change type to java.util.Map, to allow different
        implementations.  Change carried through in all getters.  Improve
        Javadoc.
        (beginEncapsulation): Adapt to above change.

2003-10-30  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/Delegate.java: Bug #384 - retrieve the local stub for the
        object in question instead. Added to the regression tests.

2003-10-30  Gerald Brose  <gerald.brose@acm.org>

        * idl/NameTable.java:
        (define) respect the -sloppy-names option and only check for
        identifier clashes trictly (case insensitive) if that switch is
        not applied.

        * idl/Member.java:
        (parse) allow case-insensitive ("sloppy") checks for identifier
        clashes
        (declarator names).

        * idl/lexer.java:
        (checkIdentifier) allow less strict (case sensitive) checks for
        clahes between identifiers and keywords

2003-10-29  Simon McQueen  <sm@prismtechnologies.com>

        * naming/namemanager/NameManager.java,
        notification/AbstractMessage.java,
        notification/evaluate/DynamicEvaluator.java,
        orb/BasicAdapter.java, orb/CDRInputStream.java, orb/Delegate.java,
        orb/ORB.java, orb/ORBSingleton.java, orb/dsi/ServerRequest.java,
        orb/dynany/DynArray.java, orb/dynany/DynEnum.java,
        orb/dynany/DynFixed.java, orb/dynany/DynSequence.java,
        orb/dynany/DynStruct.java, orb/dynany/DynUnion.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java,
        poa/RPPoolManager.java, poa/except/ApplicationError.java,
        poa/except/CompletionRequestedException.java,
        poa/except/ShutdownInProgressException.java,
        poa/gui/beans/DoubleListDialog.java,
        poa/gui/beans/DoubleListHeaderPanel.java,
        poa/gui/beans/DoubleListItem.java,
        poa/gui/beans/FillLevelBar.java,
        poa/gui/beans/FillLevelCanvas.java, poa/util/ByteArrayKey.java,
        poa/util/POAUtil.java, security/sas/GSSUPProvider.java,
        security/ssl/iaik/SSLSocketFactory.java,
        security/util/CertificatesManager.java,
        events/ProxyPullConsumerImpl.java,
        events/ProxyPullSupplierImpl.java, idl/AliasTypeSpec.java,
        idl/AnyType.java, idl/ArrayDeclarator.java,
        idl/ArrayTypeSpec.java, idl/BaseType.java,
        idl/ConstrTypeSpec.java, idl/Declaration.java,
        idl/Declarator.java, idl/Definition.java, idl/Definitions.java,
        idl/EnumType.java, idl/FixedPointConstType.java,
        idl/GlobalInputStream.java, idl/Interface.java,
        idl/InterfaceBody.java, idl/Module.java, idl/NameTable.java,
        idl/NativeType.java, idl/ScopedName.java, idl/SequenceType.java,
        idl/SimpleDeclarator.java, idl/Spec.java, idl/StructType.java,
        idl/TypeDeclaration.java, idl/TypeDef.java, idl/TypeSpec.java,
        idl/UnionType.java, idl/Value.java, idl/ValueAbsDecl.java,
        idl/ValueBoxDecl.java, idl/ValueDecl.java, imr/ImRServerInfo.java,
        imr/util/AddServerWindow.java, imr/util/ConnectWindow.java,
        ir/gui/remoteobject/ObjectRepresentantFactory.java,
        naming/Name.java, naming/NamingContextImpl.java: Javadoc fixes
        only.

2003-10-29  Andre Spiegel  <spiegel@gnu.org>

        * orb/Any.java: (read_value(InputStream, TypeCode)): Fix TypeCode
        problem for case _tk_value.  Fix for bug 401, suggested by
        Christopher McDermott and Phil Mesnier.

2003-10-29  Gerald Brose  <gerald.brose@acm.org>

        * naming/NameServer.java, naming/NamingContextImpl.java: more
        logging refinements: look for separate log level property

        * naming/NameServer.java: use dedicated naming logger.

2003-10-28  Simon McQueen  <sm@prismtechnologies.com>

        * security/util/KeyStoreManager.java, trading/impl/LinkImpl.java,
        trading/impl/LookupImpl.java, trading/impl/OfferIteratorImpl.java,
        trading/util/QueryContainer.java,
        trading/util/QueryPropagator.java, trading/util/Semaphore.java:
        Javadoc fixes only. @author can only be used at class level.

        * idl/AliasTypeSpec.java, idl/ArrayTypeSpec.java,
        idl/ConstrTypeSpec.java, idl/ExceptionHolderTypeSpec.java,
        idl/IdlSymbol.java, idl/Module.java, idl/ObjectTypeSpec.java,
        idl/ReplyHandlerTypeSpec.java, idl/ScopedName.java,
        idl/SequenceType.java, idl/StructType.java,
        idl/TypeCodeTypeSpec.java, idl/TypeDeclaration.java,
        idl/TypeSpec.java, idl/UnionType.java, idl/Value.java,
        idl/ValueBoxDecl.java, idl/VectorType.java, idl/VoidTypeSpec.java,
        idl/javamapping/JavaMappingGeneratingVisitor.java,
        ir/InterfaceDef.java, naming/Name.java, naming/NameServer.java,
        naming/NamingContextImpl.java, naming/namemanager/NSTable.java,
        orb/dsi/ServerRequest.java, orb/dynany/DynUnion.java,
        security/ssl/iaik/SSLSocketFactory.java,
        security/ssl/sun_jsse/KeyStoreUtil.java,
        security/util/CertUtils.java, security/util/KSEntryTree.java,
        security/util/KeyNode.java, security/util/KeyStoreManager.java,
        security/util/KeyStoreUtil.java, util/Environment.java,
        util/ObjectUtil.java, util/tracing/Timer.java: Javadoc fixes
        only. @returns replaced by @return.

2003-10-28  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/iiop/IIOPConnection.java: Sync access to connected

        * orb/giop/ClientGIOPConnection.java,
        orb/giop/GIOPConnection.java, orb/giop/ServerGIOPConnection.java:
        GIOPConnection synchronization.

        * orb/giop/Messages.java, orb/giop/ReplyOutputStream.java,
        orb/giop/RequestInputStream.java,
        orb/giop/RequestOutputStream.java,
        orb/giop/ServiceContextTransportingOutputStream.java: Normalise
        service_context constant use

        * orb/giop/ClientConnection.java,
        orb/giop/ClientConnectionManager.java: Synchronize inc/dec clients
        to fix data races

        * orb/Delegate.java: Finalize signature and call super. Change
        orb._release signature to fix data race.

        * orb/ORB.java: Finalize signature and call super. Change
        orb._release signature to fix data race. RT1200 Error checking in
        ORBInitRef

        * imr/ImplementationRepositoryImpl.java: RT1030 fix for tru64
        passing space as parameter. Change ClientGIOPConnection to
        ServerGIOPConnection

        * notification/build.xml: Modify test build so it still builds if
        regexp jars for notification aren't available.

        * poa/RequestController.java: Class final

        * poa/RPPoolManager.java: Add sync to getPoolSize and change
        deprecated thread.stop to .end

        * poa/util/ByteArrayKey.java: RT1045 - cache the string

        * poa/POA.java: RT1045 - add null check, removed commented out lines

        * poa/AOM.java: RT1045 - add null check. Removed unused method

2003-10-28  Andre Spiegel  <spiegel@gnu.org>

        * orb/CDRInputStream.java:
        (read_value(Serializable)): Make it compliant, add javadoc.

        * orb/ORB.java (JacORBValueFactory.read_value): Use
        InputStream.read_value(Serializable), which is the standard way to
        handle indirections.

2003-10-28  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/Any.java: Changed insert_Object(org.omg.CORBA.Object o) so
        that it now takes an object whose repository id starts with
        "RMI:".

2003-10-27  Gerald Brose  <gerald.brose@acm.org>

        * orb/Delegate.java:
        (servant_preinvoke) fixed bugs #399 and #400 (by removing local
        calls from POA when exiting through an exception).

2003-10-27  Andre Spiegel  <spiegel@gnu.org>

        * orb/dynany/DynAny.java: Patch by Philippe.Merle@lifl.fr.
        (defaultValue): Fix typo for _tk_ulong.
        (get_val, insert_val): New methods, suggested to allow
        compilation on J2SDK 1.4.2.

2003-10-27  Andre Spiegel  <spiegel@gnu.org>

        Refactoring patch to bring corbaloc in line with ETF.
        Submitted by Phil Mesnier <mesnier_p@ociweb.com>.

        * orb/util/CorbaLoc.java (ObjectAddress): Inner class
        removed. Object addresses are now stored as ETF Profiles.
        (c'tor): Add ORB parameter.

        * orb/ParsedIOR.java (createObjectIOR): Replaced previous
        versions with a new method that takes an ETF Profile argument.
        (decode(CorbaLoc)): Removed.
        (parse_corbaloc, parse_corbaname, parse_jndi, parse_resource,
        parse_stringified_ior): New methods.
        (parse): Delegate the actual work to them.

        * orb/iiop/IIOPFactories.java (decode_corbaloc): New method.

        * orb/iiop/IIOPProfile.java:
        (IIOPProfile(IIOPAddress, byte[], int minor): New constructor that
        takes a GIOP minor version argument.
        (IIOPProfile(String corbaloc)): New constructor.
        (decode_corbaloc, decode_extensions, get_ssl_options): New
        methods.

        * imr/ImplementationRepositoryImpl.java
        (ImrRequestListener): Construct IOR via ETF Profile.

        * naming/NamingContextImpl.java
        (to_url): Pass ORB parameter to CorbaLoc constructor.

2003-10-24  Gerald Brose  <gerald.brose@acm.org>

        * idl/sym.java: *** empty log message ***

        * idl/ValueBoxDecl.java: added recentness check to avoid
        unnecessary code generation and applied some coding style
        cosmetics.

        * idl/ValueAbsDecl.java: added recentness checks to avoid
        unnecessary code generation and applied some coding style
        cosmetics.

        * idl/ValueDecl.java: cosmetics

        * idl/ValueDecl.java: added recentness checks to avoid unnecessary
        code generation to all print() methods.

        * idl/Interface.java:
        (openOutput) added check to avoid opening files that are up to
        date.  coding style cosmetics.

        * idl/EnumType.java:
        (print) added check to avoid unnecessary code generation coding
        style cosmetics

        * idl/parser.java: *** empty log message ***

        * idl/UnionType.java:
        (print) added recentness check to avoid uncessary code generation
        coding style cosmetics.

        * idl/SequenceType.java:
        (print) added recentness ccheck to avoid unnecessary code generation
        coding style cosmetics.

        * idl/Module.java:
        (print) added IDL recentness check to avoid generating code when the
        mapped Java is up to date
        coding style cosmetics.

        * idl/FixedPointType.java: (print) added IDL recentness check,
        coding style cosmetics.

        * idl/JacIDL.java: added forceOverwrite option, coding style
        cosmetics

        * idl/AndExpr.java: coding style cosmetics

        * idl/ConstDecl.java:
        (print) added check to compare existing mapped Java code with IDL.
        coding style cosmetics.

        * idl/ArrayTypeSpec.java: (print) added recentness check
        (printHelperClass) fixed a one-off bug when generating the static
        read() method, which resulted in illegal Java code. This was
        unnoticed earlier because of a bug in AliasTypeSpec, so this code
        was not used.

        coding style cosmetics

        * idl/GlobalInputStream.java: more cosmetics.

        * idl/GlobalInputStream.java:
        (isMoreRecentThan) new static method that lets each AST class
        check if IDL is more recent than existing mapped Java code.

        some cosmetics.

        * idl/parser.cup: added a new option "-forceOverwrite" to override
        the new IDL "recentness" checks.

        * idl/StructType.java: coding cosmetics

        * idl/StructType.java:
        (print) check if IDL is more recent than any existing mapped Java
        code.

        * idl/AliasTypeSpec.java: coding style cosmetics

        * idl/AliasTypeSpec.java:
        (print) added code to check if existing mapped Java classes are as
        recent as the IDL file.

        some cosmetics.

2003-10-24  Andre Spiegel  <spiegel@gnu.org>

        * orb/dsi/ServerRequest.java (createReply): Don't barf if the
        reply was already created.  This happens with SyncScope
        SYNC_WITH_SERVER and does not do any harm.

        * orb/Delegate.java (getSyncScope): Default to
        SYNC_WITH_TRANSPORT, not SYNC_NONE.

2003-10-20  Simon McQueen  <sm@prismtechnologies.com>

        * orb/CDRInputStream.java, orb/CDROutputStream.java: Fixed
        compilation error at JDK 1.3.x

        * security/ssl/sun_jsse/SSLServerSocketFactory.java.patch,
        security/ssl/sun_jsse/SSLSocketFactory.java.patch,
        security/ssl/sun_jsse/ServerInvocationInterceptor.java.patch:
        Updated diffs for using JSSE 1.0.x

        * security/ssl/sun_jsse/build.xml: Replaced missing property.

2003-10-17  Simon McQueen  <sm@prismtechnologies.com>

        * orb/ServantDelegate.java: final public POA poa(Servant) - Add
        error message in case where there is a conflict with Sun SDK
        'Current' implementation.

2003-10-16  Steve Osselton  <steve@prismtechnologies.com>

        * orb/giop/ReplyPlaceholder.java,
        orb/iiop/ClientIIOPConnection.java: Fix for bug #396, inconsistent
        property names

2003-10-15  Steve Osselton  <steve@prismtechnologies.com>

        * orb/portableInterceptor/ClientRequestInfoImpl.java,
        orb/portableInterceptor/ServerRequestInfoImpl.java: Fix for bug
        #392, duff portable interceptor reply status removed

2003-10-10  Andre Spiegel  <spiegel@gnu.org>

        * orb/CDROutputStream.java:
        (write_value(TypeCode, InputStream)): Add case for _tk_value_box,
        fixing bug 387.

        * orb/CDRInputStream.java:
        (read_value(TypeCode, OutputStream)): Add case for _tk_value_box,
        fixing bug 387.

2003-10-09  Nicolas Noffke  <nicolas.noffke@web.de>

        * security/level2/SecAttributeManager.java:
        (createAttribute) made synchronized, has possible concurrent
        access

2003-10-08  Nicolas Noffke  <nicolas.noffke@web.de>

        * security/level2/SecAttributeManager.java,
        security/ssl/iaik/ServerInvocationInterceptor.java,
        security/ssl/sun_jsse/ServerInvocationInterceptor.java: fix for
        bug 388/389: entries into SecAttributeManager Hashtable were never
        released. Fixed by removing them in all send* operations of the
        server interceptor. Patch supplied by mgosselin@interstarinc.com

2003-10-08  Gerald Brose  <gerald.brose@acm.org>

        * idl/parser.java, idl/sym.java: *** empty log message ***

        * idl/parser.cup: (init) also resets strict_names now.

2003-10-08  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java: Fix for bug #310, patch by Marc Heide
        <marc.heide@siemens.com>.
        (cookie, invokedOperation): New fields.
        (servant_preinvoke): Store cookie and invokedOperation for later
        postinvoke call.
        (servant_postinvoke): If POA has ServantLocator, call postinvoke
        method with stored cookie and operation.

2003-10-05  Gerald Brose  <gerald.brose@acm.org>

        * orb/Delegate.java: (is_a) removed some buggy code to fix bug #384.

2003-09-30  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ServantDelegate.java: Fix for Jac#289 - fix for registering
        transient servants.

        * orb/ServantDelegate.java: Remove commented out line and tab
        removal - white space change.

2003-09-29  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/KerberosContextCreator.java,
        security/sas/KerberosContextValidator.java: SAS and Kerberos

2003-09-24  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASClientInterceptor.java,
        security/sas/SASTargetInterceptor.java,
        security/sas/ISASContextCreator.java,
        security/sas/KerberosContextCreator.java,
        security/sas/KerberosContextValidator.java: SAS and Kerberos

        * orb/standardInterceptors/SASComponentInterceptor.java: Cleanup

2003-09-24  Simon McQueen  <sm@prismtechnologies.com>

        * naming/namemanager/NameManager.java: Added usage message on error.

        Thanks to Jesper S�derlund for reporting the problem.

2003-09-23  Andre Spiegel  <spiegel@gnu.org>

        * idl/OpDecl.java (c'tor): Fix prev change, closing bug 383.
        (parse): Fix typo in error message.

2003-09-17  Andre Spiegel  <spiegel@gnu.org>

        * orb/iiop/IIOPProfile.java (clone): Add comments to explain why
        we don't copy primaryAddress.

2003-09-16  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractAdmin.java:
        (set_qos) throw NO_IMPLEMENT instead of UnsupportedQos

        (validate_qos) throw NO_IMPLEMENT instead of UnsupportedQos

2003-09-15  Andre Spiegel  <spiegel@gnu.org>

        * util/Version.java: Set release number to "2.0 beta x, CVS".

2003-09-12  Nicolas Noffke  <nicolas.noffke@web.de>

        * orb/giop/RequestOutputStream.java:
        (Constructor) removed check if reserved byte array has length 3:
        This array is constantly initialized to a length of 3 anyway

2003-09-12  Gerald Brose  <gerald.brose@acm.org>

        * util/Version.java: updated version for beta2

        * orb/ORB.java: changed Copyright line a little :-)

2003-09-12  Gerald Brose  <gerald.brose@acm.org>

        * Version 2.0 beta 2 released.

2003-09-12  Nicolas Noffke  <nicolas.noffke@web.de>

        * idl/FixedPointType.java: (getIDLTypeName) added new method

2003-09-12  Gerald Brose  <gerald.brose@acm.org>

        * idl/Value.java: (accept) changed, now delegates the call

        * idl/ValueDecl.java: class made public
        (accept) method added for visitor pattern

        * idl/ValueBoxDecl.java: class made public
        (accept) added for visitor pattern

        * idl/ValueAbsDecl.java: class made public
        (accept) method added for visitor pattern

2003-09-12  Andre Spiegel  <spiegel@gnu.org>

        * idl/Member.java (setPackage): Safeguard against declarators
        being null.

        * idl/OpDecl.java (c'tor): Don't use setPackage() because the
        package has already been set for all subelements (fix for bug
        #379).

2003-09-12  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/util/WildcardMap.java: removed unused member

        added method hashCode to class WCEntry

        these bugs have been reported by the findbugs tool

        * notification/util/LogConfiguration.java: close stream after usage

        this bug has been reported by the findbugs tool

        * notification/evaluate/ResultExtractor.java: removed unused member

        this bug has been reported by the findbugs tool

        * notification/evaluate/EvaluationException.java: added ctor

        * notification/engine/TaskProcessor.java: removed unused member

        this bug has been reported by the findbugs tool

        * notification/engine/TaskConfigurator.java:
        added logoutput in empty catch blocks.

        this bug has been reported by the findbugs tool

        * notification/engine/FilterProxySupplierTask.java:
        removed unused member

        * notification/engine/FilterConsumerAdminTask.java,
        notification/engine/AbstractFilterTask.java: cosmetics

        * notification/node/DomainNameShorthandNode.java,
        notification/node/EvaluationResult.java,
        notification/node/EventNameShorthandNode.java,
        notification/node/ImplicitOperatorNode.java,
        notification/node/PropertyShorthandNode.java,
        notification/node/SubstrOperator.java,
        notification/node/TCLCleanUp.java,
        notification/node/TypeNameShorthandNode.java: added logoutput in
        empty catch blocks.

        this bug has been reported by the findbugs tool

        * notification/FilterManager.java: added final to public static
        variable.

        this bug has been reported by the findbugs tool

        * notification/FilterImpl.java: not implemented methods throw
        NO_IMPLEMENT instead of doing nothing or returning null

        * notification/FilterFactoryImpl.java: added final to public
        static variable.

        this bug has been reported by the findbugs tool

        * notification/EventChannelImpl.java: not implemented methods
        throw NO_IMPLEMENT instead of doing nothing or returning null

        * notification/EvaluationContext.java: removed unused member

        * notification/ConstraintEntry.java: inner class EventTypeWrapper
        is static now as it does not use its reference to the outer class.

        this has been reported by findbugs!

        * notification/ChannelContext.java,
        notification/MappingFilterImpl.java: cosmetics

        * notification/SequenceProxyPushConsumerImpl.java: cosmetics

        removed unused member

        * notification/ProxyPushSupplierImpl.java: cosmetics

        (init) removed unused parameter

        * notification/NotificationEvent.java: renamed to AbstractMessage

        * notification/Main.java, notification/ApplicationContext.java,
        notification/AnyMessage.java: cosmetics

        * notification/AbstractProxy.java: not implemented methods throw
        NO_IMPLEMENT instead of doing nothing or returning null

        * notification/AbstractMessage.java: cosmetics

2003-09-12  Gerald Brose  <gerald.brose@acm.org>

        * idl/AnyType.java:
        (getIDLTypeName) added to override super class's definition

2003-09-10  Gerald Brose  <gerald.brose@acm.org>

        * idl/AttrDecl.java: made class public

2003-09-09  Gerald Brose  <gerald.brose@acm.org>

        * idl/TypeDef.java: (setEnclosingSymbol) added logger.error statement
        a little general cosmetics

        * idl/AliasTypeSpec.java:
        (print) fixed bug #294 by making the condition for printing the
        originalType a little more prescise.

        * idl/parser.java, idl/str_token.java, idl/sym.java,
        idl/AddExpr.java, idl/AliasTypeSpec.java, idl/AndExpr.java,
        idl/AnyType.java, idl/ArrayDeclarator.java,
        idl/ArraySizeMismatchException.java, idl/ArrayTypeSpec.java,
        idl/AttrDecl.java, idl/BaseType.java, idl/BooleanType.java,
        idl/Case.java, idl/CharType.java, idl/ConstDecl.java,
        idl/ConstExpr.java, idl/ConstExprEvaluator.java,
        idl/ConstType.java, idl/ConstrTypeSpec.java, idl/Declaration.java,
        idl/Declarator.java, idl/Definition.java, idl/Definitions.java,
        idl/DoubleType.java, idl/ElementSpec.java, idl/EnumType.java,
        idl/Environment.java, idl/ExceptionHolderTypeSpec.java,
        idl/FixedArraySize.java, idl/FixedPointConstType.java,
        idl/FixedPointType.java, idl/FloatPtType.java, idl/FloatType.java,
        idl/GlobalInputStream.java, idl/IDLTreeVisitor.java,
        idl/IdlSymbol.java, idl/IllegalRedefinition.java,
        idl/InitDecl.java, idl/InitParamDecl.java, idl/IntType.java,
        idl/Interface.java, idl/InterfaceBody.java, idl/JacIDL.java,
        idl/Literal.java, idl/LongLongType.java, idl/LongType.java,
        idl/Member.java, idl/MemberList.java, idl/Method.java,
        idl/Module.java, idl/MultExpr.java, idl/NameAlreadyDefined.java,
        idl/NameTable.java, idl/NativeType.java, idl/ObjectTypeSpec.java,
        idl/OctetType.java, idl/OpDecl.java, idl/Operation.java,
        idl/OrExpr.java, idl/ParamDecl.java, idl/ParseException.java,
        idl/PosIntConst.java, idl/PositionInfo.java, idl/PrimaryExpr.java,
        idl/RaisesExpr.java, idl/ReplyHandler.java,
        idl/ReplyHandlerTypeSpec.java, idl/Scope.java, idl/ScopeData.java,
        idl/ScopedName.java, idl/SequenceType.java, idl/ShiftExpr.java,
        idl/ShortType.java, idl/SimpleDeclarator.java,
        idl/SimpleTypeSpec.java, idl/Spec.java, idl/StateMember.java,
        idl/StringType.java, idl/StructType.java, idl/SwitchBody.java,
        idl/SwitchTypeSpec.java, idl/SymbolList.java,
        idl/TemplateTypeSpec.java, idl/Truncatable.java, idl/Type.java,
        idl/TypeCodeTypeSpec.java, idl/TypeDeclaration.java,
        idl/TypeDeclarator.java, idl/TypeDef.java, idl/TypeMap.java,
        idl/TypeSpec.java, idl/UnaryExpr.java, idl/UnionType.java,
        idl/Value.java, idl/ValueAbsDecl.java, idl/ValueBody.java,
        idl/ValueBoxDecl.java, idl/ValueDecl.java,
        idl/ValueInheritanceSpec.java, idl/VectorType.java,
        idl/VoidTypeSpec.java, idl/XorExpr.java, idl/fixed_token.java,
        idl/lexer.java:
        (set_package) minor change, but accross all classes: removed
         superflous calls to String() c'tor

        * idl/ConstDecl.java: (parse) added a logger.debug() statement

        * idl/PrimaryExpr.java:
        (pos_int_const) uses new ConstExprEvaluator for expressions that
        are scoped names, fixes bug #320

        * idl/ConstExprEvaluator.java: new class to evaluate const expr
        strings

        * idl/lexer.java: undid previous changes, which did not
        work (stupid me...)

        * idl/lexer.java: remove a superflous closing bracket left behind
        the last time....

        * idl/IdlSymbol.java: no longer a subclass of java.io.Serializable

        * idl/lexer.java: small improvement such as not to waste memory in
        String()

2003-09-09  Nick Cross  <nick.cross@prismtechnologies.com>

        * poa/POA.java: Fix for Jac371 - synchronized generateObjectId

2003-09-08  Gerald Brose  <gerald.brose@acm.org>

        * idl/DoubleType.java, idl/FixedPointType.java,
        idl/ScopedName.java, idl/parser.java, idl/sym.java: added
        setLongDouble to DoubleType, plus cosmetics

        * idl/lexer.java:
        (real_next_token) recognize wide char literals beginning with L,
        as in L'x'

        * idl/parser.cup: added a grammar rule for "long double", together
        with a warning that this type is not currently supported.

2003-09-04  Nicolas Noffke  <nicolas.noffke@web.de>

        * idl/CharType.java, idl/StringType.java:
        added operation getIDLTypeName()

        * idl/FixedPointType.java:
        made class public for access by foreign-package visitor

2003-09-03  Gerald Brose  <gerald.brose@acm.org>

        * idl/parser.java, idl/sym.java: *** empty log message ***

        * idl/Case.java: minor stuff only

        * idl/FixedArraySize.java, idl/ArrayDeclarator.java: cosmetics only

        * idl/PositionInfo.java: (toString) nicer

        * idl/ParseException.java: (getMessage) new method
        (c'tor) added a second one that takes PositionInfos

        * idl/parser.cup:
        (compileAndHandle) print nicer error message when a ParseException
        is caught

        * idl/GlobalInputStream.java: cosmetics only

        * idl/ParamDecl.java: (parse) add position parameter to ParseException

        * idl/lexer.java: add file to PositionInfos

        * idl/SequenceType.java, idl/Member.java: cosmetics only

        * idl/ArrayTypeSpec.java: (parse) fixed bug #84

        * idl/StructType.java:
        (parse) tolerate (skip) a second parse attempt, which is now
        possible
        (consequence of fix for bug #84).

        * idl/PosIntConst.java:
        (value) added a check for null or negative constants

        * idl/PosIntConst.java:
        (setExpression) new method called by the parser, now checks for
        valid integers

        * idl/IdlSymbol.java: new field myPosition which remembers the
        symbol's position in the IDL file, needed for better error
        messages.

        * idl/ParseException.java: added a field and a second c'tor to
        support error messages with line and position numbering

        * idl/ElementSpec.java: (parse) fixed bug #115

        * idl/build.xml, idl/javamapping/JavaMappingGeneratingVisitor.java:
        *** empty log message ***

        * idl/IDLTreeVisitor.java, idl/Value.java, idl/parser.cup,
        idl/parser.java, idl/sym.java: consolidated merge of the visitor
        branch

        * idl/ScopedName.java, idl/AnyType.java: made public

        * idl/Member.java: more public for visitor access

        * idl/SymbolList.java: now public, new methode elements()

        * idl/MemberList.java, idl/SimpleDeclarator.java: now public

        * idl/Declarator.java: joined in branch, now public

        * idl/Operation.java: joined in branch, now public
        (accept) new method

        * idl/Operation.java: interface made public

        * idl/AliasTypeSpec.java, idl/ArrayTypeSpec.java,
        idl/BaseType.java, idl/ConstrTypeSpec.java, idl/EnumType.java,
        idl/FloatType.java, idl/IntType.java, idl/LongLongType.java,
        idl/LongType.java, idl/NativeType.java, idl/ObjectTypeSpec.java,
        idl/OctetType.java, idl/SequenceType.java, idl/ShortType.java,
        idl/SimpleTypeSpec.java, idl/StringType.java, idl/StructType.java,
        idl/TemplateTypeSpec.java, idl/TypeDef.java, idl/TypeSpec.java,
        idl/UnionType.java, idl/VectorType.java, idl/VoidTypeSpec.java:
        mregd in visitor branch,
        (getIDLTypeName, getJavaTypeName) new methods

        * idl/TypeDeclaration.java: class now public
        (accept, getIDLTypeName, getJavaTypeName) new methods

        * idl/ParamDecl.java: (accept) new method class now public

        * idl/Declaration.java: (accept) new method

        * idl/Module.java: (accept) new method
        (getDefinitions) new method

        * idl/Definition.java, idl/Definitions.java: classes now public
        and with accept() methods for the visitor pattern

        * idl/Method.java: merged in branch: class now public, new methods
        accept() and isGetter()

        * idl/Interface.java, idl/InterfaceBody.java: merged in the
        visitor branch (made things more public)

        * idl/IdlSymbol.java: joined in changes from branch: made public,
        added a few comments, made set_included non-public

2003-09-02  Gerald Brose  <gerald.brose@acm.org>

        * idl/Spec.java: re-committed visitor-related change (class now
        public)

        * idl/parser.cup: *** empty log message ***

        * idl/OpDecl.java: (printMethod) restored Nick's version of this
        method

        * idl/OpDecl.java: tried to get Nick's changes back in

2003-09-02  Nick Cross  <nick.cross@prismtechnologies.com>

        * poa/RequestProcessor.java: Remove commented out code

2003-09-02  Gerald Brose  <gerald.brose@acm.org>

        * Version 2.0 beta 1 released.

2003-09-01  Nick Cross  <nick.cross@prismtechnologies.com>

        * poa/Current.java: Remove commented out code

2003-09-01  Gerald Brose  <gerald.brose@acm.org>

        * idl/TypeMap.java:
        (removeDefinition) new method, needed to fix bug #345 (fix joined in
        from a separate branch)

        * idl/NameTable.java: added fix for bug#345

        * util/Version.java: *** empty log message ***

2003-09-01  Nick Cross  <nick.cross@prismtechnologies.com>

        * util/Version.java, util/tracing/ClientTraceInterceptor.java,
        util/tracing/ServerTraceInterceptor.java, util/tracing/Timer.java,
        util/tracing/TraceInitializer.java,
        util/tracing/TraceTreeNode.java,
        util/tracing/TracingServiceImpl.java: Removed unused imports

        * ir/gui/remoteobject/ObjectRepresentantFactory.java: Remove comments

2003-08-31  Andre Spiegel  <spiegel@gnu.org>

        * idl/ValueDecl.java (printHelper): Add factory methods.  Fix for
        bug #228/#280.

        * idl/InitDecl.java (printHelperMethod): New method.

        * orb/giop/TransportManager.java (instantiateFactories): Use the
        context class loader, because JacORB might be on the
        bootclasspath, and the external transport on the normal classpath.

2003-08-29  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/Interface.java, idl/Method.java: More fixes for Jac286 -
        handle abstract

2003-08-29  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/SequenceProxyPushSupplierImpl.java: removed wrong
        import

2003-08-29  Gerald Brose  <gerald.brose@acm.org>

        [ new-backend-visitor branch ]

        * idl/IDLTreeVisitor.java: *** empty log message ***

        * idl/IDLTreeVisitor.java: New file.

2003-08-28  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/engine/TaskConfigurator.java,
        notification/engine/TaskProcessor.java: added properties to
        disconnect a failing consumer after a number of retries
        renamed method handle... to on...

        * notification/engine/AbstractTask.java:
        (doWork) renamed misleading variable name

        * notification/engine/AbstractDeliverTask.java,
        notification/engine/PushToConsumerTask.java,
        notification/engine/TimerDeliverTask.java: moved common behaviour
        to AbstractDeliverTask

        * notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java:
        (doWork) renamed misleading variable name

        * notification/engine/AbstractTaskPool.java:
        (class) changed visibility to public
        (ctor) added ctor

        * notification/interfaces/EventConsumer.java,
        notification/interfaces/TimerEventConsumer.java: merged Interfaces
        EventConsumer and TimerEventConsumer in EventConsumer

        * notification/README.PROPERTIES: documented new properties

        * notification/EventChannelFactoryImpl.java: renamed misleading
        variablename

        * notification/ConfigurableProperties.java,
        notification/Constants.java: added properties to disconnect a
        failing consumer after a number of retries

        * notification/AbstractProxy.java: added errorcounter to keep
        track of failed deliveries

        * notification/util/AbstractObjectPool.java: removed debug code

2003-08-28  Gerald Brose  <gerald.brose@acm.org>

        [ new-backend-visitor branch ]

        * idl/ScopedName.java, idl/StructType.java, idl/TypeDeclaration.java:
        new methods getIDLTypeName and getJavaTypeName as part of the
        preparation for new compiler backends added.

        * idl/TypeMap.java:
        (removeDefinition) new method, added while fixing bug #345

        * idl/NameTable.java:
        (define) fixed bug #345, ie. redefinitions of inherited types in a
        scope where blocked by the old types still lurking in the TypeMap
        table. Now remove the old type in define() before as part of the
        redefinition.

        * idl/BaseType.java, idl/FloatType.java, idl/IdlSymbol.java,
        idl/IntType.java, idl/LongLongType.java, idl/LongType.java,
        idl/OctetType.java, idl/ShortType.java, idl/SimpleTypeSpec.java,
        idl/TypeSpec.java: new getIDLTypeName() and getJavaTypeName()
        methods

2003-08-27  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/ConstraintEntry.java:
        (calcConstraintKey) moved method from class FilterUtils to class
        MessageUtils

        * notification/StructuredEventMessage.java:
        (getPriority) changed visibility to public

        * notification/FilterUtils.java, notification/MessageUtils.java:
        (calcConstraintKey) moved method from class FilterUtils to class
        MessageUtils

        * notification/EventChannelFactoryImpl.java:
        (ctor) removed no-args constructor because it wasn't used changed
               visibility to private as a factory method should be used

        * notification/AnyMessage.java:
        (getPriority) replaced "magic number" by an constant

        * notification/AbstractMessage.java:
        (getPriority) changed visibility to public

2003-08-27  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASTargetInterceptor.java,
        security/sas/SASTargetInitializer.java,
        security/sas/SASClientInitializer.java: Cleanup

2003-08-27  Gerald Brose  <gerald.brose@acm.org>

        [ new-backend-visitor branch ]

        * idl/AliasTypeSpec.java, idl/ArrayTypeSpec.java,
        idl/AttrDecl.java, idl/ConstrTypeSpec.java, idl/Declaration.java,
        idl/Declarator.java, idl/Definition.java, idl/Definitions.java,
        idl/EnumType.java, idl/IdlSymbol.java,
        idl/IllegalRedefinition.java, idl/Interface.java,
        idl/InterfaceBody.java, idl/JacIDL.java, idl/Member.java,
        idl/MemberList.java, idl/Method.java, idl/Module.java,
        idl/NameTable.java, idl/NativeType.java, idl/ObjectTypeSpec.java,
        idl/OpDecl.java, idl/Operation.java, idl/ParamDecl.java,
        idl/ScopedName.java, idl/SequenceType.java, idl/ShortType.java,
        idl/SimpleDeclarator.java, idl/SimpleTypeSpec.java, idl/Spec.java,
        idl/StringType.java, idl/StructType.java, idl/SymbolList.java,
        idl/TemplateTypeSpec.java, idl/TypeDeclaration.java,
        idl/TypeDef.java, idl/TypeSpec.java, idl/UnionType.java,
        idl/Value.java, idl/VectorType.java, idl/VoidTypeSpec.java,
        idl/parser.cup, idl/parser.java, idl/sym.java: first version of
        new compiler backend using the visitor pattern

2003-08-26  David R Robison  <drrobison@openroadsconsulting.com>

        * notification/EventChannelFactoryImpl.java: setDaemon(false)

2003-08-25  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AbstractAdmin.java,
        notification/AbstractMessage.java,
        notification/AbstractProxy.java, notification/AdminBase.java,
        notification/AnyMessage.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java,
        notification/CollectionsWrapper.java,
        notification/ConfigurableProperties.java,
        notification/Constants.java,
        notification/ConsumerAdminTieImpl.java,
        notification/EvaluationContext.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/FilterFactoryImpl.java, notification/FilterImpl.java,
        notification/FilterUtils.java, notification/Main.java,
        notification/MappingFilterImpl.java,
        notification/MessageFactory.java, notification/MessageUtils.java,
        notification/NotificationAnyEvent.java,
        notification/NotificationEvent.java,
        notification/NotificationEventFactory.java,
        notification/NotificationEventUtils.java,
        notification/NotificationStructuredEvent.java,
        notification/Properties.java, notification/PropertyManager.java,
        notification/PropertyValidator.java, notification/ProxyBase.java,
        notification/ProxyPullConsumerImpl.java,
        notification/ProxyPullSupplierImpl.java,
        notification/ProxyPushConsumerImpl.java,
        notification/ProxyPushSupplierImpl.java, notification/README,
        notification/README.PROPERTIES,
        notification/SequenceProxyPullConsumerImpl.java,
        notification/SequenceProxyPullSupplierImpl.java,
        notification/SequenceProxyPushConsumerImpl.java,
        notification/SequenceProxyPushSupplierImpl.java,
        notification/StructuredEventMessage.java,
        notification/StructuredProxyPullConsumerImpl.java,
        notification/StructuredProxyPullSupplierImpl.java,
        notification/StructuredProxyPushConsumerImpl.java,
        notification/StructuredProxyPushSupplierImpl.java,
        notification/SupplierAdminTieImpl.java, notification/build.xml,
        notification/engine/AbstractFilterTask.java,
        notification/engine/AbstractTask.java,
        notification/engine/AbstractTaskPool.java,
        notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java,
        notification/engine/FilterTaskBase.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/PushToConsumerTask.java,
        notification/engine/Task.java, notification/engine/TaskBase.java,
        notification/engine/TaskConfigurator.java,
        notification/engine/TaskPoolBase.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TimerDeliverTask.java,
        notification/evaluate/DynamicEvaluator.java,
        notification/evaluate/FilterConstraint.java,
        notification/evaluate/ResultExtractor.java,
        notification/grammar/comp-lexer.g,
        notification/grammar/tcl-lexer.g, notification/grammar/tcl.g,
        notification/interfaces/AbstractPoolable.java,
        notification/interfaces/AdminEvent.java,
        notification/interfaces/ApplicationEvent.java,
        notification/interfaces/Disposable.java,
        notification/interfaces/EventChannelEvent.java,
        notification/interfaces/EventConsumer.java,
        notification/interfaces/FrameworkEvent.java,
        notification/interfaces/Message.java,
        notification/interfaces/Poolable.java,
        notification/interfaces/ProxyCreationRequestEvent.java,
        notification/interfaces/ProxyCreationRequestEventListener.java,
        notification/interfaces/ProxyDisposedEvent.java,
        notification/interfaces/ProxyEvent.java,
        notification/interfaces/TimerEventSupplier.java,
        notification/node/AbstractTCLNode.java,
        notification/node/AbstractTCLVisitor.java,
        notification/node/AndOperator.java,
        notification/node/ArrayOperator.java,
        notification/node/AssocOperator.java,
        notification/node/BoolValue.java,
        notification/node/ComponentName.java,
        notification/node/ComponentPositionOperator.java,
        notification/node/CurrentTimeNode.java,
        notification/node/DefaultOperator.java,
        notification/node/DivOperator.java,
        notification/node/DomainNameShorthandNode.java,
        notification/node/DotOperator.java,
        notification/node/DynamicTypeException.java,
        notification/node/EqOperator.java,
        notification/node/EvaluationResult.java,
        notification/node/EventNameShorthandNode.java,
        notification/node/ExistOperator.java,
        notification/node/GtOperator.java,
        notification/node/GteOperator.java,
        notification/node/IdentValue.java,
        notification/node/ImplicitOperatorNode.java,
        notification/node/InOperator.java,
        notification/node/LtOperator.java,
        notification/node/LteOperator.java,
        notification/node/MinusOperator.java,
        notification/node/MultOperator.java,
        notification/node/NeqOperator.java,
        notification/node/NotOperator.java,
        notification/node/NumberValue.java,
        notification/node/OrOperator.java,
        notification/node/PlusOperator.java,
        notification/node/PropertyShorthandNode.java,
        notification/node/RuntimeVariableNode.java,
        notification/node/StaticTypeChecker.java,
        notification/node/StaticTypeException.java,
        notification/node/StringValue.java,
        notification/node/SubstrOperator.java,
        notification/node/TCLCleanUp.java, notification/node/TCLNode.java,
        notification/node/TCLVisitor.java,
        notification/node/TypeNameShorthandNode.java,
        notification/node/UnionPositionOperator.java,
        notification/node/VisitorException.java,
        notification/queue/AbstractBoundedEventQueue.java,
        notification/queue/BoundedDeadlineEventQueue.java,
        notification/queue/BoundedFifoEventQueue.java,
        notification/queue/BoundedPriorityEventQueue.java,
        notification/queue/EventQueue.java,
        notification/queue/EventQueueFactory.java,
        notification/queue/EventQueueOverflowStrategy.java,
        notification/queue/HeapEntry.java,
        notification/queue/QueueUtil.java,
        notification/util/AbstractObjectPool.java,
        notification/util/CachingWildcardMap.java,
        notification/util/JDK14PatternWrapper.java,
        notification/util/LogConfiguration.java,
        notification/util/ObjectPoolBase.java,
        notification/util/PatternWrapper.java,
        notification/util/ThreadPool.java,
        notification/util/WildcardMap.java: too many changes to check in
        the single files.

        removed tabs from all files.

        reformated sources according to Coding Style.

        renamed all abstract classes according to name schema
        Abstract<ClassName>.

        renamed  NotificationEvent to Message.

        added QoS: DiscardPolicy and OrderPolicy.

        added Testcases to test the QoS support classes.

2003-08-22  Francisco Reverbel  <reverbel@ime.usp.br>

        * ir/IDLType.java, ir/IdlWriter.java, ir/OperationDef.java,
        ir/PrimitiveDef.java, ir/StructDef.java, ir/TypeCodeUtil.java,
        orb/Any.java, orb/CDRInputStream.java, orb/CDROutputStream.java,
        orb/ORBSingleton.java, orb/TypeCode.java, orb/dynany/DynAny.java,
        orb/dynany/DynAnyFactoryImpl.java, orb/dynany/DynArray.java,
        orb/dynany/DynEnum.java, orb/dynany/DynFixed.java,
        orb/dynany/DynSequence.java, orb/dynany/DynStruct.java,
        orb/dynany/DynUnion.java:

        Changes aiming at typecode interoperability:

           - Removed poteentially unsafe casts to org.jacorb.orb.TypeCode.

           - Casts to org.jacorb.orb.TypeCode are performed only when they
             are guaranteed to succeed (instanceof checks were added to
             ensure this).

           - A JacORB typecode can now refer to foreign typecodes. It
             should be possible to create a JacORB typecode describing,
             say, a struct whose field types are described by foreign
             typecodes. All but one typecode-valued fields of
             org.jacorb.orb.TypeCode had the field type changed from
             org.jacorb.orb.TypeCode to org.omg.CORBA.TypeCode.

           - The single typecode-valued TypeCode field whose type remained
             JacORB-specific is actualTypecode, used by recursive
             typecodes.  Therefore a recursive typecode created by JacORB
             cannot be used to build a foreign typecode.

2003-08-20  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/iiop/IIOPListener.java: Create server sockets with a
        non-null binding address if (and only if) the property "OAIAddr"
        has been set. No "OAIAddr" setting means that the listener should
        accept connections on any/all local addresses.

2003-08-20  Gerald Brose  <gerald.brose@acm.org>

        * idl/UnionType.java: (printUnionClass) fixed bug #373 by
        prepending "_" in the right place

2003-08-20  Francisco Reverbel  <reverbel@ime.usp.br>

        * ir/ConstantDef.java, ir/Contained.java, ir/ExceptionDef.java,
        ir/IRFilenameFilter.java, ir/IRObject.java, ir/RepositoryID.java,
        ir/RepositoryImpl.java: Removed superfluous "import
        org.jacorb.orb.TypeCode" statements.
        (None of these classes was actually using
        org.jacorb.orb.TypeCode.)

2003-08-19  Gerald Brose  <gerald.brose@acm.org>

        * idl/StructType.java:
        (printStructClass) added code to print a toString() method (bug
        #336)

2003-08-19  Andre Spiegel  <spiegel@gnu.org>

        TypeCode interop patch <mrobinson@towertech.com>

        * orb/CDROutputStream.java:
        (write_value(TypeCode,OutputStream): Replace JacORB's
        TypeCode._kind() with standard TypeCode.kind().value().

        * orb/CDRInputStream.java:
        (read_value(TypeCode,OutputStream): Replace JacORB's
        TypeCode._kind() with standard TypeCode.kind().value().

        * orb/Any.java:
        (originalType): Implement locally, rather than relying on JacORB's
        specific TypeCode implementation.

2003-08-18  Andre Spiegel  <spiegel@gnu.org>

        * orb/ParsedIOR.java (getComponent): Search the effective profile
        first, then MULTIPLE_COMPONENTS.
        (getLongComponent): Use the above.
        (getStringComponent): New method, also uses the above.
        (getCodebaseComponent): Delegate to getStringComponent().
        (StringHelper): New private class.

2003-08-18  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/iiop/IIOPListener.java: Use getHostName instead of
        getHostAddress so an address patched in by OAIAddr is returned
        correctly.

        * idl/JacIDL.java, idl/ScopedName.java, idl/parser.cup,
        idl/parser.java, idl/sym.java: Remove -i option from compiler as
        not needed. Fixes Jac#347

2003-08-18  Andre Spiegel  <spiegel@gnu.org>

        * orb/ParsedIOR.java (getCodebaseComponent): Override prev change,
        search effective profile first, then MULTIPLE_COMPONENTS.  Add
        comment.

        * orb/ORB.java (createIOR): Fix bug which didn't put the
        MULTIPLE_COMPONENTS list into the componentMap used by IOR
        interceptors.

2003-08-18  Francisco Reverbel  <reverbel@ime.usp.br>

        * naming/NameServer.java, naming/NamingContextImpl.java: Minor
        changes in NamingContextImpl: fields orb and rootPoa are now
        static, added static init method to initialize these fields.

        * poa/POA.java: Fixed NPE in calls to reference_to_servant() on a
        POA with NON_RETAIN and USE_SERVANT_MANAGER: check if aom is non
        null before calling isDeactivating() on it.

        * orb/ParsedIOR.java: getCodebaseComponent() looks for the
        codebase component in the top-level components, then in the
        effective profile.

2003-08-17  Andre Spiegel  <spiegel@gnu.org>

        * poa/RequestQueue.java (add): Handle new properties queue_wait
        and queue_min.
        (getElementAndRemove, removeFirst, removeLast): Call
        this.notifyAll().

        * util/Environment.java (queue_min, queue_wait): New POA
        properties.

        * orb/iiop/IIOPListener.java (createEndPointProfile): Put the
        configured host address into the profile, not necessarily the real
        one.

2003-08-15  Nick Cross  <nick.cross@prismtechnologies.com>

        * naming/NameServer.java: server_timeout first uses property
        system then defaults to 10000

        * naming/NameServer.java: Tab removal

        * idl/Interface.java, idl/InterfaceBody.java, idl/Method.java,
        idl/OpDecl.java, idl/Operation.java: Fix for Jac286 abstract
        interface helper/holder

        * notification/build.xml: Don't abort entire compilation if JDK13
        & regexp package isn't available; just output message

        * build.xml, orb/build.xml, util/build.xml: Correct deletion
        paths, do template copying first.

        * collection/build.xml, concurrency/build.xml,
        orb/portableInterceptor/build.xml,
        orb/standardInterceptors/build.xml, poa/build.xml,
        transaction/build.xml: Remove empty targets

2003-08-15  Simon McQueen  <sm@prismtechnologies.com>

        * build.xml: Moved 'utils' in front of 'orb' in subdir - orb
        depends on it.

2003-08-15  Nick Cross  <nick.cross@prismtechnologies.com>

        * util/build.xml: Correct delete for clean task

2003-08-15  Simon McQueen  <sm@prismtechnologies.com>

        * build.xml: Moved 'util' in front of 'orb' in subdir - orb
        depends on it.

        * build.xml: Moved 'utils' in front of 'orb' in subdir - orb
        depends on it.

2003-08-15  Andre Spiegel  <spiegel@gnu.org>

        * orb/build.xml (compile): Change connection package to
        org.jacorb.orb.giop.

2003-08-15  Nick Cross  <nick.cross@prismtechnologies.com>

        * poa/AOM.java: Fix for Jac344/RT964 POA activate/deactivate
        object (AOM plus test)

2003-08-15  Andre Spiegel  <spiegel@gnu.org>

        * security/ssl/sun_jsse/ServerInvocationInterceptor.java,
        security/ssl/iaik/ServerInvocationInterceptor.java,
        security/ssl/iaik/SSLSocketFactory.java,
        security/ssl/iaik/SSLServerSocketFactory.java,
        security/sas/SASTargetInterceptor.java,
        security/sas/SASClientInterceptor.java,
        security/sas/JsseContextValidator.java,
        security/sas/GssUpContextValidator.java, proxy/ProxyImpl.java,
        poa/RequestProcessor.java, poa/POA.java, orb/util/PrintIOR.java,
        orb/util/FixIOR.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java,
        orb/iiop/ClientIIOPConnection.java, orb/dsi/ServerRequest.java,
        orb/dii/Request.java, orb/ReplyReceiver.java,
        orb/ProfileSelector.java, orb/ORB.java,
        orb/LocateReplyReceiver.java, orb/ExceptionHolderImpl.java,
        orb/Delegate.java, orb/DefaultProfileSelector.java,
        orb/ClientInterceptorHandler.java, orb/CDROutputStream.java,
        orb/CDRInputStream.java, orb/BasicAdapter.java,
        imr/ImplementationRepositoryImpl.java: Use org.jacorb.orb.giop
        instead of org.jacorb.orb.connection.

        * orb/http/ClientConnection.java, orb/http/ServerConnection.java,
        orb/http/httpserver/ServeConnection.java,
        orb/http/httpserver/ServeInputStream.java,
        orb/http/httpserver/ServeOutputStream.java: Repackaged from
        org.jacorb.orb.connection.http into org.jacorb.orb.http.

        * orb/giop/BiDirConnectionClientInterceptor.java,
        orb/giop/BiDirConnectionInitializer.java,
        orb/giop/BiDirConnectionServerInterceptor.java,
        orb/giop/BiDirPolicy.java, orb/giop/BiDirPolicyFactory.java,
        orb/giop/ClientConnection.java,
        orb/giop/ClientConnectionManager.java,
        orb/giop/ClientGIOPConnection.java, orb/giop/CodeSet.java,
        orb/giop/ConnectionListener.java, orb/giop/GIOPConnection.java,
        orb/giop/GIOPConnectionManager.java,
        orb/giop/LFUSelectionStrategyImpl.java,
        orb/giop/LFUStatisticsProviderImpl.java,
        orb/giop/LRUSelectionStrategyImpl.java,
        orb/giop/LRUStatisticsProviderImpl.java,
        orb/giop/LocateReplyInputStream.java,
        orb/giop/LocateReplyOutputStream.java,
        orb/giop/LocateRequestInputStream.java,
        orb/giop/LocateRequestOutputStream.java,
        orb/giop/MessageInputStream.java,
        orb/giop/MessageOutputStream.java, orb/giop/MessageReceptor.java,
        orb/giop/MessageReceptorPool.java, orb/giop/Messages.java,
        orb/giop/NoBiDirClientRequestListener.java,
        orb/giop/NoBiDirServerReplyListener.java,
        orb/giop/ReplyInputStream.java, orb/giop/ReplyListener.java,
        orb/giop/ReplyOutputStream.java, orb/giop/ReplyPlaceholder.java,
        orb/giop/RequestInputStream.java, orb/giop/RequestListener.java,
        orb/giop/RequestOutputStream.java,
        orb/giop/SelectionStrategy.java,
        orb/giop/ServerGIOPConnection.java,
        orb/giop/ServerRequestListener.java,
        orb/giop/ServiceContextTransportingInputStream.java,
        orb/giop/ServiceContextTransportingOutputStream.java,
        orb/giop/StatisticsProvider.java, orb/giop/TransportManager.java:
        Repackage org.jacorb.orb.connection into org.jacorb.orb.giop.  All
        callers updated.

2003-08-13  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/VectorType.java: RT1010 Fix for JDK122 ObjectHelper (OMG 1536)

2003-08-12  Andre Spiegel  <spiegel@gnu.org>

        * orb/IIOPAddress.java: Add comments to explain port number format.
        Fix for Jac#368.

2003-08-11  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * orb/iiop/IIOPListener.java (Acceptor): set daemon status for
        Acceptorthread

2003-08-11  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: Rationalise port/host -
        add imr.host. (RT809) Change some System.out to Debug.info (RT875)

        * orb/CDROutputStream.java: Undo last - mistaken commit

        * orb/CDROutputStream.java: Rationalise port/host - add
        imr.host. (RT809) Change some System.out to Debug.info (RT875)

        * orb/Delegate.java: Fix for RT892/Jac208_part1. Process preinvoke
        result better and don't mask exceptions within it.

        * orb/util/PrintIOR.java: Print hostname rather than IP

        * orb/ORB.java: Add comment

2003-08-11  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java (bind): If there is no effective profile,
        throw a COMM_FAILURE.

        * orb/DefaultProfileSelector.java (selectProfile): Return null if
        the list is empty.

        * util/Environment.java (_init): Make it public for now.

2003-08-08  Andre Spiegel  <spiegel@gnu.org>

        * orb/dns/DNSLookupDelegateImpl.java: Removed.

2003-08-02  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/AdminBase.java,
        notification/FilterFactoryImpl.java, notification/FilterImpl.java,
        notification/FilterManager.java,
        notification/MappingFilterImpl.java,
        notification/NotificationAnyEvent.java,
        notification/NotificationEvent.java,
        notification/NotificationEventFactory.java,
        notification/NotificationEventUtils.java,
        notification/NotificationStructuredEvent.java,
        notification/PropertyManager.java,
        notification/PropertyValidator.java, notification/ProxyBase.java,
        notification/engine/FilterConsumerAdminTask.java,
        notification/engine/FilterIncomingTask.java,
        notification/engine/FilterOutgoingTask.java,
        notification/engine/FilterProxyConsumerTask.java,
        notification/engine/FilterProxySupplierTask.java,
        notification/engine/FilterSupplierAdminTask.java,
        notification/engine/FilterTaskBase.java,
        notification/engine/FilterTaskUtils.java,
        notification/engine/PullFromSupplierTask.java,
        notification/engine/Task.java, notification/engine/TaskBase.java,
        notification/engine/TaskConfigurator.java,
        notification/engine/TaskPoolBase.java,
        notification/engine/TaskProcessor.java,
        notification/interfaces/FilterStage.java:
        - added MappingFilters
        - added support for QoS Settings StartTime, StopTime, Timeout

        * notification/ProxyPullConsumerImpl.java,
        notification/ProxyPullSupplierImpl.java,
        notification/ProxyPushConsumerImpl.java,
        notification/ProxyPushSupplierImpl.java,
        notification/SequenceProxyPullConsumerImpl.java,
        notification/SequenceProxyPullSupplierImpl.java,
        notification/SequenceProxyPushConsumerImpl.java,
        notification/SequenceProxyPushSupplierImpl.java,
        notification/StructuredProxyPullConsumerImpl.java,
        notification/StructuredProxyPullSupplierImpl.java,
        notification/StructuredProxyPushConsumerImpl.java:
        - cleaned imports
        - code cleanup
        - added log statements

        * notification/StructuredProxyPushSupplierImpl.java: cleaned imports

        * notification/README.PROPERTIES: added info

        * notification/build.xml: added sourcepath arg

        * notification/build.xml: renamed target

        * notification/EventChannelFactoryImpl.java: - cleaned imports
        - code cleanup
        - added log statements

        * notification/ConsumerAdminTieImpl.java,
        notification/EventChannelImpl.java,
        notification/EvaluationContext.java,
        notification/ConstraintEntry.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java:
        - cleaned imports

2003-08-01  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/ConsumerAdminTieImpl.java,
        notification/StructuredProxyPushSupplierImpl.java,
        notification/SupplierAdminTieImpl.java:
        - added comments

        * notification/AdminBase.java: - put call to ProxyBase.dispose()
        inside try/catch to continue AdminBase.dispose() if one of the
        calls to ProxyBase.dispose() fails.

        * notification/README, notification/build.xml: changed build to
        allow dependency checking for javac.  added README info

2003-07-31  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/build.xml: changed the way the jdk version is
        determined

2003-07-30  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java,
        notification/Main.java, notification/util/GNUPatternWrapper.java,
        notification/util/JDK14PatternWrapper.java,
        notification/util/PatternWrapper.java:
        - better error messages in PatterWrapper
        - added commandline option -registerName

2003-07-28  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: Tab removal - white space
        change only

        * idl/Interface.java: Fix for Jac285 - invalid code generated for
        subinterfaces of abstract interfaces. Changed interface and added
        regression.

        * idl/parser.cup, idl/parser.java: Change Environment.output to
        use logger and remove -p as no longer exists.

        * idl/IdlSymbol.java: Fix spelling and remove Environment.output

2003-07-27  David R Robison  <drrobison@openroadsconsulting.com>

        * notification/StructuredProxyPushSupplierImpl.java: Debug Statement

2003-07-23  David R Robison  <drrobison@openroadsconsulting.com>

        * notification/StructuredProxyPushSupplierImpl.java: Trap
        exception when disconnecting consumer

2003-07-21  David R Robison  <drrobison@openroadsconsulting.com>

        * naming/NamingContextImpl.java: jacorb.naming.noping

2003-07-20  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java,
        notification/FilterFactoryImpl.java,
        notification/util/LogConfiguration.java: added logconfiguration by
        setting properties in jacorb_properties the logging can be
        configured in a basic way

        * notification/EventChannelFactoryImpl.java,
        notification/ProxyPullConsumerImpl.java,
        notification/StructuredProxyPullConsumerImpl.java,
        notification/util/PatternWrapper.java:
        - fixed bug: missing property in jacorb_properties caused Exception
        - fix: class PatternWrapper is loaded at startup. this way a
          ClassNotFoundException (jdkversion < 1.4 and gnu.regexp NOT
          installed) occurs at startup.

2003-07-19  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java, notification/README:
        - added commandline option -writeIOR to write IOR to a file

2003-07-18  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java, notification/Main.java:
        - added no args factorymethod

        * notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java, notification/Main.java,
        notification/build.xml: EventChannelFactoryImpl is started via
        Class which implements WrapperListener Interface. This way the
        NotificationService can shutdown properly.
        - update Wrapper Configuration
        - fixed bug: EventChannelFactoryImpl.disposed() caused
          ConcurrentModificationException

2003-07-18  David R Robison  <drrobison@openroadsconsulting.com>

        * notification/EventChannelFactoryImpl.java: Notify and Naming as
        NT Services

2003-07-17  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/interfaces/TimerEventConsumer.java,
        notification/interfaces/TimerEventSupplier.java: Codecleanup

        * notification/interfaces/ProxyCreationRequestEventListener.java:
        Codecleanup: Organize Imports

        * notification/interfaces/Poolable.java: *** empty log message ***

        * notification/evaluate/FilterConstraint.java,
        notification/evaluate/ResultExtractor.java,
        notification/node/AndOperator.java,
        notification/node/AssocOperator.java,
        notification/node/BoolValue.java,
        notification/node/ComponentName.java,
        notification/node/DefaultOperator.java,
        notification/node/DivOperator.java,
        notification/node/DomainNameShorthandNode.java,
        notification/node/DynamicTypeException.java,
        notification/node/EqOperator.java,
        notification/node/EvaluationResult.java,
        notification/node/EventNameShorthandNode.java,
        notification/node/ExistOperator.java,
        notification/node/GtOperator.java,
        notification/node/GteOperator.java,
        notification/node/IdentValue.java,
        notification/node/ImplicitOperator.java,
        notification/node/ImplicitOperatorNode.java,
        notification/node/InOperator.java,
        notification/node/LtOperator.java,
        notification/node/LteOperator.java,
        notification/node/MinusOperator.java,
        notification/node/MultOperator.java,
        notification/node/NeqOperator.java,
        notification/node/NotOperator.java,
        notification/node/NumberValue.java,
        notification/node/OrOperator.java,
        notification/node/PlusOperator.java,
        notification/node/PropertyShorthandNode.java,
        notification/node/RuntimeVariableNode.java,
        notification/node/StaticTypeChecker.java,
        notification/node/StaticTypeException.java,
        notification/node/StringValue.java,
        notification/node/SubstrOperator.java,
        notification/node/TCLCleanUp.java, notification/node/TCLNode.java,
        notification/node/TypeNameShorthandNode.java,
        notification/node/VisitorException.java: Codecleanup: Organize
        Imports

        * notification/ApplicationContext.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/FilterFactoryImpl.java, notification/README: its now
        possible to call ntfy.bat resp. EventChannelFactoryImpl with
        one of the parameters -printIOR or -printCorbaloc.

        * notification/CollectionsWrapper.java,
        notification/JDK13Collections.java,
        notification/JacORBCollections.java, notification/README,
        notification/build.xml: simplified CollectionsWrapper

2003-07-16  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/README: *** empty log message ***

        * notification/CollectionsWrapper.java,
        notification/JacORBCollections.java: fixed imports.  Interface
        java.util.RandomAccess is not available in a pre 1.4 JDK

        * notification/README: *** empty log message ***

        * notification/CollectionsWrapper.java,
        notification/JDK13Collections.java,
        notification/JDK13CollectionsWrapper.java,
        notification/JacORBCollections.java,
        notification/ProxyPullConsumerImpl.java,
        notification/ProxyPullSupplierImpl.java,
        notification/ProxyPushConsumerImpl.java,
        notification/ProxyPushSupplierImpl.java,
        notification/SequenceProxyPullSupplierImpl.java,
        notification/StructuredProxyPullConsumerImpl.java,
        notification/StructuredProxyPullSupplierImpl.java,
        notification/StructuredProxyPushConsumerImpl.java,
        notification/StructuredProxyPushSupplierImpl.java,
        notification/build.xml: fix: use reflection to determine which
        singletonList-impl is to be called.
        added build-option notification.build.jdk12 to
        notification/build.xml.

2003-07-15  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/JDK13CollectionsWrapper.java,
        notification/ProxyPullConsumerImpl.java,
        notification/ProxyPullSupplierImpl.java,
        notification/ProxyPushConsumerImpl.java,
        notification/ProxyPushSupplierImpl.java,
        notification/SequenceProxyPullSupplierImpl.java,
        notification/StructuredProxyPullConsumerImpl.java,
        notification/StructuredProxyPullSupplierImpl.java,
        notification/StructuredProxyPushConsumerImpl.java,
        notification/StructuredProxyPushSupplierImpl.java: - replaced
        calls to Collections.singletonList with call to
        JDK13CollectionsWrapper.singletonList

2003-07-14  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ORB.java: JavaDoc and fix for possible null ptr and masking
        exception (RT937)

2003-07-11  Andre Spiegel  <spiegel@gnu.org>

        * orb/iiop/IIOPListener.java (createServerConnection): New
        template method.
        (deliverConnection): Use it.

2003-07-04  Andre Spiegel  <spiegel@gnu.org>

        * orb/IIOPAddress.java (getHostname): Use our dns package for the
        inverse lookup.

        * orb/dns/build.xml: Adapt build rules to new choice in Delegate
        implementations.

        * orb/dns/JdkDelegateImpl.java: Initial revision.

        * orb/dns/XbillDelegateImpl.java: Renamed from DNSLookupDelegateImpl.

        * orb/dns/DNSLookup.java (jdk_DNS_Usable): New method.
        (createDelegate): Use it, and create either a JdkDelegateImpl,
        or an XbillDelegateImpl.

2003-07-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/build.xml: fixed classpath

        * notification/README,
        notification/notification_build.properties.unix_template,
        notification/notification_build.properties.win_template: removed
        unnecessary files

2003-07-03  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/CDROutputStream.java:
            - Added config property jacorb.interop.chunk_custom_rmi_valuetypes.
            - Removed two unused fields (resize_factor and null_ior_str) and a
              local variable (s_kind).

2003-07-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java: print out IOR to stdout

2003-07-03  Francisco Reverbel  <reverbel@ime.usp.br>

        * orb/build.xml: Compile org/jacorb/orb/iiop/*.java.

2003-07-03  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/EventChannelFactoryImpl.java,
        notification/FilterFactoryImpl.java: * test/regression/build.xml
          include notification testcases
        fixed testcases

        * build.xml, notification/build.xml: added concurrent.jar and
        antlr.jar to JacORB/lib
        - modified JacORB/bin/jacotemplate, JacORB/common.xml and
          JacORB/build.xml to include logkit.jar, antlr.jar and
          concurrent.jar in the classpath
        - modified JacORB/src/org/jacorb/build.xml to
          include notification build
        - modified JacORB/src/org/jacorb/notification/build.xml
          - removed check for antlr.jar and concurrent.jar
          - no need to generate CosNotify Classes here

2003-07-02  Andre Spiegel  <spiegel@gnu.org>

        * orb/BasicAdapter.java: Explain why some methods are deprecated.

        * orb/ORB.java (createIOR): Remove commented-out previous version.

2003-06-30  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/Delegate.java: Fix remote is_a while unmarshalling by adding
        attempt to get helper and narrow first.

        * util/Environment.java: Case in output change.

2003-06-23  Andre Spiegel  <spiegel@gnu.org>

        * orb/BasicAdapter.java (getListenerFactories): New method.
        (c'tor): Use it to choose which transports should listen.

        * orb/ORB.java (createIOR): Add profiles for all active
        transports.
        (findIIOPProfile): New method, used by the above.

        * orb/ParsedIOR.java:
        (decode(IOR)): Skip Profiles for which we have no Factories.
        Select the effectiveProfile based on the ProfileSelector.

        * orb/DefaultProfileSelector.java, orb/ProfileSelector.java:
        Initial revision.

        * orb/connection/TransportManager.java (factories): Field removed.
        (factoriesList, factoriesMap, profileSelector): New fields.
        (getFactories): Rewritten to take a profile tag argument.
        (getFactoriesList): New method.
        (getProfileSelector): New method.
        (instantiateFactories, loadFactories): New private methods.

        * orb/connection/ClientConnectionManager.java (getConnection):
        Throw a RuntimeException if we have no factory for the given
        profile.

        * util/Environment.java (getListProperty): New method.

        * orb/BasicAdapter.java (listeners): New field.  This is a List of
        Listener objects, replacing the former "listener" field.  Adapt
        all usages.

        * orb/ParsedIOR.java (iiopAddress, use_sas, use_ssl): Fields
        removed.
        (effectiveProfile): Make it an ETF Profile, rather than an
        IIOPProfile.
        (get_object_key): Delegate to new ETF Profile operation.
        (getComponent, getLongComponent, unifyTargetAddress): Alleviate
        dependence on IIOP.

        * orb/iiop/IIOPProfile.java (get_object_key): Renamed from
        getObjectKey(); this operation is now in the ETF interface.

2003-06-20  Andre Spiegel  <spiegel@gnu.org>

        * proxy/ProxyClientForwardInterceptor.java (redirectProxy): Use
        IIOPAddress.getIP() to get the IP address.

        * orb/iiop/IIOPProfile.java (marshal): Marshal either numeric or
        DNS addresses, depending on jacorb.dns.enable.
        (patchPrimaryAddress): Adapt to new methods in IIOPAddress.

        * orb/iiop/IIOPListener.java (createEndPointProfile): Use
        IIOPAddress.getIP() for the SSLAcceptor.

        * orb/iiop/ClientIIOPConnection.java (connect, createSocket): Use
        IIOPAddress.getIP().

        * naming/namemanager/ContextNode.java (update): Use
        IIOPAddress.getIP().

        * orb/util/PrintIOR.java (printIOR): Always print the IP address,
        at least for now.

        * orb/BasicAdapter.java (getAddress): Return either numeric or DNS
        address, depending on jacorb.dns.enable.

        * orb/IIOPAddress.java (host, getHost): Field and accessor method
        removed.
        (hostname, ip, getHostname, getIP): New fields and dynamic
        accessor methods.
        (isIP): New static private method.

2003-06-10  Nick Cross  <nick.cross@prismtechnologies.com>

        * naming/NameServer.java: Change %2D to - for clarity RT879

        * idl/lexer.java: Fix for Jac250 (elif directive)

2003-06-09  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/parser.cup, idl/parser.java, idl/sym.java: Fix for
        Jac#348 (exit code)

        * idl/Interface.java: Uncommented code (fix RT874) ->
        defaultPOA/Tie class.

2003-06-05  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/build.xml: * corrected syntax error

        * notification/AdminBase.java,
        notification/ApplicationContext.java,
        notification/ChannelContext.java, notification/Constants.java,
        notification/ConsumerAdminTieImpl.java,
        notification/EventChannelFactoryImpl.java,
        notification/EventChannelImpl.java,
        notification/EventTypeIdentifier.java,
        notification/FilterFactoryImpl.java, notification/FilterImpl.java,
        notification/KeyedListEntry.java,
        notification/NotificationAnyEvent.java,
        notification/NotificationEvent.java,
        notification/NotificationEventFactory.java,
        notification/NotificationEventUtils.java,
        notification/NotificationStructuredEvent.java,
        notification/Properties.java, notification/PropertyManager.java,
        notification/ProxyBase.java,
        notification/ProxyPullConsumerImpl.java,
        notification/ProxyPullSupplierImpl.java,
        notification/ProxyPushConsumerImpl.java,
        notification/README.PROPERTIES,
        notification/SequenceProxyPullConsumerImpl.java,
        notification/SequenceProxyPullSupplierImpl.java,
        notification/SequenceProxyPushConsumerImpl.java,
        notification/SequenceProxyPushSupplierImpl.java,
        notification/StructuredProxyPullConsumerImpl.java,
        notification/StructuredProxyPullSupplierImpl.java,
        notification/SupplierAdminTieImpl.java, notification/build.xml,
        notification/engine/TaskConfigurator.java,
        notification/engine/TaskProcessor.java,
        notification/engine/TimerDeliverTask.java,
        notification/evaluate/DynamicEvaluator.java,
        notification/evaluate/ResultExtractor.java,
        notification/grammar/CommonTokenTypes.txt,
        notification/grammar/tcl.g,
        notification/interfaces/AdminEvent.java,
        notification/interfaces/AdminEventListener.java,
        notification/interfaces/Disposable.java,
        notification/interfaces/EventChannelEvent.java,
        notification/interfaces/EventChannelEventListener.java,
        notification/interfaces/FrameworkEvent.java,
        notification/interfaces/ProxyCreationRequestEvent.java,
        notification/interfaces/ProxyDisposedEvent.java,
        notification/interfaces/ProxyDisposedEventListener.java,
        notification/interfaces/ProxyEvent.java,
        notification/interfaces/ProxyEventListener.java,
        notification/node/AndOperator.java,
        notification/node/AssocOperator.java,
        notification/node/ComponentName.java,
        notification/node/ComponentPositionOperator.java,
        notification/node/CurrentTimeNode.java,
        notification/node/DefaultOperator.java,
        notification/node/DivOperator.java,
        notification/node/DomainNameShorthandNode.java,
        notification/node/DotOperator.java,
        notification/node/EqOperator.java,
        notification/node/EvaluationResult.java,
        notification/node/ExistOperator.java,
        notification/node/GtOperator.java,
        notification/node/GteOperator.java,
        notification/node/ImmutableEvaluationResult.java,
        notification/node/ImplicitOperator.java,
        notification/node/ImplicitOperatorNode.java,
        notification/node/InOperator.java,
        notification/node/LtOperator.java,
        notification/node/LteOperator.java,
        notification/node/MinusOperator.java,
        notification/node/MultOperator.java,
        notification/node/NeqOperator.java,
        notification/node/NumberValue.java,
        notification/node/OrOperator.java,
        notification/node/PlusOperator.java,
        notification/node/PropertyShorthandNode.java,
        notification/node/RuntimeVariableNode.java,
        notification/node/SubstrOperator.java,
        notification/node/TCLCleanUp.java,
        notification/node/TCLVisitor.java,
        notification/node/TypeNameShorthandNode.java,
        notification/node/UnionPositionOperator.java,
        notification/util/CachingWildcardMap.java,
        notification/util/ObjectPoolBase.java,
        notification/util/ThreadPool.java,
        notification/util/WildcardMap.java: - finished support for
        Shorthand Notation in ETCL Expressions

          - added new AST classes
          - changed parser grammar

        - rewrote parts of expression evaluation. the code flow got a bit
        complicated

        - Codecleanup

        - introduced the possibility to configure some settings via
          jacorb_properties.

          three properties are supported see README.properties

2003-06-03  Nick Cross  <nick.cross@prismtechnologies.com>

        * util/Environment.java: Improve warning/change
        verbosity (RT#875), add back missing implname

2003-05-24  Andre Spiegel  <spiegel@gnu.org>

        * orb/util/FixIOR.java (main): Pass ORB argument when creating the
        ParsedIOR.

        * imr/ImplementationRepositoryImpl.java
        (ImRRequestListener.replyNewLocation):
        Pass ORB argument when creating a ParsedIOR.
        (SocketListener.run): Create a ServerIIOPConnection, rather than
        going via the TransportManager.

        * orb/BasicAdapter.java (c'tor): Create a Listener for the
        configured transport, rather than unconditionally for IIOP.
        (getAddress, getPort, getSSLPort, hasSSLListener): Mark them as
        deprecated and barf if we're not using IIOP.

        * orb/CDRInputStream.java (read_Object): Pass ORB argument when
        creating a ParsedIOR.

        * orb/Delegate.java (c'tor, set_policy_override): Pass ORB when
        creating a new ParsedIOR.

        * orb/ORB.java (getTransportManager): New method.

        * orb/ParsedIOR.java: (decode(IOR)): Use generic ETF transport to
        demarshal profiles.
        (c'tor): Add ORB argument, because we need it to get the ETF
        transport.

        * orb/connection/ClientConnectionManager.java (getConnection): Use
        ETF factory to create the connection.

        * orb/connection/TransportManager.java (factories): New field.
        (getFactories): Use it (singleton pattern).
        (createClientTransport, createServerTransport): Removed.

        * orb/iiop/IIOPConnection.java: Fix comment.

        * orb/iiop/IIOPFactories.java (create_connection): Implement it.

        * orb/iiop/IIOPListener.java (deliverConnection): Add SSL
        parameter.
        (Acceptor.deliverConnection, SSLAcceptor.deliverConnection): New
        methods, calling the above.

2003-05-23  Andre Spiegel  <spiegel@gnu.org>

        * orb/portableInterceptor/IORInfoImpl.java (components_iiop_profile,
        components_multi_profile): Removed.
        (components): New field.
        (c'tor): Take component Map as an argument.
        (add_ior_component, add_ior_component_to_profile): Use the new
        component map.

        * orb/BasicAdapter.java (getEndpointProfile): New method.

        * orb/TaggedComponentList.java (addAll, addComponent, isEmpty):
        New methods.

        * orb/MinorCodes.java (NO_SUCH_POLICY, NO_SUCH_PROFILE): New
        codes.

        * orb/ORB.java (createIOR): Rewritten to use the ETF transport
        mechanism.
        (create_ORB_TYPE_ID, createMultipleComponentsProfile,
        patchAddress): New methods.
        (always_add_1_0_profile): Removed; this is now in the Environment
        class.  Updated callers.

        * orb/iiop/IIOPProfile.java (patchPrimaryAddress, set_object_key,
        tag, to_GIOP_1_0): New methods.
        (marshal): Add a damn missing break.

        * util/Environment.java (giopAdd_1_0_Profiles, giopMinorVersion,
        imrProxyHost, imrProxyPort, iorProxyHost, iorProxyPort): New
        methods.

2003-05-22  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ORBSingleton.java, util/Environment.java: Move
        strict_check_on_tc_creation into Environment

2003-05-21  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/CDRInputStream.java: Fix tcMap usage in
        CDRInputStream (fixes #JAC7), repositoryId offset fix and missing
        closeEncapsulation

        * orb/CDROutputStream.java: Use accessor method

        * orb/ReplyReceiver.java: Add thread name

2003-05-19  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/TypeCode.java: Add debug

2003-05-15  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/AliasTypeSpec.java, idl/ArrayTypeSpec.java,
        idl/EnumType.java, idl/FixedPointType.java, idl/Interface.java,
        idl/SequenceType.java, idl/StructType.java, idl/UnionType.java,
        idl/ValueAbsDecl.java, idl/ValueBoxDecl.java, idl/parser.cup,
        idl/parser.java, idl/sym.java: Fixes for IDL compiler
        documentation (RT#831) and jdk14 global scope (RT#772)

        * idl/ConstDecl.java, idl/Literal.java: Fix for Jac#353 (const
        fixed definitions) and jdk14 global scope (RT#772)

        * idl/OpDecl.java: Fix for Jac#354 (exception / parameters)

        * idl/GlobalInputStream.java, idl/lexer.java: Fix for
        Jac#352 (parsing # & EOF)

        * idl/Method.java, idl/NameTable.java, idl/ScopedName.java: Remove
        commented out code

2003-05-09  Andre Spiegel  <spiegel@gnu.org>

        * orb/BasicAdapter.java: Largely rewritten to use the new IIOP
        transport.

        * orb/iiop/IIOPListener.java (Acceptor): Defer initialization to
        separate method, working around a jdk bug.
        (IIOPListener): Use deferred initialization for the acceptors.

        * orb/TaggedComponentList.java (addComponent): Fix it.

        * orb/iiop/IIOPListener.java (deliverConnection): Completed code
        to create a Connection from the Socket.

2003-05-07  Andre Spiegel  <spiegel@gnu.org>

        * proxy/ProxyClientForwardInterceptor.java (redirectProxy): Get
        the host address from the IIOPProfile, and be prepared for
        non-IIOP transports.

        * imr/ImplementationRepositoryImpl.java (SocketListener.run): Pass
        transport profile to GIOP connection.
        (checkServerActive): Don't pass SSL arg to connection manager.

        * orb/iiop/IIOPProfile.java (getSSLPort): New method.

        * orb/Delegate.java (bind): No need to init() the pior. Pass just
        the profile to GIOP, no more SSL at this level.
        (set_policy_override): No need to init() the pior.
        (useSSL): Method removed.

        * orb/ParsedIOR.java (getIIOPAddress, init, useSAS, useSSL):
        Removed.

        * orb/BasicAdapter.java (Listener.run): Pass null profile to
        GIOPConnection for the time being.

        * orb/connection/TransportManager.java (socket_factory,
        ssl_socket_factory): Made them public static, so that we can
        access them from Client_TCP_IP_Transport
        [temporary hack].

        * orb/connection/TCP_IP_Transport.java (connection_info, socket):
        Make them protected.
        (transport_manager): Field removed.
        (c'tor): Remove TransportManager argument.

        * orb/connection/ServerGIOPConnection.java (c'tor): Add profile
        argument.

        * orb/connection/Server_TCP_IP_Transport.java (c'tor): Remove
        TransportManager argument.

        * orb/connection/GIOPConnectionManager.java
        (createClientGIOPConnection,
        createServerGIOPConnection): Add profile arguments.

        * orb/connection/GIOPConnection.java (profile): New field.
        (c'tor): Initialize it.
        (write): Connect to this profile.

        * orb/connection/ClientGIOPConnection.java (c'tor): Add profile
        argument.

        * orb/connection/ClientConnectionManager.java (getConnection): Use
        an ETF profile as the only argument.  No more SSL.

        * orb/connection/Client_TCP_IP_Transport.java: Connection data is
        now received in connect() only. Removed all constructor
        parameters. Do SSL negotiation.

2003-05-06  Andre Spiegel  <spiegel@gnu.org>

        * orb/InternetIOPProfile.java: Removed

        * naming/namemanager/ContextNode.java, orb/util/PrintIOR.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java,
        imr/ImplementationRepositoryImpl.java, orb/Delegate.java,
        orb/ParsedIOR.java,
        orb/connection/BiDirConnectionServerInterceptor.java,
        orb/connection/ClientConnectionManager.java,
        orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/TransportManager.java, orb/iiop/IIOPFactories.java,
        orb/iiop/IIOPListener.java: Move org.jacorb.orb.InternetIOPProfile
        to org.jacorb.orb.iiop.IIOPProfile.

        * orb/iiop/IIOPProfile.java: Initial revision. This used to be
        org.jacorb.orb.InternetIOPProfile.

2003-05-05  Andre Spiegel  <spiegel@gnu.org>

        * orb/iiop/IIOPFactories.java, orb/iiop/IIOPListener.java: Initial
        revision.

        * orb/connection/TransportListener.java: Interface removed.

        * orb/TaggedComponentList.java (addComponent): Two new methods.

        * orb/InternetIOPProfile.java: Add method descriptions from ETF
        spec as Javadoc comments.
        (addComponent): Two new methods.

        * orb/BasicAdapter.java (ssl_socket_factory): Public, because we
        need it in the IIOPListener for now.

        * orb/connection/GIOPConnection.java: Don't implement
        TransportListener.
        (c'tor): Don't register yourself as a TransportListener.
        (getMessage): Call streamClosed() yourself for
        COMM_FAILURE. Return null for TRANSIENT.
        (readTimedOut): New abstract method.

        * orb/connection/TCP_IP_Transport.java (transport_listener): Field
        removed.
        (setTransportListener): Removed.
        (copy c'tor): Don't copy transport_listener.
        (read): Don't call transport_listener.streamClosed() on
        COMM_FAILURE; this is now done at the GIOP level.  Throw a
        TRANSIENT for interrupted I/O.

        * orb/connection/Transport.java (setTransportListener): Method removed.

2003-04-30  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/FilterImpl.java: * extracted Class ConstraintEntry
        to be in its own sourcefile as it is used outside of this Class

2003-04-29  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/TypeMap.java, idl/lexer.java, orb/BasicAdapter.java,
        orb/BufferManager.java, orb/CDRInputStream.java,
        orb/CDROutputStream.java, orb/Delegate.java, orb/EncapsInfo.java,
        orb/LocateReplyReceiver.java, orb/ReplyReceiver.java,
        orb/TypeCode.java, orb/connection/ClientConnection.java,
        orb/connection/ReplyPlaceholder.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/standardInterceptors/SASComponentInterceptor.java,
        orb/standardInterceptors/SSLComponentInterceptor.java,
        poa/RPPoolManager.java, util/Environment.java: Performance and
        memory usage improvements. Remove commented out code.

        * orb/ParsedIOR.java: Add null check

        * util/threadpool/LinkedListQueue.java,
        util/threadpool/ListElement.java,
        util/threadpool/ListElementPool.java,
        util/threadpool/ThreadPool.java,
        util/threadpool/ThreadPoolQueue.java: Use jdk2 collections

        * poa/AOM.java, poa/Current.java, poa/POAManager.java,
        poa/POAManagerMonitorImpl.java, poa/RequestQueue.java: Code cleanup

2003-04-29  Alphonse Bendt  <bendt@inf.fu-berlin.de>

        * notification/ConstraintEntry.java: forgot to check in the last time

2003-04-29  Andre Spiegel  <spiegel@gnu.org>

        * orb/TaggedComponentList.java (clone): New method.

2003-04-28  Andre Spiegel  <spiegel@gnu.org>

        * orb/InternetIOPProfile.java (clone): New method.
        (copy): Use it.
        (marshal): Implemented.
        (data): Field removed, we can now marshal ourselves.
        (c'tor): Don't store data.
        (asTaggedProfile): Marshal on the fly.

2003-04-28  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: Add missing null parameter

        * orb/connection/ClientGIOPConnection.java: Remove exception catch

2003-04-27  Andre Spiegel  <spiegel@gnu.org>

        * orb/connection/GIOPConnectionManager.java (statistics_provider_class):
        New field.
        (GIOPConnectionManager): Decide whether we should use
        StatisticsProviders.
        (getStatisticsProvider): New method.
        (createServerGIOPConnection): Use it.
        (createClientGIOPConnection): Use correct constructor
        arguments (but DON'T actually pass a StatisticsProvider to the
        connection).

        * orb/connection/ServerGIOPConnection.java (c'tor): New
        StatisticsProvider argument.
        (sendCloseConnection): Call the StatisticsProvider for flush().

        * orb/connection/ClientGIOPConnection.java (c'tor): New
        StatisticsProvider argument.

        * orb/connection/GIOPConnection.java (statistics_provider): New field.
        (c'tor): Initialize it with argument.
        (getStatisticsProvider): Return it.
        (getMessage, sendMessage, write): Use it.

        * orb/connection/TransportManager.java (statistics_provider_class):
        Field removed.
        (c'tor): Don't write to it.
        (createClientTransport, createServerTransport): Don't
        create StatisticsProviders; this is now done at the
        GIOP level.

        * orb/connection/Client_TCP_IP_Transport.java (c'tor):
        Remove StatisticsProvider argument.
        (connect): Don't notify, there's nobody waiting anymore.

        * orb/connection/Server_TCP_IP_Transport.java (c'tor):
        Remove StatisticsProvider argument.

        * orb/connection/TCP_IP_Transport.java (statistics_provider):
        Field removed.
        (getStatisticsProvider): Accessor removed.
        (c'tors): Remove StatisticsProvider handling.
        (flush, write): Don't collect statistics, this is now done
        one layer above.

        * orb/connection/Transport.java (getStatisticsProvider,
        turnOnFinalTimeout): Remove non-ETF methods.

        * orb/connection/ServerGIOPConnection.java (sendCloseConnection):
        Use this.write(), not transport.write().

        * orb/connection/GIOPConnection.java (connect_sync): New field.
        (waitUntilConnected): New method.
        (getMessage): Use it.
        (write): Connect if necessary, and notify.
        (closeCompletely): Notify.

        * orb/connection/Client_TCP_IP_Transport.java (waitUntilConnected):
        Removed.
        (close): Don't notify.
        (closed): Field removed.

        * orb/connection/Server_TCP_IP_Transport.java (waitUntilConnected):
        Remove.

        * orb/connection/TCP_IP_Transport.java (write): Don't call connect.

        * orb/connection/Transport.java (waitUntilConnected): Remove; this
        is now done at the GIOP level.

2003-04-26  Andre Spiegel  <spiegel@gnu.org>

        * orb/InternetIOPProfile.java (toString): New method.

        * orb/connection/BiDirConnectionServerInterceptor.java
        (receive_request_service_contexts):
        Use the ListenPoint profiles as keys for the connection, not the
        connection's profile itself.

        * orb/connection/ClientConnectionManager.java (addConnection): Add
        a second form that takes a Profile argument, redefine the first in
        terms of the second.

        * orb/connection/Client_TCP_IP_Transport.java (connected): Remove
        field, it is now in the superclass.
        (connect): Make signature ETF-compliant, although the arguments
        are still ignored.

        * orb/connection/Server_TCP_IP_Transport.java (c'tor): Set
        connected in superclass to true.
        (close): Set connected to false.
        (connect): Make signature ETF-compliant.

        * orb/connection/TCP_IP_Transport.java (connected, is_connected):
        New protected field and accessor method.
        (connect): Remove abstract non-ETF method.
        (write): Call ETF connect(), with dummy arguments.

        * orb/connection/Transport.java (connect, is_connected): New ETF
        methods.

2003-04-24  Andre Spiegel  <spiegel@gnu.org>

        * orb/connection/Transport.java (closeCompletely,
        closeAllowReopen): Replace with a plain close(), to comply with
        ETF.

        * orb/connection/Client_TCP_IP_Transport.java: Add "copy"
        constructor.
        (closeAllowReopen): Remove.
        (closeCompletely): Renamed to close().

        * orb/connection/Server_TCP_IP_Transport.java (closeAllowReopen):
        Remove; it wasn't allowed to be called anyway.
        (closeCompletely): Renamed to close().

        * orb/connection/TCP_IP_Transport.java: Add "copy" constructor.

        * orb/connection/ClientGIOPConnection.java (closeAllowReopen):
        Close the transport completely and create a new, unconnected one.

        * orb/connection/ServerGIOPConnection.java (sendCloseConnection):
        Call transport.close().

        * orb/connection/GIOPConnection.java (closeCompletely): Call
        transport.close().

2003-04-23  Andre Spiegel  <spiegel@gnu.org>

        * orb/connection/TCP_IP_Transport.java (isSSL): New abstract
        method, pushed down from TCP_IP_Transport.

        * orb/connection/Transport.java (isSSL): Push down to TCP_IP_Transport.

        * orb/connection/GIOPConnection.java (isSSL): If this is not a
        TCP_IP_Transport, return false.

2003-04-23  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ReplyReceiver.java: Fix jdk122 javac problem - modify
        accessors (java bug 4116802)

        * orb/connection/ServerGIOPConnection.java: Fix for jdk122
        compilation (java 4280591 bug)

2003-04-23  Andre Spiegel  <spiegel@gnu.org>

        * orb/connection/GIOPConnection.java (inbuf, msg_header): New
        fields.
        (getMessage): Use ETF-compliant read().
        (write): Use ETF-compliant write().

        * orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/Server_TCP_IP_Transport.java (waitUntilConnected):
        Public rather than protected, because it's in the interface now.

        * orb/connection/ServerGIOPConnection.java (sendCloseConnection):
        Use ETF-compliant write().

        * orb/connection/TCP_IP_Transport.java (read, write, flush): Make
        ETF-compliant.
        (readToBuffer): Rewritten as read(), see above.
        (to_COMM_FAILURE): New method.
        (waitUntilConnected): Stub has been moved up into the Transport
        interface for the time being.

        * orb/connection/Transport.java (read, write, flush): Make
        ETF-compliant.
        (waitUntilConnected): Pull up (temporary change).

2003-04-22  Andre Spiegel  <spiegel@gnu.org>

        * orb/connection/Client_TCP_IP_Transport.java (get_server_profile):
        Return an ETF profile rather than an IIOP profile.

        * orb/connection/ClientConnectionManager.java (addConnection):
        Don't expect a Client_TCP_IP_Transport, any ETF transport will do.

        * orb/connection/GIOPConnection.java (getMessage): New method,
        moved up from the transport layer.
        (dump_incoming): New field, used by the above.
        (receiveMessages): Use local implementation of getMessage().

        * orb/connection/Server_TCP_IP_Transport.java (profile): New
        attribute.
        (c'tor): Initialize it.
        (get_server_profile): ETF-conformant accessor.

        * orb/connection/TCP_IP_Transport.java (getMessage): Method
        removed; it is now up in GIOPConnection.
        (msg_header, buf_mg): Attributes removed.

        * orb/connection/Transport.java (getMessage): Method removed; it
        is now up in GIOPConnection.
        (get_server_profile): New abstract method.

2003-04-16  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/ORB.java, orb/connection/ServerRequestListener.java,
        orb/dsi/ServerRequest.java, util/Debug.java: Debug and POA Name
        scoping improvements. Removed commented out code.

2003-04-15  Nick Cross  <nick.cross@prismtechnologies.com>

        * poa/POAConstants.java: Update constants

2003-04-14  Andre Spiegel  <spiegel@gnu.org>

        * imr/ImplementationRepositoryImpl.java (checkServerActive): Make
        a profile and pass it to the connection manager, rather than host
        and port.

        * orb/Delegate.java (bind): Pass profile to ConnectionManager,
        rather than host and port.

        * orb/ORB.java (_get_object): Compare effective profiles rather
        than addresses.

        * orb/TaggedComponentList.java (getComponents): Improve comment.

        * orb/InternetIOPProfile.java (InternetIOPProfile): New
        constructor for address and object_key.
        (equals): Implemented.
        (getAlternateAddresses, getSSL): New methods.
        (hashCode): Implemented.
        (hash): Implement in terms of hashCode.
        (is_match): Compare primary and alternate addresses.

        * orb/IIOPAddress.java (hashCode): Implemented.
        (rawIP): New method, not yet used.
        (toCDR): New method.

        * orb/connection/TransportManager.java (createClientTransport):
        Take an InternetIOPProfile, rather than a host and a port, as
        argument.

        * orb/connection/BiDirConnectionServerInterceptor.java
        (receive_request_service_contexts): Drop second arg in call to
        ClientConnectionManager.addConnection().

        * orb/connection/ClientConnectionManager.java (getConnection):
        Take an InternetIOPProfile, rather than just an address.
        (connections): Use a Map rather than a Hashtable. Use profiles as
        keys rather than addresses.
        (addConnection): Drop second arg info.
        (releaseConnection, removeConnection, shutdown): Adapted to new
        connections table.

        * orb/connection/ClientConnection.java (get_server_profile): New
        method.

        * orb/connection/Client_TCP_IP_Transport.java (target_host,
        target_port): Replaced with target_profile.
        (use_ssl, sslPort): New attributes.
        (createSocket): New method that tries all alternative addresses in
        turn.
        (connect): Use it.
        (get_server_profile): New method.

2003-04-08  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/Any.java: Code tidy

        * idl/parser.cup, idl/parser.java, idl/sym.java: Improve message
        and mark deprecated for sloppy_names

        * util/ObjectUtil.java: Change debug level

        * poa/util/POAUtil.java: Add extractScopedPOANames

2003-04-07  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/connection/MessageOutputStream.java,
        orb/connection/RequestOutputStream.java,
        orb/connection/ServiceContextTransportingOutputStream.java: Code
        tidy (javadoc/remove commented out code)

2003-04-05  Andre Spiegel  <spiegel@gnu.org>

        * orb/TaggedComponentList.java (getComponentData): Use
        InvocationTargetException.getTargetException(), rather than
        getCause(), which is a JDK 1.4 addition.

2003-04-04  Francisco Reverbel <reverbel@ime.usp.br>

        * orb/ORBSingleton.java: Added property
        jacorb.interop.strict_check_on_tc_creation to control whether the
        method create_abstract_interface_tc performs a validity check on
        the name parameter or not. Turning this check off circumvents a
        bug in Sun's ValueHander, which occasionally passes an invalid
        name (an empty string) to create_abstract_interface_tc.

2003-04-04  Andre Spiegel  <spiegel@gnu.org>

        * orb/portableInterceptor/ClientRequestInfoImpl.java: Correct
        indentation.

        * orb/InternetIOPProfile.java: Untabify.

        * orb/Delegate.java: Correct indentation.

        * naming/namemanager/ContextNode.java (update): Adapt to new
        methods in ParsedIOR.

        * orb/util/PrintIOR.java: Adapt to new methods in ParsedIOR.

        * orb/portableInterceptor/ClientRequestInfoImpl.java: Untabify.

        * orb/portableInterceptor/ClientRequestInfoImpl.java
        (ClientRequestInfoImpl): Adapt to new methods in ParsedIOR,
        for setting effective_profile and effective_components.

        * orb/connection/ClientConnection.java (setCodeSet): Adapt to new
        methods of ParsedIOR.

        * orb/Delegate.java: Untabify.

        * orb/Delegate.java (bind, request): Adapt to new methods in
        ParsedIOR.

        * orb/ParsedIOR.java: Reorganized to use ETF profiles, and the
        corresponding JacORB classes
        (InternetIOPProfile, TaggedComponentList).  Lots of code removed.

        * orb/IIOPAddress.java (IIOPAddress): Wrap sign of large port
        numbers.
        (read): New static method.

        * orb/InternetIOPProfile.java, orb/TaggedComponentList.java:
        Initial revision.

2003-04-03  Andre Spiegel  <spiegel@gnu.org>

        * idl/Interface.java (printLocalBase): Fix typo in generated
        comment.

2003-04-02  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java, orb/ORB.java,
        orb/ParsedIOR.java: Allow mapObjectKey to work with IMR. Give it
        more options for resolving target key. Correct parsing of
        corbaname. (RT#754)

2003-04-02  Reimo Tiedemann  <tie@xtradyne.com>

        * poa/AOM.java: fixed synchronisation bug in _remove (a remove
        call prevents other clients from processing requests)

2003-04-02  Steve Osselton  <steve@prismtechnologies.com>

        * security/ssl/sun_jsse/SSLServerSocketFactory.java: Update from
        alex_ranous@hp.com

2003-04-01  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/JacIDL.java: Remove commented out code

        * orb/ORB.java: Normalise imr retrieval (RT#594). Remove commented
        out code.

        * imr/ImRAccessImpl.java: Remove debug statement

        * orb/ImRAccess.java: Add missing ;

        * imr/ImRAccessImpl.java: static connect and tidy (originally from
        create_poa nullpointer with imr failure RT#594)

        * orb/ImRAccess.java: Remove connect (now static)

        * imr/ImplementationRepositoryImpl.java: Allow list_servers to
        check_object_liveness (RT#580)

        * idl/AddExpr.java, idl/AliasTypeSpec.java, idl/ConstDecl.java,
        idl/Literal.java, idl/Member.java, idl/MultExpr.java: Fixes for
        long constants (Jac#260), dealias typedef (Jac#270)

        * idl/lexer.java: Fixes for long constants (Jac#260), dealias
        typedef (Jac#270), #if 0 processing (RT#627), -ve numbers

        * idl/parser.java, idl/sym.java, idl/parser.cup: Fixes for scoped
        recursive structs and unions (RT#457). System.exit removal for
        calling from ant script (RT#367). LongLong + Negative numbers
        fixes (Jac#260). i2jpackagefile flag (RT#414)

        * idl/ConstExpr.java: Remove commented out code

        * idl/ValueDecl.java, idl/ValueAbsDecl.java: Fixes for
        Jac#249 (null pointer with some ValueType IDL), Jac#302 (empty and
        forward declarations for ValueTypes), Jac#303 (stub interface
        generation with ValueType parameters)

        * idl/ScopeData.java: Fix for #pragma (Jac#201/RT#367)

        * idl/Scope.java: Removed whitespace

        * idl/IdlSymbol.java: Removed commented out code. Fix for
        #pragma (Jac#201/RT#367)

        * idl/BaseType.java: Fix for Jac#259

        * idl/ConstrTypeSpec.java: Removed unused code & commented out code

        * idl/UnionType.java: Public/Private

        * idl/ElementSpec.java, idl/ScopedName.java: Fix for packages for
        nested types (RT#459)

        * orb/BufferManager.java, orb/CDRInputStream.java,
        orb/CDROutputStream.java, orb/connection/MessageOutputStream.java:
        Fix for buffer memory allocation. (Jac#142/RT#554)

        * orb/connection/ServiceContextTransportingOutputStream.java: Fix
        for alignment of long longs (interop with eORB) (RT#663). Fix for
        buffer memory management. (RT#554/Jac#142)

        * orb/connection/MessageReceptorPool.java: Costructor private

        * orb/ApplicationExceptionHelper.java: Fix for calling method by
        reflection

        * util/Environment.java: Fix for unreadable characters in log
        file (RT#532)

        * poa/AOM.java, poa/POA.java, poa/POAMonitor.java,
        poa/POAMonitorImpl.java, poa/POAMonitorLightImpl.java,
        poa/RequestController.java, poa/RequestQueue.java,
        poa/gui/poa/POAFrame.java, poa/util/LogWriter.java,
        poa/util/POAUtil.java: Cleanup use of ByteArrayKey. Cleanup of
        LogWriter printing & unreadable characters in logfile.
        Jac#248/RT#424. RT#532

        * poa/util/ByteArrayKey.java: Cache hash value

        * proxy/ProxyClientForwardInterceptor.java: Fix for NullPtr in
        ParsedIOR (RT#571)

        * orb/ORB.java: Remove commented out code

        * orb/Delegate.java: Fix for NullPtr in ParsedIOR & ImrAccessImpl
        cleanup (RT#571,594)

        * orb/ParsedIOR.java: Prevent NullPointer Exception (now always
        construct ParsedIOR with ORB) (RT#571)

        * orb/util/FixIOR.java, orb/util/PrintIOR.java: Fix for
        NullPointer exception (RT#571)

        * orb/ORBConstants.java: Added VPVID comment

        * orb/BasicAdapter.java: Removed commented out code

        * security/ssl/iaik/SSLServerSocketFactory.java,
        security/ssl/iaik/SSLSocketFactory.java: Replace System.exit
        calls (RT#526)

        * util/Debug.java: Add comment

        * ir/InterfaceDef.java: Fix for #332 NullPointerException

        * naming/NameServer.java: Fix for #243 default key

        * util/CapsuleThread.java, util/Propla.java,
        util/ThreadSystemProperties.java, util/WeakHashtable.java: Remove
        unused code

        * orb/util/CorbaLoc.java: Fix to prevent Hex digit out of range
        exception for certain bytes. (RT487)

2003-03-31  Andre Spiegel  <spiegel@gnu.org>

        * proxy/ProxyClientForwardInterceptor.java (redirectProxy):
        Replace PIOR.getHost() with a call to the returned IIOPAddress
        object.

        * orb/IIOPAddress.java (equals): New method.

        * orb/ORB.java (_getObject): Use PIOR.getIIOPAddress() rather than
        getAddress() to compare addresses.

        * orb/Delegate.java (bind): Use the new address format in
        ParsedIOR.
        (get_adport): Removed, was unused.

        * orb/ParsedIOR.java (adport, getAdPost, getAddress, getHost,
        getPort): Removed.
        (iiopAddress, getIIOPAddress): New field and accessor to replace
        the above.
        (init): Handle the new way to store the address.

        * orb/IIOPAddress.java: Initial revision.

2003-03-31  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/JacIDL.java, idl/parser.cup, idl/parser.java, idl/sym.java:
        Renamed the "-p pack" switch to -omg, without parameters, changed
        the JacIDL ant task accordingly

2003-03-29  Francisco Reverbel <reverbel@ime.usp.br>

        * orb/CDRInputStream.java: - Removed superfluous checks for a
           zero-lenght array at the beginning of some read array
           methods. (The ones that remain are indeed needed to fix bug
           #327.)  - read_double_array changed to deal with chunking and
           alignment only once. It now calls the new auxiliary method
           _read_longlong.

2003-03-25  Gerald Brose  <gerald.brose@xtradyne.com>

        * orb/util/PrintIOR.java:
        (main) moved orb.shutdown() here from printIOR() (bug #331)

        * orb/ORB.java:
        (getRootPOA) changed exception handling for BasicAdapter
        creation (bug #319)

        * orb/BasicAdapter.java: changed exceptions to INITIALIZE in a
        couple of places (bug #319)

2003-03-22  Francisco Reverbel <reverbel@ime.usp.br>

        * orb/CDRInputStream.java: - Fixed bug in handle_chunking().  -
           Buffer alignment is now performed before obtaining the start
           position of a value is start_offset.  - Added tests to ensure
           that reading a zero-lenght array does not cause buffer
           realignment.

        * orb/CDROutputStream.java: Buffer alignment should be performed
        before entering into the value map the starting position of a
        value (or else the position entered into the map may not be the
        actual starting position of the value).

        * orb/ORBSingleton.java: Commented out call to checkTCName()
        within create_abstract_interface_tc().  Reason: Sun's ValueHandler
        calls create_abstract_interface_tc() passing an empty string as
        the name parameter. checkTCName() then throws
        `org.omg.CORBA.BAD_PARAM: Illegal blank IDL name'.

2003-03-11  Steve Osselton  <steve@prismtechnologies.com>

        * orb/ServantDelegate.java, orb/factory/PortRangeFactory.java,
        orb/factory/PortRangeServerSocketFactory.java,
        orb/factory/PortRangeSocketFactory.java: Port range server socket
        factory support added

2003-03-04  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/IdlSymbol.java, idl/OpDecl.java, idl/ScopedName.java,
        idl/parser.cup, idl/parser.java, idl/sym.java: adjusted a few
        logging priorities

        * idl/AddExpr.java, idl/AliasTypeSpec.java, idl/AndExpr.java,
        idl/AnyType.java, idl/ArrayDeclarator.java,
        idl/ArraySizeMismatchException.java, idl/ArrayTypeSpec.java,
        idl/AttrDecl.java, idl/BaseType.java, idl/BooleanType.java,
        idl/Case.java, idl/CharType.java, idl/ConstDecl.java,
        idl/ConstExpr.java, idl/ConstType.java, idl/ConstrTypeSpec.java,
        idl/Declaration.java, idl/Declarator.java, idl/Definition.java,
        idl/Definitions.java, idl/DoubleType.java, idl/ElementSpec.java,
        idl/EnumType.java, idl/Environment.java,
        idl/ExceptionHolderTypeSpec.java, idl/FixedArraySize.java,
        idl/FixedPointConstType.java, idl/FixedPointType.java,
        idl/FloatPtType.java, idl/FloatType.java,
        idl/GlobalInputStream.java, idl/IdlSymbol.java,
        idl/IllegalRedefinition.java, idl/InitDecl.java,
        idl/InitParamDecl.java, idl/IntType.java, idl/Interface.java,
        idl/InterfaceBody.java, idl/JacIDL.java, idl/Literal.java,
        idl/LongLongType.java, idl/LongType.java, idl/Member.java,
        idl/MemberList.java, idl/Method.java, idl/Module.java,
        idl/MultExpr.java, idl/NameAlreadyDefined.java,
        idl/NameTable.java, idl/NativeType.java, idl/ObjectTypeSpec.java,
        idl/OctetType.java, idl/OpDecl.java, idl/Operation.java,
        idl/OrExpr.java, idl/ParamDecl.java, idl/ParseException.java,
        idl/PosIntConst.java, idl/PositionInfo.java, idl/PrimaryExpr.java,
        idl/RaisesExpr.java, idl/ReplyHandler.java,
        idl/ReplyHandlerTypeSpec.java, idl/Scope.java, idl/ScopeData.java,
        idl/ScopedName.java, idl/SequenceType.java, idl/ShiftExpr.java,
        idl/ShortType.java, idl/SimpleDeclarator.java,
        idl/SimpleTypeSpec.java, idl/Spec.java, idl/StateMember.java,
        idl/StringType.java, idl/StructType.java, idl/SwitchBody.java,
        idl/SwitchTypeSpec.java, idl/SymbolList.java,
        idl/TemplateTypeSpec.java, idl/Truncatable.java, idl/Type.java,
        idl/TypeCodeTypeSpec.java, idl/TypeDeclaration.java,
        idl/TypeDeclarator.java, idl/TypeDef.java, idl/TypeMap.java,
        idl/TypeSpec.java, idl/UnaryExpr.java, idl/UnionType.java,
        idl/Value.java, idl/ValueAbsDecl.java, idl/ValueBody.java,
        idl/ValueBoxDecl.java, idl/ValueDecl.java,
        idl/ValueInheritanceSpec.java, idl/VectorType.java,
        idl/VoidTypeSpec.java, idl/XorExpr.java, idl/fixed_token.java,
        idl/lexer.java, idl/parser.cup, idl/parser.java,
        idl/str_token.java, idl/sym.java: changed logging interfaces, now
        uses Apache Avalon's logkit

2003-03-03  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/ArrayDeclarator.java, idl/ArrayTypeSpec.java, idl/Case.java,
        idl/ConstDecl.java, idl/ConstExpr.java, idl/Environment.java,
        idl/ParamDecl.java, idl/PosIntConst.java, idl/PrimaryExpr.java,
        idl/ScopedName.java: *** empty log message ***

2003-02-27  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java (invoke_internal): Don't forget to add the
        ReplyReceiver to pending_replies.

2003-02-26  Andre Spiegel  <spiegel@gnu.org>

        * orb/util/PrintIOR.java (printTaggedComponents):
        Fix name of TAG_ALTERNATE_IIOP_ADDRESS.

2003-02-23  Andre Spiegel  <spiegel@gnu.org>

        * poa/RequestProcessor.java (process): Wait for request start time
        *after* checking other timing constraints (conformance to JacORB
        documentation).
        (run): Send the reply before or after request processing,
        depending on SyncScope.

        * poa/RequestController.java (returnResult): Only return the
        result, don't finish the request off.
        (finish): New method, removes the request from the active request
        table.

        * orb/dsi/ServerRequest.java (syncScope): New method.

        * orb/connection/Messages.java (responseExpected): Adapt to
        SyncScope.

        * orb/connection/GIOPConnection.java, orb/ReplyReceiver.java:
        Remove superfluous import.

        * orb/Delegate.java (invoke_oneway, passToTransport): New methods.
        (invoke_internal): Use them.

2003-02-21  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/Case.java, idl/ParamDecl.java, idl/parser.cup,
        idl/parser.java, idl/sym.java, ir/AliasDef.java, ir/ArrayDef.java,
        ir/AttributeDef.java, ir/ConstantDef.java, ir/Contained.java,
        ir/Container.java, ir/ExceptionDef.java, ir/IRObject.java,
        ir/InterfaceDef.java, ir/ModuleDef.java, ir/OperationDef.java,
        ir/PrimitiveDef.java, ir/RepositoryID.java, ir/SequenceDef.java,
        ir/StringDef.java, ir/StructDef.java, ir/UnionDef.java,
        ir/WstringDef.java,
        ir/gui/typesystem/remote/RemoteTypeSystem.java,
        orb/CDRInputStream.java, orb/CDROutputStream.java,
        orb/TypeCode.java, orb/dynany/DynAny.java,
        orb/dynany/DynSequence.java, util/Assertion.java,
        util/AssertionViolation.java, util/Debug.java: Removed myAssert,
        Assertion.

        * build.xml, imr/build.xml: Simplify/use common.xml

        * idl/IdlSymbol.java: Change escape name to only prevent escaping
        of org.omg.Messaging

2003-02-21  Andre Spiegel  <spiegel@gnu.org>

        * orb/dsi/ServerRequest.java: Untabified.

2003-02-18  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java (getSyncScope): New method.
        (request): Use it to pass the SYNC_SCOPE to the
        RequestOutputStream.

        * orb/connection/RequestOutputStream.java (syncScope): New field
        and accessor method.
        (<init>): New argument syncScope; handle appropriately for GIOP
        1.2.

2003-01-13  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/SASTargetInitializer.java,
        security/sas/SASTargetInterceptor.java: Moved
        SecurityAttributeService to initializer

2003-01-13  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * imr/ImplementationRepositoryImpl.java: adapted to changes in
        orb/connection

        * orb/connection/ClientConnection.java,
        orb/connection/ClientGIOPConnection.java,
        orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/CloseConnectionException.java,
        orb/connection/GIOPConnection.java,
        orb/connection/GIOPConnectionManager.java,
        orb/connection/MessageReceptor.java,
        orb/connection/ServerGIOPConnection.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/StreamClosedException.java,
        orb/connection/TCP_IP_Transport.java,
        orb/connection/Transport.java,
        orb/connection/TransportListener.java: enhanced support for
        CloseConnection messages

2003-01-11  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/Literal.java, idl/ScopedName.java, idl/lexer.java, idl/parser.cup:
        Fixes for bugs #304/306 and #231 (ScopdeName)

2003-01-10  Francisco Reverbel <reverbel@ime.usp.br>

        * orb/CDRInputStream.java:
           - CDRInputStream now handles chunking. Chunk boundaries may appear
             anywhere in the input stream, except within primitive types or
             arrays of primitive types, as mandated by the GIOP spec.
           - The methods read_value(), read_value(java.lang.Class clz), and
             read_value(java.io.Serializable value) now deal with IDLEntities
             marshaled as valueboxes.

        * orb/CDROutputStream.java:
           - CDROutputStream now performs chunking of valuetypes whenever
             chunking is mandated by the GIOP spec.
           - The methods
                 write_value(java.io.Serializable value)
             and
                 write_value(java.io.Serializable value, java.lang.Class clz)
             now handle IDLEntities correctly. Passing an IDLEntity to one of
             these methods causes the IDLEntity to be marshaled as a valuebox.
             The valuebox has an "RMI:" repository id, in conformance to the
             Java to IDL mapping.

        * util/ValueHandler.dummy, util/ValueHandler.real:
        Added ValueHandler methods isCustomMarshaled and writeReplace.

2003-01-10  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * imr/ImplementationRepositoryImpl.java: renamed ConnectionManager
        to ClientConnectionManager

2003-01-07  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/BasicAdapter.java, orb/ORB.java,
        orb/connection/AbstractConnection.java,
        orb/connection/BiDirConnectionServerInterceptor.java,
        orb/connection/ClientConnection.java,
        orb/connection/ClientConnectionManager.java,
        orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/ConnectionManager.java,
        orb/connection/GIOPConnection.java,
        orb/connection/GIOPConnectionManager.java,
        orb/connection/LFUSelectionStrategyImpl.java,
        orb/connection/LRUSelectionStrategyImpl.java,
        orb/connection/SelectionStrategy.java,
        orb/connection/ServerGIOPConnection.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/TCP_IP_Transport.java,
        orb/connection/Transport.java,
        orb/connection/TransportManager.java: restructured for support of
        CloseConnection messages

        * orb/Delegate.java, orb/ReplyReceiver.java,
        orb/connection/ReplyPlaceholder.java: removed "retries on
        commfailure" feature

2003-01-07  Andre Spiegel  <spiegel@gnu.org>

        * poa/RequestProcessor.java (process): Check timing policies.

        * orb/Delegate.java (ensureReplyStartTime): Removed.
        (releaseReply): Use Time.waitFor(), rather than the above.

        * orb/ReplyReceiver.java (DummyResponseHandler.createReply): Use
        Time.waitFor(), rather than Delegate.ensureReplyStartTime().

        * orb/dsi/ServerRequest.java (requestStartTime, requestEndTime,
        replyEndTime): New attributes & getters.
        (getTimingPolicies): New method, called from constructor.

        * util/Time.java (toCDR): Fix buffer handling.
        (fromCDR, waitFor): New methods.

2003-01-07  David R Robison  <drrobison@openroadsconsulting.com>

        * idl/Interface.java: added unchecked_narrow

2003-01-06  Andre Spiegel  <spiegel@gnu.org>

        * util/Time.java (toCDR): New method.

        * orb/connection/ClientConnection.java: *** empty log message ***

        * orb/connection/RequestOutputStream.java (createInvocationPolicies,
        getTimingPolicyValues): New methods.
        (<init>): Use them to create an INVOCATION_POLICIES service
        context for propagating the timing policies.

2003-01-05  Andre Spiegel  <spiegel@gnu.org>

        * orb/ReplyReceiver.java (roundtripTimeout): Rename to
        replyEndTime.

        * util/Time.java (corbaFuture): Return null if argument is
        negative.
        (earliest): New method.

        * orb/Delegate.java (invoke_internal): Adapt to new constructor of
        RequestOutputStream.
        (request): Handle the interaction between relative and absolute
        timeouts.

        * orb/connection/RequestOutputStream.java (requestStartTime,
        requestEndTime, replyEndTime): New attributes, set in constructor.
        (roundtripTimeout): Renamed to replyEndTime, see above.

2003-01-03  Gerald Brose  <gerald.brose@xtradyne.com>

        * security/level2/CredentialsImpl.java,
        security/level2/ReceivedCredentialsImpl.java: is_valid(): changed
        package of parameter UtcTHolder from Security to
        TimeBase (consequence of a change in the IDL compiler which
        results in a different inwinding of typedef'd out parameters).

        * idl/Interface.java, idl/InterfaceBody.java: syntactic clean up,
        minor: moved two print statements from Interface.java to
        InterfaceBody.java

        * idl/AliasTypeSpec.java: fixed bug #309 in holderName(),
        introduced new method doUnwind() in the course.

2002-12-20  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * Updated Copyright year to 2003

        * orb/policies/MaxHopsPolicy.java,
        orb/policies/QueueOrderPolicy.java,
        orb/policies/RebindPolicy.java,
        orb/policies/RelativeRequestTimeoutPolicy.java,
        orb/policies/RelativeRoundtripTimeoutPolicy.java,
        orb/policies/ReplyEndTimePolicy.java,
        orb/policies/ReplyPriorityPolicy.java,
        orb/policies/ReplyStartTimePolicy.java,
        orb/policies/RequestEndTimePolicy.java,
        orb/policies/RequestPriorityPolicy.java,
        orb/policies/RequestStartTimePolicy.java,
        orb/policies/RoutingPolicy.java,
        orb/policies/SyncScopePolicy.java: added LGPL copyright header

2002-12-12  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/CSSInitializer.java,
        security/sas/CSSInvocationInterceptor.java,
        security/sas/NT_GSSUPContextSpi.java,
        security/sas/NT_GSSUPMechFactory.java,
        security/sas/NT_GSSUPProvider.java,
        security/sas/TSSInitializer.java,
        security/sas/TSSInvocationInterceptor.java,
        security/sas/GSSUPProviderInitializer.java,
        security/sas/GssUpContextValidator.java,
        security/sas/ISASContextValidator.java,
        security/sas/JsseContextValidator.java,
        security/sas/SASClientInitializer.java,
        security/sas/SASClientInterceptor.java,
        security/sas/SASTargetInterceptor.java: New SAS Interceptors

2002-12-11  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/CSSInvocationInterceptor.java,
        security/sas/ISASContextValidator.java,
        security/sas/JsseContextValidator.java,
        security/sas/SASClientInitializer.java,
        security/sas/SASClientInterceptor.java,
        security/sas/SASTargetInitializer.java,
        security/sas/SASTargetInterceptor.java: New SAS Interceptors

        * security/level2/SunJssePrincipalAuthenticatorImpl.java:
        Authenticate on a Sun JSSE SSL socket

        * orb/standardInterceptors/SASComponentInterceptor.java: support
        no mechanism

        * orb/connection/GIOPConnection.java: Debug code

        * orb/standardInterceptors/SASComponentInterceptor.java: Fixed the
        setting of the use_stateful flag

2002-12-11  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/ReplyPlaceholder.java: added a default constructor

2002-12-05  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/Server_TCP_IP_Transport.java: removed
        "shudown[In|Out]put" calls - they seem to be unsafe

        * orb/Delegate.java, orb/ReplyReceiver.java,
        orb/connection/ReplyPlaceholder.java: added "remarshal on
        COMM_FAILURE" feature

2002-12-02  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/ConnectionManager.java,
        orb/connection/TransportManager.java: re-added ssl support (was
        lost when adding TransportManager)

        * orb/connection/Client_TCP_IP_Transport.java: added some more
        debug info

2002-11-27  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/LFUSelectionStrategyImpl.java: minor performance
        improvement

        * orb/connection/SelectionStrategy.java,
        orb/connection/TransportManager.java,
        orb/connection/StatisticsProvider.java: added some comments

        * orb/connection/TCP_IP_Transport.java: restructured is_readin
        usage

        * orb/connection/TransportManager.java: restructured
        synchronization

        * imr/ImplementationRepositoryImpl.java: adapted to new transport
        layer interfaces

2002-11-26  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/ConnectionManager.java,
        orb/connection/GIOPConnection.java,
        orb/connection/LFUSelectionStrategyImpl.java,
        orb/connection/LFUStatisticsProviderImpl.java,
        orb/connection/LRUSelectionStrategyImpl.java,
        orb/connection/LRUStatisticsProviderImpl.java,
        orb/connection/SelectionStrategy.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/StatisticsProvider.java,
        orb/connection/TCP_IP_Transport.java,
        orb/connection/Transport.java,
        orb/connection/TransportManager.java, orb/BasicAdapter.java,
        orb/ORB.java, orb/connection/Client_TCP_IP_Transport.java: various
        modifications for transport management

        * util/Environment.java: added methods getObjectProperty and
        getIntPropertyWithDefault

        * orb/ParsedIOR.java:
        (init) check for sas object needed check for ssl object as well

2002-11-24  Steve Osselton  <steve@prismtechnologies.com>

        * idl/lexer.java, idl/parser.cup, idl/parser.java, idl/sym.java:
        Fix for bug #293. int not being treated as normal reserved word

        * idl/lexer.java: notifyAll added to list of reserved words

2002-11-24  Andre Spiegel  <spiegel@gnu.org>

        * util/Version.java: Set version to 1.4.50 (CVS).

2002-11-22  Andre Spiegel  <spiegel@gnu.org>

        * idl/OpDecl.java (print_sendc_Method): Convert parameters to mode
        'in'.

        * idl/ParamDecl.java (asIn): New method.

2002-11-21  Andre Spiegel  <spiegel@gnu.org>

        *
        orb/portableInterceptor/ClientRequestInfoImpl.java (get_request_policy):
        Use delegate.get_policy() rather than
        delegate.get_policy_no_interceptors().  The latter is now removed,
        since it would not have avoided to call interceptors anyway.

        * util/Time.java: Initial revision.

        * orb/policies/RelativeRoundtripTimeoutPolicy.java
        (RelativeRoundtripTimeoutPolicy): With an Any parameter, make sure
        to extract a ulonglong.

        * orb/policies/RelativeRequestTimeoutPolicy.java
        (RelativeRequestTimeoutPolicy):
        With an Any parameter, make sure to extract a ulonglong.

        * orb/connection/RequestOutputStream.java (roundtripTimeout): New
        instance var.  Set in constructor, provide accessor method.

        * orb/connection/ReplyPlaceholder.java (getInputStream): Throw
        org.omg.CORBA.TIMEOUT rather than IMP_LIMIT for a timeout.

        * orb/ORB.java (hasPolicyFactoryForType): Clarify comment.

        * orb/ExceptionHolderImpl.java (ExceptionHolderImpl): New
        constructor for passing a SystemException directly.

        * orb/ReplyReceiver.java (Timer): New inner class.
        (DummyResponseHandler): Check for ReplyStartTime in createReply().
        (roundtripTimeout, timer): New instance vars, set in constructor.
        (replyReceived): If a timer is running, stop it.
        (performCallback): Create DummyResponseHandler on the fly.

        * orb/Delegate.java (get_policy): Check for client policies before
        asking the server.
        (get_policy_no_intercept): Removed, this was no longer needed.
        (ensureReplyStartTime, get_client_policy,
        getRelativeRequestTimeout, getRelativeRoundtripTimeout,
        getReplyEndTime, getReplyStartTime, getRequestEndTime,
        getRequestStartTime, replyDone): New methods.
        (set_policy_override): Don't check for factories, we don't need
        them for QoS policies.
        (request): Check end times and compute absolute timeouts.
        (releaseReply): Ensure that the ReplyStartTime has been reached.
        (invoke_internal): Pass roundtrip time to the ReplyReceiver.

2002-11-17  Francisco Reverbel <reverbel@ime.usp.br>

        * ir/RepositoryID.java: Fixed a bug in method className():

        - lastIndexOf(':') cannot be used to extract the class name from an
          RMI repository id, because the RMI repository id may have an optional
          serialization version UID string after the hash code string (e.g:
          "RMI:java.util.Hashtable:C03324C0EA357270:13BB0F25214AE4B8")

2002-11-16  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/OpDecl.java, idl/Value.java, idl/IdlSymbol.java: minor
        cosmetics

        * idl/ValueDecl.java: *** empty log message ***

2002-11-15  Andre Spiegel  <spiegel@gnu.org>

        * orb/ExceptionHolderImpl.java (exceptionFromHelper): Use
        RepositoryID.className().

        * orb/ApplicationExceptionHelper.java (insert): Use
        RepositoryID.className().

        * util/ObjectUtil.java (reposIdToClassName): Removed.  This
        algorithm is now part of RepositoryID.className().

        * ir/RepositoryID.java (className): Rewritten to handle reversed
        prefixes.  Add a second variant that takes a suffix to append to
        the class name.
        (reversePrefix): New method.

2002-11-14  Andre Spiegel  <spiegel@gnu.org>

        * orb/ORB.java (create_policy): Handle all policies from the
        messaging spec.

        * orb/policies/MaxHopsPolicy.java,
        orb/policies/QueueOrderPolicy.java,
        orb/policies/RebindPolicy.java,
        orb/policies/RelativeRequestTimeoutPolicy.java,
        orb/policies/RelativeRoundtripTimeoutPolicy.java,
        orb/policies/ReplyEndTimePolicy.java,
        orb/policies/ReplyPriorityPolicy.java,
        orb/policies/ReplyStartTimePolicy.java,
        orb/policies/RequestEndTimePolicy.java,
        orb/policies/RequestPriorityPolicy.java,
        orb/policies/RequestStartTimePolicy.java,
        orb/policies/RoutingPolicy.java,
        orb/policies/SyncScopePolicy.java: Initial revision.

2002-11-13  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/ClientConnection.java,
        orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/ConnectionListener.java,
        orb/connection/GIOPConnection.java,
        orb/connection/ServerRequestListener.java,
        orb/connection/TCP_IP_Transport.java,
        orb/connection/TimeOutException.java: some more updates/fixes for
        idle timeouts

2002-11-12  Andre Spiegel  <spiegel@gnu.org>

        * ir/RepositoryID.java (className): Swap "jacorb.org" if needed.

2002-11-12  Steve Osselton  <steve@prismtechnologies.com>

        * orb/ApplicationExceptionHelper.java: Fix for bug #287

        * util/ObjectUtil.java: New reposIdToClassName operation added

2002-11-09  Andre Spiegel  <spiegel@gnu.org>

        * orb/ReplyReceiver.java (performCallback): Use the ReplyHandler's
        delegate, not that of the calling stub.

2002-11-08  Andre Spiegel  <spiegel@gnu.org>

        * idl/JacIDL.java (_ami_callback, setAmi_callback): New field and
        accessor method.
        (execute): Pass it to the compiler.

2002-11-07  Andre Spiegel  <spiegel@gnu.org>

        * orb/CDROutputStream.java (write_char): When the char is out of
        range, throw DATA_CONVERSION rather than MARSHAL.  Fix for bug
        #290.

2002-11-05  Andre Spiegel  <spiegel@gnu.org>

        * orb/ExceptionHolderImpl.java: Fix typo in imports.

2002-11-04  Andre Spiegel  <spiegel@gnu.org>

        * idl/IdlSymbol.java (escapeName): Don't escape org.omg names.

        * orb/Delegate.java (pending_replies): Use a HashSet instead of a
        Hashtable.
        (doNotCheckExceptions): New accessor method.
        (bind): Use a LocateReplyReceiver instead of a ReplyPlaceholder.
        (rebind): Made it public.  Add new variant for
        org.omg.CORBA.Object.
        (invoke): Rename the original method to invoke_internal and
        rewrite, adding callbacks.  Add two new invoke() methods that call
        it.
        (try_rebind): New method.
        (get_pending_replies, lockBarrier, waitOnBarrier, openBarrier):
        New methods.

        * imr/ImplementationRepositoryImpl.java (checkServerActive): Use a
        LocateReplyReceiver instead of a ReplyPlaceholder.

        * orb/portableInterceptor/ClientRequestInfoImpl.java: New
        constructor that takes all the data in one go.

        * orb/connection/ReplyPlaceholder.java: Now an abstract class.
        Made various things protected.

        * orb/connection/ReplyInputStream.java (body_start): New field,
        set in constructor.
        (checkExceptions): Removed.
        (getStatus, getException): New methods.

        * orb/ReplyReceiver.java: Initial revision.

        * orb/ORB.java (_getObject): Made public.

        * orb/LocateReplyReceiver.java, orb/ExceptionHolderImpl.java,
        orb/ClientInterceptorHandler.java: Initial revision.

        * orb/CDRInputStream.java (orb): Initialize with a real ORB, not
        the Singleton.
        (read_untyped_value): Use the above method to get the orb, not
        just the field.

        * idl/InterfaceBody.java (addDefinition): New method.  A few
        simplifications.

        * idl/Interface.java (replyHandler): New field.
        (parse): Generate a ReplyHandler if compiler option is set.
        Output mechanism restructured.

        * idl/parser.java, idl/sym.java: Merge AMI changes.

        * idl/OpDecl.java (NO_ATTRIBUTE, ONEWAY): New symbolic constants.
        Update usage.
        (OpDecl): New constructors for in-memory usage.
        (print_sendc_method): New method.

        * idl/parser.cup (generate_ami_callback, generate_ami_polling):
        New public fields, set by command line options.
        (op_attribute, param_attribute): Use new symbolic constants.

        * idl/ReplyHandlerTypeSpec.java, idl/ReplyHandler.java: Initial
        revision.

        * idl/ParamDecl.java (MODE_IN, MODE_INOUT, MODE_OUT): New
        constants.  Update usage.
        (ParamDecl): Two new constructors for in-memory use.

        * idl/Operation.java (print_sendc_method): New method.

        * idl/Method.java (print_sendc_method): New method.
        (printMethod): Add linefeed.

        * idl/ExceptionHolderTypeSpec.java: Initial revision.

        * idl/Definition.java: Add new constructor with Declaration arg.

        * orb/connection/ReplyInputStream.java,
        orb/ExceptionHolderImpl.java, orb/ReplyReceiver.java,
        orb/LocateReplyReceiver.java, idl/ExceptionHolderTypeSpec.java:
        Comment changes.

2002-10-31  Andre Spiegel  <spiegel@gnu.org>

        * orb/connection/ReplyInputStream.java (body_start): New field,
        set in constructor.
        (getBody): New method.

        * orb/ReplyReceiver.java (performCallback): Handle both
        exceptional and non-exceptional replies.

        * orb/ExceptionHolderImpl.java: First working implementation.

        * orb/CDRInputStream.java (orb): Initialize with a real ORB, not
        the Singleton.
        (read_untyped_value): Use the above method to get the orb, not
        just the field.

2002-10-29  Andre Spiegel  <spiegel@gnu.org>

        * orb/connection/ReplyInputStream.java (checkExceptions): Removed.
        (getStatus): New method.

        * orb/ReplyReceiver.java (getReply): Rewritten to analyze reply
        status, rather than intercepting exceptions.
        (doRebind, getApplicationException): New methods.
        (intercept_exception, intercept_location_forward): Removed.

2002-10-28  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/TSSInitializer.java,
        security/sas/TSSInvocationInterceptor.java,
        orb/connection/GIOPConnection.java: Cubbyholes

2002-10-28  Andre Spiegel  <spiegel@gnu.org>

        * orb/ReplyReceiver.java (replyReceived, getReply): Move exception
        handling from the former to the latter.

2002-10-27  Andre Spiegel  <spiegel@gnu.org>

        * orb/ExceptionHolderImpl.java: Initial revision.

        * orb/ExceptionHolderImpl.java: New file.

        * idl/ReplyHandler.java (createOperationsFor): Uncomment exception
        methods.

        * idl/ExceptionHolderTypeSpec.java (printReadExpression,
        printWriteStatement): Use proper code for a valuetype.
        (getTypeCodeExpression): Return the correct expression.
        (id): Overridden to return the correct value without much fuss.

2002-10-26  Andre Spiegel  <spiegel@gnu.org>

        * idl/IdlSymbol.java (escapeName): Don't escape org.omg names.

2002-10-25  Andre Spiegel  <spiegel@gnu.org>

        * idl/TypeMap.java, idl/NameTable.java (init): Don't make the
        ReplyHandler definition here.

        * idl/ReplyHandler.java (parse): Make dummy definitions for
        org.omg.Messaging.ReplyHandler on demand.

        * idl/Interface.java (printLocalBase): Fix file name.

        * imr/ImplementationRepositoryImpl.java (checkServerActive): Use a
        LocateReplyReceiver instead of a ReplyPlaceholder.

        * orb/LocateReplyReceiver.java: Initial revision.

        * orb/LocateReplyReceiver.java: New file.

        * orb/ReplyReceiver.java: Moved here from connection.

        * orb/ReplyReceiver.java: New file.

        * orb/connection/ReplyReceiver.java: Removed.

        * orb/connection/ReplyPlaceholder.java: Now an abstract class.
        (getInputStream): Now protected: it should only be used by
        subclasses.

        * orb/Delegate.java (bind): Use a LocateReplyReceiver instead of a
        ReplyPlaceholder.
        (invoke_internal): Use ReplyReceiver.getReply().

2002-10-23  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * imr/ImplementationRepositoryImpl.java: adapted to new interface
        of GIOPConnection

2002-10-22  Andre Spiegel  <spiegel@gnu.org>

        * idl/InterfaceBody.java (printStubMethods): If we're in callback
        mode, generate sendc methods as well.

        * idl/Method.java, idl/OpDecl.java,
        idl/Operation.java (print_sendc_Method): New method.

        * idl/ReplyHandler.java: Fix naming. Comment out exception methods
        for now.  Generate stub and helper.

        * orb/Delegate.java (invoke_internal): New parameter async.
        (invoke): Use it.

        * orb/connection/ReplyReceiver.java (performCallback): Do it on
        the servant.
        (replyReceived): Synchronize properly.

2002-10-21  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java (invoke_internal): Pass operation to
        constructor of ReplyReceiver.

        * orb/connection/ReplyReceiver.java (operation): New field. Set in
        constructor.
        (DummyResponseHandler): New inner class and static field.
        (performCallback): New method.
        (replyReceived): Use it.
        (getInputStream): Overridden to throw a RuntimeException.

2002-10-21  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * security/ssl/sun_jsse/SSLServerSocketFactory.java: removed
        unneccessary import statements

2002-10-21  Andre Spiegel  <spiegel@gnu.org>

        * orb/Delegate.java (invoke_internal): Replaced with new
        implementation; remove old implementation.

2002-10-21  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/BasicAdapter.java, orb/Delegate.java,
        orb/connection/ClientConnection.java,
        orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/GIOPConnection.java,
        orb/connection/NoBiDirClientRequestListener.java,
        orb/connection/ServerRequestListener.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/TCP_IP_Transport.java,
        orb/connection/Transport.java, orb/dsi/ServerRequest.java: added
        support for timing out connections only if there are no pending
        messages

2002-10-20  Andre Spiegel  <spiegel@gnu.org>

        * orb/connection/ReplyReceiver.java: New file.

        * orb/ClientInterceptorHandler.java (handle_receive_exception,
        handle_receive_reply,handle_location_forward): New methods.

        * orb/Delegate.java (invoke_internal): Use original
        ReplyPlaceholder again.
        (invoke_new): Use ReplyReceiver.
        (doNotCheckExceptions, lockBarrier, waitOnBarrier, openBarrier,
        get_pending_replies, rebind (Object)): New methods.

        * orb/connection/ReplyPlaceholder.java: Made fields protected to
        allow subclassing. Removed ReplyHandler; this will be done in the
        subclass.

2002-10-18  Andre Spiegel  <spiegel@gnu.org>

        * orb/ClientInterceptorHandler.java: Initial revision.

        * orb/ClientInterceptorHandler.java: New file.

        * orb/Delegate.java (pending_replies): Use a Set instead of a
        Hashtable.
        (invoke_internal): Reflect this.
        (invoke_new): Rewrite of invoke_internal, not quite done yet.
        (rebind): Public rather than private (can be called from
        ClientInterceptorHandler).
        (try_rebind): New method.

2002-10-17  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GSSUPNameSpi.java,
        security/sas/TSSInvocationInterceptor.java: enforce SSL

        * orb/ParsedIOR.java: Parse SAS before SSL. Use SAS to determine
        SSL.

        * orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SASComponentInterceptor.java: Fixes to
        SASComponentInterceptor

2002-10-17  Andre Spiegel  <spiegel@gnu.org>

        * orb/portableInterceptor/ClientRequestInfoImpl.java: Add new
        constructor that does the initialization work itself.

        * orb/connection/ReplyPlaceholder.java (replyHandler): New field.
        Add new constructor that takes a ReplyHandler argument.

        * orb/ORB.java (_getObject): Make it public, since it is called
        from portableInterceptors as well.

        * orb/Delegate.java (invoke): Replace with two overloaded methods,
        one for the synchronous case and one for the asynchronous case.
        (invoke_internal): This is where the actual implementation is.

2002-10-16  Steve Osselton  <steve@prismtechnologies.com>

        * util/Environment.java: Fix for processing of maxManagedBufSize
        property

2002-10-15  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/CDRInputStream.java, orb/CDROutputStream.java,
        orb/ORBSingleton.java, orb/TypeCode.java: Fix for 266

        * orb/ParsedIOR.java: Fix for #277

        * orb/ORB.java: Fix bug 265

2002-10-15  Steve Osselton  <steve@prismtechnologies.com>

        * idl/UnionType.java: Union code generation fix for bugs 242, 275

        * util/Environment.java: JDK1.2 fix refit. Ooops

2002-10-15  Nick Cross  <nick.cross@prismtechnologies.com>

        * build.xml, collection/build.xml, concurrency/build.xml,
        events/build.xml, idl/build.xml, ir/build.xml, naming/build.xml,
        orb/build.xml, orb/dns/build.xml,
        orb/portableInterceptor/build.xml,
        orb/standardInterceptors/build.xml, poa/build.xml,
        security/build.xml, security/sas/build.xml,
        security/ssl/build.xml, security/ssl/iaik/build.xml,
        security/ssl/sun_jsse/build.xml, trading/build.xml,
        trading/client/build.xml, trading/db/build.xml,
        transaction/build.xml, util/build.xml, util/tracing/build.xml: Fix
        #274

2002-10-15  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Delegate.java: Fix for bug #276. Incorrect traget field set
        in ClientRequestInfo

        * orb/dns/DNSLookup.java: Enhancement #269. DNS support
        configuration property added

2002-10-14  Steve Osselton  <steve@prismtechnologies.com>

        * util/Debug.java, util/Environment.java: Enhancement #268. More
        logging configuration options

        * orb/CDROutputStream.java: Environment usage optimisation

2002-10-11  Andre Spiegel  <spiegel@gnu.org>

        * util/Environment.java: Add //#ifjdk blocks.
        (copyProps): New method, for jdk 1.1 compatibility.  Use it
        instead of Properties.addAll().

        * orb/portableInterceptor/InterceptorManager.java,
        orb/ParsedIOR.java, orb/ORB.java, orb/CDROutputStream.java,
        orb/CDRInputStream.java, naming/NameServer.java,
        ir/TypeCodeUtil.java, ir/RepositoryImpl.java,
        ir/RepositoryID.java, ir/IRServer.java: Add //#ifjdk blocks.

        * idl/ValueDecl.java (getTypeCodeExpression,
        getValueMemberExpression): For compatibility reasons, don't use
        symbolic constants.

2002-10-09  Steve Osselton  <steve@prismtechnologies.com>

        * proxy/ProxyServerForwardInterceptor.java, util/Environment.java:
        Fix for inconsistent ProxyServer URL property

2002-10-06  Andre Spiegel  <spiegel@gnu.org>

        * orb/ApplicationExceptionHelper.java (insert): Don't use
        StringBuffer.delete().

        * concurrency/LockSetFactoryImpl.java,
        concurrency/TransactionCoordinator.java,
        concurrency/TransactionalLockSetImpl.java, ir/ExceptionDef.java,
        ir/InterfaceDef.java, ir/StructDef.java, ir/TypeCodeUtil.java,
        ir/UnionDef.java, ir/gui/typesystem/TypeSystem.java,
        ir/gui/typesystem/remote/IRInterface.java,
        ir/gui/typesystem/remote/IRModule.java,
        ir/gui/typesystem/remote/IRRepository.java,
        ir/gui/typesystem/remote/IRTypedef.java,
        ir/gui/typesystem/remote/IRValue.java,
        ir/gui/typesystem/remote/RemoteTypeSystem.java,
        naming/ContextLister.java, naming/namemanager/ContextNode.java,
        naming/namemanager/NSTable.java,
        naming/namemanager/NSTableModel.java, orb/NVList.java,
        orb/dii/ExceptionList.java, security/util/KeyStoreUtil.java,
        transaction/Timer.java, util/CAD.java, util/Environment.java,
        util/WeakHashtable.java: Remove all qualified references to
        collection classes.

        * collection/CollectionImpl.java,
        collection/KeySortedCollectionImpl.java,
        collection/OrderedIteratorImpl.java,
        collection/PositionalIteratorImpl.java,
        collection/SortedRelationImpl.java, collection/util/DynArray.java:
        Intentional white space change.

        * idl/ConstrTypeSpec.java, idl/JacIDL.java, idl/TypeMap.java,
        idl/UnionType.java, idl/parser.cup, idl/parser.java: Remove all
        qualified uses of collection classes.

2002-10-05  Andre Spiegel  <spiegel@gnu.org>

        * Import collections as java.util.*, so that we can change it
        automatically.

        * idl/InterfaceBody.java (printOperationsHash): Use
        com.sun.java.util.collections.Hashtable under jdk 1.1.

        * idl/Interface.java (printIRHelper): Use
        com.sun.java.util.collections.Hashtable under jdk 1.1.

2002-10-01  Andre Spiegel  <spiegel@gnu.org>

        * idl/ExceptionHolderTypeSpec.java: Initial revision.

        * idl/ExceptionHolderTypeSpec.java: New file.

        * idl/ReplyHandler.java (createOperationsFor): Completed and
        simplified.
        (parameterList, excepParameterList): New methods.
        (id): Overridden to bypass the usual mechanism for creating a
        RepositoryId.
        (print): Print anything that seems to make sense.

        * idl/InterfaceBody.java (addDefinition): New method.
        (getMethods): Rewritten to handle ReplyHandlers properly.

        * idl/Interface.java (get_ids): Rewritten to handle ReplyHandlers
        properly.

2002-09-27  Nick Cross  <nick.cross@prismtechnologies.com>

        * build.xml, events/build.xml, util/build.xml: Clean up
        compilation so src/generated/CosEventChannelAdmin,
        src/generated/CosEventComm doesn't get built.

        * orb/build.xml,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/build.xml: Prevent SASInterceptor being
        built under 1.3

2002-09-26  Andre Spiegel  <spiegel@gnu.org>

        * idl/ReplyHandlerTypeSpec.java: Initial revision.

        * idl/ReplyHandlerTypeSpec.java: New file.

        * idl/ReplyHandler.java (createInheritanceSpec): Slightly reworked.
        (createOperations, createOperationsFor): New methods.
        (parse): Overridden to only parse the body.
        (print): Print Operations interface.

        * idl/TypeMap.java (init): Add entry for
        org.omg.Messaging.ReplyHandler.

        * idl/ParamDecl.java (MODE_IN, MODE_OUT, MODE_INOUT): New constant
        values for paramAttribute.  Update all uses.
        (ParamDecl): Two new constructors for creating ParamDecls within
        the parser.

        * idl/OpDecl.java (NO_ATTRIBUTE, ONEWAY): New constants.  Update
        all uses.
        (OpDecl): Two new constructors for creating OpDecls within the
        parser.

        * idl/NameTable.java (init): Add entry for
        org.omg.Messaging.ReplyHandler.

        * idl/Definition.java: New constructor that takes a declaration
        argument.

        * idl/parser.cup (op_attribute, param_attribute): Use symbolic
        names for attribute values.

        * idl/Interface.java (replyHandler): New attribute.

2002-09-24  Steve Osselton  <steve@prismtechnologies.com>

        * orb/CDROutputStream.java: Fix for bug #267. Repeated enumerated
        TypeCode's in type marshalled incorrectly

2002-09-23  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/CSSInvocationInterceptor.java,
        security/sas/TSSInvocationInterceptor.java,
        orb/standardInterceptors/SASComponentInterceptor.java: renamed
        properties

        * security/sas/CSSInvocationInterceptor.java,
        security/sas/TSSInvocationInterceptor.java: NO_PERMISSION

        * orb/MinorCodes.java, orb/ORBConstants.java: VMCID

2002-09-23  Steve Osselton  <steve@prismtechnologies.com>

        * util/Environment.java: EHR #254. Support added for appending to
        log files

2002-09-20  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/CSSInvocationInterceptor.java, orb/MinorCodes.java:
        Standard exceptions minor codes

        * orb/connection/GIOPConnection.java,
        security/sas/CSSInvocationInterceptor.java,
        security/sas/TSSInitializer.java,
        security/sas/TSSInvocationInterceptor.java,
        orb/standardInterceptors/SASComponentInterceptor.java: ATLAS server

2002-09-19  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: 256/257

        * util/Environment.java: Fix for 257

        * orb/CDROutputStream.java: Fix for
        257 ('jacorb.interop.indirection_encoding_disable')

        * poa/POA.java, poa/POAManager.java: Fix for 234 (Implementation
        Repository incorrectly sets a server to inactive)

        * poa/POAManager.java: Whitespace tab cleanup

2002-09-19  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/ORB.java:
        (mapObjectKey) small performance fix: using local Hashtable to
        check if mapping exist rather that calling Environment

        * orb/CDRInputStream.java, orb/CDROutputStream.java: fix for bug #
        264: wstring marshalling would read/write a BOM even if the
        strings length is 0

2002-09-17  Andre Spiegel  <spiegel@gnu.org>

        * idl/ReplyHandler.java: New file.

        * idl/Interface.java: Make it subclassable.

        * collection/CollectionFactoriesImpl.java: Removed

        * idl/parser.cup, idl/parser.java,
        idl/sym.java (generate_ami_callback, generate_ami_polling): New
        flags, settable via command line options.

        * idl/Interface.java: Restructure printing methods.

2002-09-16  Steve Osselton  <steve@prismtechnologies.com>

        * poa/POA.java: Fix for bug #258. WrongAdapter exception not being
        thrown for local objects

2002-09-13  David R Robison  <drrobison@openroadsconsulting.com>

        * orb/ParsedIOR.java, security/sas/CSSInvocationInterceptor.java,
        security/sas/TSSInitializer.java,
        security/sas/TSSInvocationInterceptor.java,
        orb/standardInterceptors/SASComponentInterceptor.java: Support
        ATLAS

2002-09-12  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/CSSInvocationInterceptor.java,
        security/sas/TSSInvocationInterceptor.java,
        orb/connection/ClientConnection.java,
        orb/connection/GIOPConnection.java: Stateful SAS contexts

        * security/sas/NT_GSSUPProvider.java,
        security/sas/CSSInvocationInterceptor.java,
        security/sas/TSSInvocationInterceptor.java: Stateful contexts

        * security/sas/build.xml, orb/standardInterceptors/build.xml:
        Check for jgss

        * security/sas/build.xml, orb/standardInterceptors/build.xml:
        Check for org.itef.jgss.GSSManager

2002-09-12  Steve Osselton  <steve@prismtechnologies.com>

        * orb/ORB.java, util/Version.java: Fix for bug #251. Version info
        simplified

2002-09-11  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GSSUPProvider.java,
        security/sas/NT_GSSUPContextSpi.java,
        security/sas/NT_GSSUPMechFactory.java,
        security/sas/NT_GSSUPProvider.java, security/sas/build.xml: NT JAAS

        * security/sas/CSSInitializer.java,
        security/sas/CSSInvocationInterceptor.java,
        security/sas/GSSUPContextSpi.java,
        security/sas/GSSUPCredentialSpi.java,
        security/sas/GSSUPMechFactory.java,
        security/sas/GSSUPNameSpi.java, security/sas/GSSUPProvider.java,
        security/sas/GSSUPProviderInitializer.java,
        security/sas/TSSInitializer.java,
        security/sas/TSSInvocationInterceptor.java,
        orb/standardInterceptors/SASComponentInterceptor.java: Stateless

2002-09-11  Andre Spiegel  <spiegel@gnu.org>

        * orb/CDRInputStream.java (read_repository_id): Update both pos
        and index.

2002-09-10  David R Robison  <drrobison@openroadsconsulting.com>

        * security/sas/GSSUPContextSpi.java,
        security/sas/GSSUPMechFactory.java,
        security/sas/GSSUPProvider.java, security/sas/TSSInitializer.java,
        security/sas/TSSInvocationInterceptor.java: Updates

        * orb/util/PrintIOR.java: Support the SAS tag TAG_NULL_TAG also
        write mechanism Oid as hex

        * orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SASComponentInterceptor.java: Generate
        the SAS tags in the IOR

        * orb/ParsedIOR.java: Parses the SAS tags in the IOR

        * security/build.xml: Now compiles the sas sub-directory

        * security/sas/CSSInitializer.java,
        security/sas/CSSInvocationInterceptor.java,
        security/sas/GSSUPContextSpi.java,
        security/sas/GSSUPCredentialSpi.java,
        security/sas/GSSUPMechFactory.java,
        security/sas/GSSUPNameSpi.java, security/sas/GSSUPProvider.java,
        security/sas/TSSInitializer.java,
        security/sas/TSSInvocationInterceptor.java,
        security/sas/build.xml: SAS Code

2002-08-22  Steve Osselton  <steve@prismtechnologies.com>

        * idl/UnionType.java: Fix for bug #238. Union type members added
        in reverse order

2002-08-13  Steve Osselton  <steve@prismtechnologies.com>

        * orb/CDROutputStream.java: Fix for bug #241. Negative fixed
        values not encoded correctly

        * orb/portableInterceptor/ServerRequestInfoImpl.java: Fix for bug
        #245

2002-08-13  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * naming/NameServer.java: fix for bug # 243: removed leading %01
        from object key mapping

2002-08-06  Steve Osselton  <steve@prismtechnologies.com>

        * orb/CDROutputStream.java: More efficient pad clearing added

        * orb/CDROutputStream.java: Fix for buffer pad clear overrun in
        some circumstances

2002-08-02  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/Client_TCP_IP_Transport.java:
        (connect) fix for bug # 235: now retires can be 0 and *one*
        connection attempt will be made

        * orb/ParsedIOR.java:
        (init) fix for bug # 236: won only trying to read properties
        jacorb.security.ssl.client.required_options and
        jacorb.security.ssl.client.supported_options if ssl is really
        supported

        * events/EventChannelImpl.java, idl/Declaration.java,
        idl/EnumType.java, idl/FloatPtType.java, idl/FloatType.java,
        idl/InitDecl.java, idl/Interface.java, idl/Member.java,
        idl/OpDecl.java, idl/ParamDecl.java, idl/StateMember.java,
        idl/StructType.java, idl/TypeDef.java, idl/UnionType.java,
        idl/ValueBoxDecl.java, idl/ValueDecl.java, orb/Any.java,
        orb/CDROutputStream.java, orb/Delegate.java, orb/ORB.java,
        orb/ParsedIOR.java, orb/build.xml,
        orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/GIOPConnection.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/TCP_IP_Transport.java, poa/AOM.java, poa/POA.java,
        transaction/CoordinatorImpl.java,
        transaction/TransactionCurrentImpl.java: merged in RELEASE_1_4_1

2002-07-29  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * events/EventChannelImpl.java (push_event): changed order in
        which suppliers vectors are traversed

        * orb/build.xml: removed domain stuff

        * events/EventChannelImpl.java: fix for bug # 232: fixed boundary
        condition in for loops, removing from wrong suppliers verctor

        * orb/CDROutputStream.java: fix for bug # 233: now always checking
        in write_xy_array(), that there has to be something written prior
        to doing alignment

2002-07-24  Francisco Reverbel <reverbel@ime.usp.br>

        * orb/ORB.java: resolve_initial_references() now returns a
        PICurrent with thread-dependant behaviour. It returns an instance
        of an inner class that implements
        org.omg.PortableInterceptor.Current by forwarding each invocation
        to a thread-dependent target.

2002-07-23  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/ParsedIOR.java:
        (init) updated decision finding mechanism for ssl usage: now only
        using ssl if at least one side requires it, and thrown
        NO_PERMISSION if client requires ssl, but server doesn't support it

2002-07-19  Steve Osselton  <steve@prismtechnologies.com>

        * poa/POA.java: Enhancement #216 added. Operation to get object
        count

2002-07-19  Nick Cross  <nick.cross@prismtechnologies.com>

        * orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/TCP_IP_Transport.java: Added missing
        shutdownOutput/Input. Rationalised socket/connection_info into
        TCP_IP_Transport. Added debug message if socket timeout is hit

2002-07-19  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Any.java: Fix for bug #229. CDRInputStream created from
        singleton ORB

2002-07-18  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/GIOPConnection.java: merged in bugfix made in
        head revision

2002-07-18  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Delegate.java: Fix update to ensure delegate is set for
        local servant call

2002-07-18  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/EnumType.java, idl/Interface.java, idl/Member.java,
        idl/StateMember.java, idl/TypeDef.java, idl/UnionType.java,
        idl/ValueBoxDecl.java, idl/ValueDecl.java: *** empty log message
        ***

        * idl/StructType.java:
        (getTypeCodeExpression( Set knownTypes )) added to override method
        in superclass (get npe's without it)

        * orb/ParsedIOR.java:
        (init) added check for null object reference

2002-07-17  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Delegate.java: Fix for DII calls calling onto local object
        calls so separate threaded request is not invoked

        * orb/Delegate.java: Local call optimisation fix for non active
        servants

2002-07-17  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/GIOPConnection.java: fixed (rather stupid
        copy&paste, but non-obvious nonetheless) bug where the Fragments
        would be hashed in by their giop minor number
        (!). This will only show up if multiple concurrent fragmented
        requests are involved.

2002-07-17  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Delegate.java: Fix for DII calls calling onto local object
        calls so separate threaded request is not invoked

2002-07-17  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/ParamDecl.java, idl/ValueDecl.java, idl/Declaration.java,
        idl/FloatPtType.java, idl/FloatType.java, idl/InitDecl.java,
        idl/Interface.java: cosmetics

        * idl/ValueDecl.java:
        (parse) added missing call to parse factories

2002-07-17  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Delegate.java: Fix so base object calls are invoked directly
        on server objects

2002-07-16  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Delegate.java: DII concurrency fix update to allow for
        portable interceptors

        * orb/Delegate.java: DII concurrency fix

2002-07-16  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/OpDecl.java:
        (parse) fix parameters for call to myInterface.addImportedName,
        need to use param.paramTypeSpec.typeSpec()

        * idl/ValueDecl.java:
        (setValueElements) call dec.setPackage( name ); on all members of
        the value type, fixes bug #225

        * poa/AOM.java: joined in (remove) fix from the RC_141 branch

        * poa/AOM.java:
        (remove) no longer globally synchronized, which led to a deadlock
        (cf. Bug #226). Only a small part of the method is synchronized
        now, and it uses a separate lock object.

2002-07-15  Gerald Brose  <gerald.brose@xtradyne.com>

        * transaction/CoordinatorImpl.java,
        transaction/TransactionCurrentImpl.java:
        [back-porting from CVS head] 2 bug-fixes to TransactionService:

           * handle TRANSACTION_ROLLEDBACK raised by commit_one_phase()
             called from commit()

           * Current.commit() catches and rethrows TRANSACTION_ROLLEDBACK
             (and removes the association of the transaction with the
             current thread)

        Modified Files:
                src/org/jacorb/transaction/CoordinatorImpl.java
                src/org/jacorb/transaction/TransactionCurrentImpl.java

        * transaction/CoordinatorImpl.java,
        transaction/TransactionCurrentImpl.java: 2 bug-fixes to
        TransactionService:

           * handle TRANSACTION_ROLLEDBACK raised by commit_one_phase()
             called from commit()

           * Current.commit() catches and rethrows TRANSACTION_ROLLEDBACK
             (and removes the association of the transaction with the
             current thread)

        Modified Files: src/org/jacorb/transaction/CoordinatorImpl.java
        src/org/jacorb/transaction/TransactionCurrentImpl.java

2002-07-10  Steve Osselton  <steve@prismtechnologies.com>

        * orb/dns/DNSLookup.java, orb/dns/DNSLookupDelegate.java,
        orb/dns/DNSLookupDelegateImpl.java: Copyright update

        * orb/dns/DNSLookup.java, orb/dns/DNSLookupDelegate.java,
        orb/dns/DNSLookupDelegateImpl.java: Update so delegate only
        created if DNS support classes available

2002-07-09  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: Fix for 223 & pinging
        objects to prevent 'non-jacorb object' warning & multiple pings in
        replyNewLocation

2002-07-09  Steve Osselton  <steve@prismtechnologies.com>

        * events/build.xml: Fix for bug #224. Missing package prefix in
        idl target

2002-07-08  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/ReplyPlaceholder.java: fix for bug #219: replaced
        property jacorb.connection.client_timeout by properties
        jacorb.connection.client_idle_timeout and
        jacorb.client.pending_reply_timeout. Also modified method close()
        in Client_TCP_IP_Transport, so that connection tiemouts don't lead
        to a terminal close of the whole transport.

2002-07-08  Gerald Brose  <gerald.brose@xtradyne.com>

        * orb/BasicAdapter.java, orb/ORB.java, util/Version.java: removed
        calls to System.exit, updated Version string

        * ir/AttributeDef.java: removed call to system.exit()

        * ir/ConstantDef.java: added class comment andd removed calls to
        System.exit()

        * naming/NamingContextImpl.java:
        (list) removed call to System.exit()

        * ir/TypeCodeUtil.java: throw Exception rather than call
        System.exit()

        * idl/AliasTypeSpec.java, idl/BaseType.java, idl/IdlSymbol.java,
        idl/Interface.java, idl/JacIDL.java, idl/NameTable.java,
        idl/ParamDecl.java, idl/parser.java, idl/sym.java: changes in
        global name imports

        * idl/OpDecl.java:
        (parse) changed import of global holder name

        * idl/parser.cup: removed parser-global table for importinmg
        global type names, this is now done in the individual subclasses
        of IdlSymbol for names that actually get used

2002-07-05  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/ApplicationExceptionHelper.java:
        (insert) fix for bug # 221: code for creating class name of user
        exception helper was broken

        * imr/ImplementationRepositoryImpl.java:
        (SocketListener.<init>) fix for bug # 220: Wrongly assuming that
        hostname must always have at least one char

        * orb/BasicAdapter.java:
        (Listener.setAddress( InetAddress )) fix for bug # 220: if-clause
        was erroneously assuming that hostname must alsways have at least
        one char

2002-07-05  Steve Osselton  <steve@prismtechnologies.com>

        * poa/RequestController.java, poa/RequestProcessor.java:
        Enhancement #217. Thread naming added

        * naming/NameServer.java: Update so name service can be configured
        to run on fixed port

        * naming/NamingContextImpl.java: Fix for bug #218. Object purging
        in name service made configurable

2002-07-01  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        updated or inserted Copyright notice

2002-06-28  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        inserted or updated Copyright

        * orb/Reference.java: this file is generated by the build from
        Reference.template

2002-06-25  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/Interface.java, orb/BasicAdapter.java,
        orb/connection/MessageReceptor.java,
        orb/connection/Server_TCP_IP_Transport.java,
        util/threadpool/ConsumerTie.java: cosmetics (minor)

        * naming/namemanager/BindNode.java,
        naming/namemanager/ContextNode.java,
        naming/namemanager/Handler.java,
        naming/namemanager/NameManager.java,
        naming/namemanager/Updater.java: cosmetics

        * orb/dynany/DynUnion.java: removed debug output in c'tor

        * poa/AOM.java: cosmetics

2002-06-25  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/ClientConnection.java,
        orb/connection/GIOPConnection.java, orb/connection/Messages.java,
        orb/connection/NoBiDirClientRequestListener.java,
        orb/connection/NoBiDirServerReplyListener.java,
        orb/connection/ReplyListener.java,
        orb/connection/RequestListener.java,
        orb/connection/ServerRequestListener.java,
        orb/connection/Transport.java: added support for GIOP 1.2 Fragments

2002-06-24  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * poa/RequestController.java:
        (<init> fix for bug # 215 : second if case tested for
        threadPriority > Thread.MIN_PRIORITY, but should have been
        MAX_PRIORITY

2002-06-23  Francisco Reverbel <reverbel@ime.usp.br>

        * orb/CDROutputStream.java, orb/EncapsInfo.java: Changes to save
        and reset the indirection maps at the beginning of an
        encapsulation and to restore them at the end of the encapsulation.
        (CORBA says that "indirections may not cross encapsulation
        boundaries".)

        * orb/ORBSingleton.java: Change in create_value_tc() for
        interoperability with the ORB in Sun's JDK 1.4: we now skip the
        name check for RMI valuetypes, because Sun's ORB sends dotted
        names ("some.package.SomeClass") over the wire.

2002-06-21  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Delegate.java, poa/POA.java, poa/RequestController.java: Fix
        for bug #132. Delayed POA shutdown ignores local calls

        * orb/Delegate.java: Fix for bug #200. Interceptors not invoked on
        local calls

2002-06-21  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: ServerStartupDaemon fix
        to detect crashed server

2002-06-20  Steve Osselton  <steve@prismtechnologies.com>

        * orb/util/PrintIOR.java: Fix for bug #214. PrintIOR not
        recognising TAG_ORB_TYPE tagged component

        * orb/ORB.java: New utility method added

2002-06-18  Steve Osselton  <steve@prismtechnologies.com>

        * idl/ConstDecl.java, idl/LongLongType.java: Fix for bug #209. 'L'
        appended to long long constant references

        * orb/ServantDelegate.java: Fix for bug #211. _default_POA not
        called

2002-06-18  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/GIOPConnection.java,
        orb/connection/Messages.java: added support for GIOP 1.2
        Fragmentation

        * util/Debug.java: fixed small bug in output of byte arrays: for
        loop started with index 'start' and ran to 'len', but this must
        actually be 'start + len'

2002-06-17  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Delegate.java, poa/POA.java, poa/POAConstants.java,
        poa/util/POAUtil.java: Fix for bug #205. Reversion to old IOR
        format

        * orb/Delegate.java: Missing semi-colon added

2002-06-13  Gerald Brose  <gerald.brose@xtradyne.com>

        * orb/Delegate.java:
        (servant_preinvoke) fixed bug #207: only incarnate local objects
        that are not already active

2002-06-12  Reimo Tiedemann  <tie@xtradyne.com>

        * poa/AOM.java, poa/POA.java, poa/RequestController.java: fixed
        object deactivation bug (id=204)

2002-06-10  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/connection/Messages.java:
        (getRequestId) added type fragment to GIOP 1.2

2002-06-07  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/sym.java, idl/parser.java: *** empty log message ***

        * idl/parser.cup: slight update to version/copyright string

        * orb/ORB.java: slight update to copyright string

        * util/Version.java: updated date string

2002-06-06  Steve Osselton  <steve@prismtechnologies.com>

        * util/Version.java: Version update

2002-06-05  Steve Osselton  <steve@prismtechnologies.com>

        * idl/lexer.java: Fix for bug #202. Duplicate, varying pragma
        version

        * orb/util/FixIOR.java: Command simplification

2002-06-03  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/ValueDecl.java, idl/TypeDeclaration.java, idl/TypeSpec.java,
        idl/UnionType.java, idl/ValueAbsDecl.java, idl/ValueBoxDecl.java,
        idl/ArrayTypeSpec.java, idl/CharType.java, idl/EnumType.java,
        idl/SequenceType.java, idl/StructType.java,
        idl/AliasTypeSpec.java: getTypeCodeExpression() fixes

        * idl/VectorType.java, idl/SequenceType.java, idl/StructType.java,
        idl/UnionType.java, idl/AliasTypeSpec.java, idl/Member.java: fixed
        generation of type code creation with erroneously recursive
        sequences

2002-05-31  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/AliasTypeSpec.java: unfixed buggy fix :-)

2002-05-31  Steve Osselton  <steve@prismtechnologies.com>

        * orb/util/FixIOR.java: Usage update to match script

2002-05-31  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/AliasTypeSpec.java, idl/ObjectTypeSpec.java,
        idl/SequenceType.java: TypeCode fixes

2002-05-30  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/AliasTypeSpec.java:
        (getTypeCodeExpression) change type code generation in Helper for
        ObjectTypeSpec

        * orb/Delegate.java:
        (servant_preinvoke) fixed

2002-05-30  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/ValueInheritanceSpec.java, idl/ConstType.java,
        idl/SymbolList.java, idl/Truncatable.java,
        idl/TypeDeclaration.java, idl/ValueDecl.java: Code cleanups

2002-05-29  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/ParsedIOR.java: now putting into and searching for the codeset
        tagged component in the effective TAG_INTERNET_IOP profile

2002-05-29  Gerald Brose  <gerald.brose@xtradyne.com>

        * poa/AOM.java:
        (remove) commented out servant._set_delegate(null) which should
        not be there, presumably...

        * poa/RequestController.java:
        (deactivationInProgress, waitForDeactivationStart) added to let
        the POA synchronize with the start of the deactivation

        * poa/POA.java:
        (deactivate_object) added extry synchronization to ensure that a
        second deactivation of the same object will throw an
        ObjectNotActive exception

2002-05-29  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/util/PrintIOR.java: printCodeSetComponent() changed tu use
        print() instead of println() to print out the commas

2002-05-29  Gerald Brose  <gerald.brose@xtradyne.com>

        * orb/ORB.java:
        (mapObjectKey) do proper String/byte array conversion according to
        corbaloc grammar

        * orb/util/CorbaLoc.java:
        (parseKey) made public static for use by ORB

        * naming/NameServer.java: fixed mapped object key

2002-05-28  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/ParsedIOR.java: added op getMultipleComponents() to allow
        access to MULTIPLE_COMPONENTS components

        * orb/util/PrintIOR.java: added output for tagged components in
        MULTIPLE_COMPONENTS profile, added the AssociationOption names
        when dumping the ssl component

2002-05-28  Steve Osselton  <steve@prismtechnologies.com>

        * proxy/ProxyImpl.java: Code tidy

2002-05-28  Jason Courage

        * orb/ORB.java: Now the ORB registers the ior_proxy_host and
        ior_proxy_port with the ImR using the registerPOA operation if
        these properties are set.  Also, the ImR is set to not use these
        properties when constructing its own IOR.

        * orb/Delegate.java: Fixed syntax error in servant_preinvoke
        method.

2002-05-28  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/connection/ClientConnection.java, orb/connection/CodeSet.java,
        orb/connection/ServerRequestListener.java, orb/ORB.java: made
        codeset handling more conformant to the spec: CodeSets are now
        only negotiated, if GIOP > 1.0 is used.

        * orb/CDROutputStream.java, orb/CDRInputStream.java: fix for bug
        #197: reimplemented UTF-8 for chars/strings

2002-05-28  Gerald Brose  <gerald.brose@xtradyne.com>

        * orb/Delegate.java: code cosmetics (tested formatter "astyle")

        * orb/Delegate.java: code cosmetics

        * orb/Reference.java: cosmetics

        * orb/CDROutputStream.java:
        (write_end_tag, start_chunk, end_chunk) added, but code is still
        unused

        * naming/NameServer.java: Fixed problem parsing command line
        arguments and updated the object key mapping to include the
        leading "persistence" byte

2002-05-27  Jason Courage

        * orb/ORB.java: Readded multi-components profile to IOR regardless
        of GIOP version.

        * orb/Delegate.java: Minor fix to string handling in invoke method.

        * orb/Delegate.java: Changed mechanism used to get ImR host and
        port to be the same as that used in ORB.java, ie, to use the
        ImRAccess interface.

        * util/Environment.java: Added the property
        'jacorb.use_imr_endpoint' that when switched off will write the
        server endpoint into the IOR instead of the ImR endpoint.

        * poa/util/POAUtil.java: Added methods to extract a flag from the
        object key a determine the flag's value.

        * poa/POAConstants.java: Added a constant used as a flag in the
        object key to indicate a persistent object.

        * poa/POA.java: Added an extra byte to object keys that contains a
        flag to indicate the Lifespan Policy of the POA managing the
        object.

        * orb/ParsedIOR.java: Added the TAG_ORB_TYPE component to IORs to
        indicate that they are generated by JacORB.

        * orb/ORB.java: Added the TAG_ORB_TYPE component to IORs to
        indicate that they are generated by JacORB; added the property
        'jacorb.use_imr_endpoint' that when switched off will write the
        server endpoint into the IOR instead of the ImR endpoint.

        * orb/Delegate.java: Implemented a failover mechanism whereby the
        Delegate is able to find the ImR if the ImR goes down and comes
        back up at a new address.

2002-05-27  Gerald Brose  <gerald.brose@xtradyne.com>

        * orb/connection/Client_TCP_IP_Transport.java: modified debug
        output on connecting

        * orb/ServantDelegate.java, orb/Reference.java, orb/Delegate.java,
        orb/CDROutputStream.java: cosmetics

        * naming/NameServer.java: modified command line args, new switch
        -p to set port number, new switch -t required to set time out and
        imr_register. The IOR file is now optional

        * util/Environment.java:
        (doMapObjectKeys) added

        * orb/ORB.java:
        (mapObjectKey) added

        * orb/dsi/ServerRequest.java:
        (c'tor) added call to orb.mapObjectKey() so that the object key
        can be mapped to a string given in the objectKeyMap environment
        property

        * util/Environment.java:
        (getProperties) added overloaded variant with a "trim" argument

        * naming/NameServer.java:
        (main) define the objectKeyMap property so this name service is
        accessible using the shortcut object key "NameService"

2002-05-23  Simon McQueen

        * util/Version.java, idl/sym.java, orb/ORB.java, idl/parser.cup,
        idl/parser.java: Tidied up the JacORB version identification
        stuff. The version of the ORB now needs only be set in
        org.jacorb.util.Version. There will be no runtime dependency on
        this class for any that uses it.

2002-05-22  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/ValueInheritanceSpec.java, idl/lexer.java,
        idl/ScopedName.java, idl/Truncatable.java, idl/ValueAbsDecl.java:
        more value type updates

        * idl/ValueDecl.java: inheritance-related fixes, e.g., truncatable
        ids

2002-05-22  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/ValueDecl.java: Added null checks

2002-05-21  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * orb/ParsedIOR.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java: fixed bug
        #189: the COdeSetInfo struct is now correctly placed into and
        searched for in the MULTIPLE_COMPONENTS profile of the IOR

2002-05-21  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/UnionType.java: Fix for 188

2002-05-20  Steve Osselton  <steve@prismtechnologies.com>

        * orb/util/FixIOR.java: Parameter handling simplification

2002-05-17  Simon McQueen

        * idl/sym.java, idl/parser.java, idl/UnionType.java,
        idl/ValueBoxDecl.java, idl/ValueDecl.java, idl/parser.cup,
        idl/FixedPointType.java, idl/Interface.java, idl/JacIDL.java,
        idl/SequenceType.java, idl/StructType.java,
        idl/AliasTypeSpec.java, idl/ArrayTypeSpec.java, idl/EnumType.java:
        Fix to bug ID# 186 Amended IDL Compiler to accept -nofinal option
        and generate class definitions that are not final.  JacIDL ant
        task, and docs updated accordingly.

2002-05-16  Steve Osselton  <steve@prismtechnologies.com>

        * proxy/ProxyImpl.java: Update to allow both fixed and dynamic id
        assignment. Also id and name service name made configurable

2002-05-15  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/sym.java, idl/parser.cup, idl/parser.java,
        idl/Interface.java, idl/StructType.java, idl/SymbolList.java,
        idl/ValueDecl.java: Fixes for bugs 178 and 185

2002-05-14  Francisco Reverbel <reverbel@ime.usp.br>

        * orb/ParsedIOR.java, orb/util/PrintIOR.java: We now assume that
        IOR codebase components are CDR encapsulations encoded by a Codec
        such as org.jacorb.orb.portableInterceptor.Codec_CDR_1_0_Impl.

        * orb/CDROutputStream.java: Dealing with the case of a null
        repository_id in write_value_internal().

2002-05-14  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/AddExpr.java: *** empty log message ***

        * idl/Interface.java, idl/ValueDecl.java: Updated to generate also
        the LocalTie class for local interfaces

2002-05-13  Nicolas Noffke  <nicolas.noffke@xtradyne.com>

        * util/Environment.java: added property
        "jacorb.suppress_no_props_warning" to allow for suppressing the
        output that warns that no props file can be found

2002-05-13  Steve Osselton  <steve@prismtechnologies.com>

        * proxy/ProxyServerForwardInterceptor.java: Server interceptor now
        silently ignores requests not containing service context

        * orb/util/FixIOR.java: Encapsulation fix

2002-05-13  Gerald Brose  <gerald.brose@xtradyne.com>

        * orb/CDROutputStream.java, orb/Reference.java,
        orb/CDRInputStream.java: OBV-related changes: implement sending
        *list* of truncatable ids, also fixed a bug in the indirection
        calculation (padding was not taken into account)

        * orb/ORBSingleton.java, orb/ORB.java: implement CORBA_2_5 ORB
        interface

2002-05-12  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/Truncatable.java, idl/ValueDecl.java,
        idl/ValueInheritanceSpec.java, idl/Interface.java: OBV inheritance
        progress...

2002-05-10  Nick Cross  <nick.cross@prismtechnologies.com>

        * idl/JacIDL.java: Remove commented out code. Call init on parser
        and simplify setting parser up.

        * idl/Member.java, idl/StructType.java: Forward decl of
        structs (62)

        * idl/sym.java, idl/parser.cup, idl/parser.java: Forward decl of
        structs, removed commented out code, changed some code from
        private to protected

        * orb/.cvsignore, util/.cvsignore: Add ignore

        * imr/build.xml, util/tracing/build.xml, events/build.xml: Use
        JacIDL ant task

        * build.xml: Use jacidl

2002-05-09  Jason Courage

        * orb/connection/LocateRequestInputStream.java: Assigned value in
        case 2 to class variable req_hdr instead of creating req_hdr as a
        local variable.

2002-05-09  Gerald Brose  <gerald.brose@xtradyne.com>

        * naming/NameServer.java, naming/NamingContextImpl.java: updated
        for local interface semantics

2002-05-08  Gerald Brose  <gerald.brose@xtradyne.com>

        * orb/Delegate.java, orb/ServantDelegate.java,
        orb/CDROutputStream.java: updated for local interface semantics

        * orb/Reference.java: *** empty log message ***

        * poa/policy/RequestProcessingPolicy.java,
        poa/policy/ServantRetentionPolicy.java,
        poa/policy/ThreadPolicy.java, poa/util/LogTrace.java,
        poa/util/LogWriter.java, poa/POAManager.java,
        poa/RequestProcessor.java, poa/policy/IdAssignmentPolicy.java,
        poa/policy/IdUniquenessPolicy.java,
        poa/policy/ImplicitActivationPolicy.java,
        poa/policy/LifespanPolicy.java, poa/AOM.java, poa/Current.java,
        poa/POA.java: updated for local interface semantics

        * idl/parser.cup, idl/Value.java, idl/ValueBoxDecl.java,
        idl/lexer.java, idl/ConstrTypeSpec.java, idl/Interface.java,
        idl/TypeDeclaration.java: *** empty log message ***

2002-05-08  Jason Courage

        * orb/ContextID.java, orb/ORBConstants.java: Renamed ContextID to
        ORBConstants.

        * proxy/ProxyClientForwardInterceptor.java,
        proxy/ProxyServerForwardInterceptor.java,
        orb/connection/ServiceContextTransportingOutputStream.java:
        Renamed ContextId to ORBConstants.

        * orb/Reference.java: This file is generated during the build
        process so doesn't need to be committed.

2002-05-07  Gerald Brose  <gerald.brose@xtradyne.com>

        * orb/connection/ServiceContextTransportingOutputStream.java,
        idl/MemberList.java, idl/StructType.java,
        idl/TypeDeclaration.java, idl/ValueDecl.java, orb/Reference.java,
        idl/Member.java: *** empty log message ***

        * orb/BufferManager.java:
        (release) remove call to printStatistics()

        * ir/InterfaceDef.java: fixed call to FullInterfaceDescription()
        c'tor

2002-05-06  Gerald Brose  <gerald.brose@xtradyne.com>

        * poa/policy/MapToDefaultDomainsPolicy.java: *** empty log message
        ***

        * build.xml: removed IDL compilation of DomainManagement.idl

        * naming/Name.java, naming/NameServer.java,
        naming/NamingContextImpl.java: *** empty log message ***

        * ir/InterfaceDef.java: fixed parameters for calling new
        FullInterfaceDescription c'tor

        * poa/build.xml, orb/Reference.java, orb/build.xml,
        orb/Delegate.java, orb/ORB.java: *** empty log message ***

        * orb/dynany/DynFixed.java:
        (set_value) added tc parameter to insert_fixed( fixed_value, tc )

        * orb/ServantDelegate.java:
        (get_interface_def) added

        * poa/util/LogTrace.java: cosmetics

        * util/tracing/ClientTraceInterceptor.java: removed references to
        domain service

        * poa/RequestProcessor.java: removed last traces of the domain
        service

        * poa/POA.java: removed references to the domain service

        * orb/dsi/ServerRequest.java: added check for null result

        * orb/ORBSingleton.java: *** empty log message ***

        * orb/ORB.java: cosmetics

        * orb/BufferManager.java:
        (getPreferredNetworkBuffer) added
        (getPreferredMemoryBuffer) added

        * orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/ServiceContextTransportingOutputStream.java,
        orb/connection/TCP_IP_Transport.java,
        orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/MessageOutputStream.java,
        orb/connection/ReplyOutputStream.java,
        orb/connection/RequestOutputStream.java: some inlining for
        performance reasons

2002-05-03  Gerald Brose  <gerald.brose@xtradyne.com>

        * idl/ValueBoxDecl.java, idl/VectorType.java,
        idl/SequenceType.java: more OBV fixes

        * orb/CDROutputStream.java: cosmetics

2002-05-03  Steve Osselton  <steve@prismtechnologies.com>

        * poa/POA.java: Commented out code removed, we are using CVS

        * proxy/Proxy.java: Unused file removed

2002-05-02  Steve Osselton  <steve@prismtechnologies.com>

        * orb/util/FixIOR.java: Port value handling fix

        * proxy/ProxyClientForwardInterceptor.java: Fixes for resolution
        of remote appligators

        * orb/util/FixIOR.java: Comment update

        * orb/util/FixIOR.java: Utility added to patch host/port into
        IOR. Enhancement #183

2002-05-02  Nick Cross  <nick.cross@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: Add fix for 182 POA/Impl
        name problem. Add fix for 181 config port number.

2002-05-02  Steve Osselton  <steve@prismtechnologies.com>

        * proxy/ProxyImpl.java: Status setting update

2002-05-01  Vladimir Mencl <vladimir.mencl@mff.cuni.cz>
        * TransactionService:
          * ServerContextTransferInterceptor sets (and resets) the
            transaction context for the thread handling a request
          * TransactionCurrentImpl: suspend() and resume() implemented
            (and used by ServerContextTransferInterceptor for handling
            the transaction context)
          * merged org.jacorb.transaction.ClientInitializer
            and org.jacorb.transaction.ServerInitializer into
            org.jacorb.transaction.TransactionInitializer
          * bug-fix: Timer.java: check for a null reference in kill_channel
        * demo/bank/transaction/implicit: adjusted to the changes made
          in the TransactionService

2002-04-02  Heather Drury  <drury_h@ociweb.com>

        * orb/CDROutputStream.java:
        Backed out change to add is_recursive() checks within write_TypeCode() as
        fix had already been made and this fix does not conform to the CORBA spec.

2002-04-01  Heather Drury  <drury_h@ociweb.com>

        * orb/CDROutputStream.java:
        Added checks to is_recursive() within write_TypeCode() method for value,
        alias, value_box, abstract_interface, union, enum, and except types.
        Fixed a bug where "No recursive TC" exception was erroneously being thrown.

2002-03-18  Andre Spiegel  <spiegel@gnu.org>

        Patch by Francisco Reverbel <reverbel@ime.usp.br>

        * orb/CDRInputStream.java:
        (read_untyped_value): In the RMI case, use the context class
        loader of the current thread if possible.

2002-03-18  Jason Courage

        * idl/sym.java, idl/parser.cup, idl/parser.java: Changes to
        version and static strings.

        * idl/parser.java, orb/ORB.java: Minor change to static strings
        for version output.

2002-03-15  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/connection/Server_TCP_IP_Transport.java:
        (c'tor) switch on TcpNoDelay socket option. Note: only change this
        option in conjunction with also changing the option in
        Client_TCP_IP_Transport.java

2002-03-13  Steve Osselton  <steve@prismtechnologies.com>

        * idl/parser.java, orb/ORB.java: Version update

        * orb/ParsedIOR.java: Update to use reflection for JDNI support

2002-03-13  Nick Cross

        * build.xml, orb/build.xml: Fix for #87

2002-03-12  Steve Osselton  <steve@prismtechnologies.com>

        * orb/CDROutputStream.java:
        Back out for byte array handling optimisation

        * idl/Interface.java, idl/InterfaceBody.java, idl/Method.java,
        idl/OpDecl.java, idl/Operation.java: Fix for bug #141

2002-03-12  Jason Courage

        * trading/client/build.xml, trading/db/build.xml,
        transaction/build.xml, util/tracing/build.xml,
        orb/standardInterceptors/build.xml, poa/build.xml,
        security/build.xml, security/ssl/iaik/build.xml,
        security/ssl/sun_jsse/build.xml, trading/build.xml,
        naming/build.xml, orb/build.xml, orb/dns/build.xml,
        orb/domain/build.xml, orb/portableInterceptor/build.xml,
        collection/build.xml, concurrency/build.xml, events/build.xml,
        idl/build.xml, imr/build.xml, ir/build.xml, build.xml: Added
        debugging functionality.

2002-03-11  Steve Osselton  <steve@prismtechnologies.com>

        * poa/AOM.java: Fix for bug #131

        * poa/Current.java, poa/InvocationContext.java: Update for bug #138

2002-03-11  Jason Courage

        * orb/Any.java: Added typecode checking to
        insert_fixed (BigDecimal, TypeCode) operation; changed Java
        runtime exceptions to CORBA system exceptions.

2002-03-08  Steve Osselton  <steve@prismtechnologies.com>

        * idl/FixedPointType.java: Fix for bug #137

2002-03-08  Jason Courage

        * orb/Any.java: In fixed case of read_value method, the fixed
        value is read from the stream, the decimal is inserted into it,
        and it is inserted into the Any using the
        insert_fixed (BigDecimal, TypeCode) method.

2002-03-08  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Any.java: Fix for bug #134. wchar now handled in read/write
        operations

2002-03-07  Andre Spiegel  <spiegel@gnu.org>

        Patch by Francisco Reverbel <reverbel@ime.usp.br>

        * poa/POA.java (isSystemId): Made it public.

        * orb/ORB.java (findPOA): Return null for systemIds.

        * orb/TypeCode.java:
        (create_tc, getValueMembers, createValueMember): Change argument
        `knownClasses' into a map from classes to type codes, rename it to
        `knownTypes'.  Use this to call setActualTC() on recursive type
        codes.

        * orb/CDROutputStream.java:
        (orb): New method.
        (write_TypeCode): Fix writing of tk_abstract_interface.

2002-03-07  Jason Courage

        * orb/TypeCode.java, orb/ORBSingleton.java:
        Implemented create_local_interface_tc operation.

2002-03-06  Jason Courage

        * orb/CDRInputStream.java, orb/CDROutputStream.java: Replaced Java
        runtime and assertion exceptions with CORBA System Exceptions.

2002-03-06  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/connection/Server_TCP_IP_Transport.java:
        (c'tor) wrap socket streams in buffered streams

        * orb/connection/Client_TCP_IP_Transport.java:
        (connect) wrap socket streams in buffered streams

2002-03-06  Jason Courage

        * orb/ORBSingleton.java: Added checks to some typecode creation
        methods to check validity of content typecodes; small aesthetic
        improvements.

2002-03-05  Jason Courage

        * orb/domain/build.xml, build.xml, util/tracing/build.xml,
        imr/build.xml, events/build.xml: Modified classpath property to
        put JacORB classes directory at front of classpath.

2002-03-05  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/Any.java, orb/ORBSingleton.java: *** empty log message ***

        * orb/CDROutputStream.java:
        (write_octet_array) revamped to defer buffer copies
        (write) new method that finally writes the entire buffer contents
        (including all deferred buffer writes) to an output stream

        * orb/connection/Transport.java: renamed methods
        addMessageFragment() and sendMessages() to write() and flush()

        * orb/connection/MessageOutputStream.java:
        (write_to) use new write() interface instead of
        addMessageFragment()

        * orb/connection/ServiceContextTransportingOutputStream.java: use
        new write() methods

        * orb/connection/GIOPConnection.java: made class final and let it
        extend java.io.OutputStream, renamed addMessageFragment to write()

        * orb/connection/TCP_IP_Transport.java:
        (write, flush) renamed to fit general OutputStream method names

2002-03-04  Nicolas Noffke  <Nicolas.Noffke@epost.de>

        * orb/ParsedIOR.java, orb/util/CorbaLoc.java: added support for
        the new "ssliop" protocol for corbaloc to be able to use corbaloc
        together with ssl

2002-03-04  Steve Osselton  <steve@prismtechnologies.com>

        * idl/Interface.java, idl/SequenceType.java, idl/StructType.java,
        idl/UnionType.java, idl/ValueBoxDecl.java, idl/AliasTypeSpec.java,
        idl/ArrayTypeSpec.java, idl/EnumType.java,
        idl/FixedPointType.java: Update for bug #124

2002-03-01  Jason Courage

        * orb/TypeCode.java: Changed assertion to BAD_PARAM exception.

        * orb/Any.java, orb/CDRInputStream.java, orb/CDROutputStream.java:
        Modified read_value and write_value methods to work on org.omg.CORBA InputStreams/OutputStreams instead of JacORB-specific streams. (bug 82)

        * orb/CDRInputStream.java: Fixed bug in creation of sequence
        TypeCode where sequence length is hardcoded to 0.

2002-03-01  Steve Osselton  <steve@prismtechnologies.com>

        * orb/CDROutputStream.java, orb/CDRInputStream.java:
        Optimisiation via additional inlining and use of final parameters

        * idl/TypeSpec.java, idl/UnionType.java, idl/ValueBoxDecl.java,
        idl/ValueDecl.java, idl/ArrayTypeSpec.java, idl/EnumType.java,
        idl/FixedPointType.java, idl/Interface.java,
        idl/SequenceType.java, idl/StructType.java,
        idl/AliasTypeSpec.java: Update to generate final classes and
        parameters

2002-02-28  Jason Courage

        * orb/TypeCode.java: Implemented create_abstract_interface_tc and
        create_native_tc operations and fixed numerous bugs.

        * orb/ORBSingleton.java: Implemented create_native_tc operation.

2002-02-28  Steve Osselton  <steve@prismtechnologies.com>

        * idl/ConstDecl.java: Fix for bug #112

2002-02-28  Nicolas Noffke  <Nicolas.Noffke@epost.de>

        * security/ssl/sun_jsse/SSLServerSocketFactory.java.patch,
        security/ssl/sun_jsse/SSLSocketFactory.java.patch: adapted to new
        revision

2002-02-27  Nick Cross

        * idl/lexer.java, idl/Literal.java:
        Add octal, hex and unicode escape character support

2002-02-26  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Any.java: Fix for bug #109. wchar equality not implemented

        * idl/sym.java, idl/ConstDecl.java, idl/EnumType.java, idl/parser.java:
        Fix for bug #102

        * idl/ConstDecl.java: Fix for bug #107

        * idl/sym.java, idl/parser.java, idl/parser.cup:
        Diagnostic stack trace dump removed

        * idl/build.xml: Debug enable removed - oops

        * idl/sym.java, idl/parser.cup, idl/parser.java,
        idl/ConstDecl.java, idl/ConstType.java, idl/Member.java,
        idl/build.xml, idl/lexer.java: Fixes for bug# 89

2002-02-26  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/CDROutputStream.java: (write_char_array) inlined

2002-02-25  Nicolas Noffke  <Nicolas.Noffke@epost.de>

        * security/ssl/sun_jsse/SSLSocketFactory.java,
        security/ssl/sun_jsse/SSLServerSocketFactory.java: added cipher
        suite selection patch

        * security/ssl/build.xml: replaced test class of property jsse.present

        * security/build.xml: removed unnecessary property

        * imr/ImplementationRepositoryImpl.java:
        fixed unnecessary but caught NullPointerException

        * imr/ImRAccessImpl.java: *** empty log message ***

        * orb/CDRInputStream.java, orb/CDROutputStream.java: adapted to
        agreed-upon handling of wstrings (removed length indicator) (Bug
        86)

2002-02-25  Jason Courage

        * orb/CDRInputStream.java, orb/CDROutputStream.java: Fixed
        calculation of indirection pointer for recursive and repeated
        TypeCodes.

2002-02-25  Nicolas Noffke  <Nicolas.Noffke@epost.de>

        * orb/ImRAccess.java, orb/ORB.java: added interface and mechanism
        to fully separate the imr package from the orb

2002-02-25  Steve Osselton  <steve@prismtechnologies.com>

        * idl/AliasTypeSpec.java:
        Fix for bug #101. Aliased any now uses generic AnyHolder

2002-02-21  Nick Cross

        * build.xml, orb/build.xml, util/build.xml: Clean mods

        * idl/Literal.java, idl/PrimaryExpr.java, idl/lexer.java:
        Fix for bug #59

2002-02-20  Jason Courage

        * orb/TypeCode.java: Added comments to recursion operations and
        added new resolveRecursion operation to be called from outside
        TypeCode class to give a single point of entry to resolving
        recursion.

        * orb/ORBSingleton.java: Changed method signature for
        resolveRecursion operation called from create_union_tc and
        create_struct_tc.

2002-02-20  Steve Osselton  <steve@prismtechnologies.com>

        * orb/ORBSingleton.java, orb/ORB.java:
        Fix for bug #92. ORB create_operation_list operation implemented

2002-02-20  Jason Courage

        * orb/TypeCode.java: Fixed bug in code that resolves recursion.

        * orb/Any.java: Improved code in insert_Object method.

        * orb/ORBSingleton.java: Cosmetic changes to diagnostics.

2002-02-19  Jason Courage

        * orb/Any.java: Fixed insert_Object operation to set the IDL
        identifier name.

2002-02-19  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Delegate.java, orb/ParsedIOR.java: Fix for bug #95

2002-02-19  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/NameTable.java: (getGlobalTypes) fixed a bracketing error

2002-02-19  Steve Osselton  <steve@prismtechnologies.com>

        * idl/UnionType.java: Fix for bug #97

        * idl/ArrayTypeSpec.java, idl/IdlSymbol.java, idl/Member.java,
        idl/UnionType.java, idl/AliasTypeSpec.java: Update for bugs #63
        and #94

        * idl/Declarator.java, idl/LongType.java: Blank lines remmoved

2002-02-18  Steve Osselton  <steve@prismtechnologies.com>

        * idl/ObjectTypeSpec.java: Fix for bug #96. Correct type code now
        generated

2002-02-18  Jason Courage

        * orb/CDRInputStream.java: Added code to 0xffffffff case of
        read_TypeCode operation to correctly handle repeated and recursive
        typecodes read from a stream.

        * orb/TypeCode.java: Added code to ensure that a recursive
        typecode is handled like a normal typecode by TypeCode API, and
        added code to resolve recursion in unions and structs.

2002-02-18  Steve Osselton  <steve@prismtechnologies.com>

        * orb/ORBSingleton.java: Diagnostics update

2002-02-18  Jason Courage

        * orb/ORBSingleton.java: Added calls to resolve recursion in
        create_union_tc and create_struct_tc operations.

        * orb/ORBSingleton.java:
        Fixed discriminator type check to handle aliased discriminators.

        * orb/ORBSingleton.java: Fixed check for TC member type to allow
        for recursive types and fixed checks in create_union_tc
        operation (bug 93).

2002-02-14  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/UnionType.java:
        (writeHelperClass) correctly generate code for method type() (was:
        bug when resolvin typedef'd const values)

        * orb/ORBSingleton.java:
        (checkTCRepositorId) fixed wrong condition check

2002-02-14  Steve Osselton  <steve@prismtechnologies.com>

        * naming/Name.java: Fix for bug #50. Escaped name handling update

        * orb/ORB.java, orb/ORBSingleton.java:
        Fix for bug #91. DII operations now not allowed on singleton ORB

2002-02-14  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/ORBSingleton.java:
        (tc_create) methods: added checking for invalid arguments

2002-02-14  Steve Osselton  <steve@prismtechnologies.com>

        * orb/connection/Client_TCP_IP_Transport.java:
        Bug #81 fix reversion. See bug tracker logs

        * idl/OpDecl.java: Fix for bugs #64 and #66. Fix for wchar and
        wstring inout parameter handling in helper

2002-02-13  Steve Osselton  <steve@prismtechnologies.com>

        * orb/ParsedIOR.java, orb/ORB.java: Updates WRT bug #79. Ensure
        null returned from ObjectUtil.readURL operation handled correctly

        * orb/dii/Request.java: Fix for bug #83. User exceptions now
        encapsulated within environment

2002-02-13  Jason Courage

        * orb/CDRInputStream.java: Fix for repeated TypeCodes in a
        constructed type in an Any: in the 0xffffffff case of the
        read_TypeCode method the TypeCode is obtained from the
        recursiveTCMap rather than created from the
        ORB::create_recursive_tc method.

2002-02-13  Steve Osselton  <steve@prismtechnologies.com>

        * idl/UnionType.java: Fix for bug #61. Valid code now generated
        for unions with long long discriminators

2002-02-12  Steve Osselton  <steve@prismtechnologies.com>

        * orb/factory/PortRangeSocketFactory.java,
        orb/factory/SocketFactoryManager.java,
        orb/connection/ConnectionManager.java,
        orb/factory/DefaultServerSocketFactory.java,
        orb/factory/DefaultSocketFactory.java, orb/BasicAdapter.java:
        Updates based upon EHR #57 to support configurable socket
        factoriesD

        * orb/connection/Client_TCP_IP_Transport.java:
        Update to fix for bug #81

2002-02-11  Steve Osselton  <steve@prismtechnologies.com>

        * orb/connection/Client_TCP_IP_Transport.java:
        Update to fix for bug #81 ts use reflection

2002-02-08  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/sym.java, idl/TypeMap.java, idl/UnionType.java,
        idl/parser.cup, idl/parser.java, idl/ElementSpec.java,
        idl/EnumType.java, idl/Environment.java, idl/IdlSymbol.java,
        idl/StructType.java: misc cosmetics

        * idl/Case.java:
        (parse) changed generatio of scoped name for enum labels

2002-02-08  Steve Osselton  <steve@prismtechnologies.com>

        * orb/connection/Client_TCP_IP_Transport.java: Patch for bug #81 added

2002-02-08  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/SwitchBody.java:
        (parse) fixed another NPE when running into the default label

2002-02-07  Steve Osselton  <steve@prismtechnologies.com>

        * idl/UnionType.java, idl/CharType.java, idl/EnumType.java,
        idl/IntType.java, idl/ScopedName.java, idl/SwitchTypeSpec.java,
        idl/TypeSpec.java, idl/BooleanType.java, idl/BaseType.java: Fix
        for bug #60 - invalid wchar discriminators not detected

2002-02-07  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/sym.java, idl/parser.java: *** empty log message ***

        * idl/SwitchBody.java: (parse) fixed null pointer error

        * idl/sym.java, idl/parser.cup, idl/parser.java:
        *** empty log message ***

        * idl/UnionType.java:
        updated to reflext name changes (renamed v in SwitchBody to
        caseListVector)

        * idl/SymbolList.java: cosmetics

        * idl/lexer.java:
        error reporting routines: fixed wrong increments of error numbers

        * idl/XorExpr.java, idl/AndExpr.java, idl/ConstExpr.java,
        idl/MultExpr.java, idl/OrExpr.java, idl/PrimaryExpr.java,
        idl/ShiftExpr.java, idl/UnaryExpr.java, idl/AddExpr.java: added
        set_token() to delegate toke setting such that error messages will
        eventually report the correct source code line

        * idl/SwitchBody.java: (parse) now checks for duplicate case labels

        * idl/Case.java:
        (get Labels()) added to allow SwitchBody to get at the labels for
        stricter type checking

2002-02-04  Steve Osselton  <steve@prismtechnologies.com>

        * idl/AliasTypeSpec.java: Fix for bug #76

        * idl/UnionType.java: Fix for bug #75

2002-01-31  Nicolas Noffke  <Nicolas.Noffke@epost.de>

        * collection/util/ArrayFactory.java, collection/util/Cach.java,
        collection/util/SortedVector.java: removed "};" to avoid confusing
        some compilers

2002-01-25  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/JacIDL.java: *** empty log message ***

2002-01-23  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/Delegate.java:
        (servant_preinvoke) changed condition so that servant managers are
        also possible with RETAIN POAs

2002-01-22  Nicolas Noffke  <Nicolas.Noffke@epost.de>

        * orb/CDROutputStream.java: (check(int,int)) fixed stupidity :-) bug

2002-01-21  Jason Courage

        * orb/dynany/DynUnion.java: Correctly initialise the current
        position in the set_to_no_active_member and set_discriminator
        operations.

        * orb/dynany/DynUnion.java: Never set default discriminator value
        to zero octet; when looking for char value not used in union,
        search begins at char with int value of zero; value of default
        member does not change if discriminator is set to a new value that
        still corresponds to the default member.

2002-01-18  Nicolas Noffke  <Nicolas.Noffke@epost.de>

        * security/level2/CurrentImpl.java:
        the current is now able to run without a principal authenticator. this is
        necessary for ssl with sun jsse, so access to the peers certificates is
        possible.

        * orb/CDROutputStream.java:
        (check(int,int)) inserted code that will zero out padding bytes so
        there isn't any garbage in it anymore. This is necessary for ior
        stringification so the same iors will always produce the same strings

        * orb/BufferManager.java:
        (getBuffer) removed the Arrays.fill() - this is now done in the stream
        (whole) replaced the usage of Vectors by Stacks - especially the call
        to removeElementAt( 0 ) which is pretty inefficient to get an
        arbitrary entry

        * orb/ParsedIOR.java:
        (getIORString) - replaced "hexifying" the ior buffer by a simpler and
        faster way (using a lookup table instead of computing the char)

2002-01-17  Jason Courage

        * orb/dynany/DynAny.java: Added null and void typecodes to list of
        valid typecodes for creating a DynAny.

2002-01-11  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/BufferManager.java:
        (getBuffer) clear buffers before returning them

        * orb/connection/ServerRequestListener.java: *** empty log message ***

        * orb/Delegate.java:
        (toString) call piorOriginal.getIORString() instead of accessing a
        (now private) field

        * orb/ParsedIOR.java: made field ior_str private

        * security/ssl/iaik/SSLServerSocketFactory.java:
        (switchToClientMode) added Debug output

        * orb/BasicAdapter.java: (Listener.run) added SSL role switch

        * orb/portableInterceptor/ServerRequestInfoImpl.java: cosmetics

        * orb/CDROutputStream.java: *** empty log message ***

        * orb/Any.java: whitespace :-)

        * orb/dsi/ServerRequest.java:
        (result) fixed funneling raw byte arrays into the any

        * orb/connection/ServiceContextTransportingOutputStream.java:
        (getBody) new method to get at the contents of the message

        * ir/gui/typesystem/remote/RemoteTypeSystem.java,
        ir/StringDef.java, ir/StructDef.java, ir/TypeCodeUtil.java,
        ir/WstringDef.java, ir/gui/IRBrowser.java,
        ir/gui/typesystem/remote/IRWstring.java, ir/ConstantDef.java,
        ir/IDLType.java, ir/IRWstring.java, ir/IdlWriter.java,
        security/level2/PrincipalAuthenticatorImpl.java,
        security/level2/CurrentImpl.java, orb/ORB.java, orb/TypeCode.java,
        orb/ParsedIOR.java: *** empty log message ***

2002-01-09  Andre Spiegel  <spiegel@gnu.org>

        * idl/OpDecl.java (printInvocation): Fix the case when the
        argument of a writeStatement is itself generated.

        * idl/ValueDecl.java (printHolder, printHelper): Delegate all
        read/write methods to the streams.

2002-01-07  Steve Osselton  <steve@prismtechnologies.com>

        * orb/ParsedIOR.java: Updates for bug report #52

2002-01-04  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/ParamDecl.java:
        (printWriteStatement, printReadExpression) convenience methods
        added

        * idl/OpDecl.java:
        (printMethod, printInvocation) fixed generated read/write
        statements to address wstring problems in bug #54

2002-01-04  Steve Osselton  <steve@prismtechnologies.com>

        * orb/ParsedIOR.java: Fix for bug #53

2001-12-21  Nicolas Noffke  <Nicolas.Noffke@epost.de>

        * orb/ORB.java:
        (set_parameters) fixed bug 39: now supporting args of form
        -ORBInitRef <name>=value (whitespace instead of dot)

2001-12-21  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Any.java: Basic type extraction fix when using
        CDROutputStream as internal representation

2001-12-21  Nicolas Noffke  <Nicolas.Noffke@epost.de>

        * security/ssl/sun_jsse/README.jsse1_0_2,
        security/ssl/sun_jsse/ServerInvocationInterceptor.java.patch,
        security/ssl/sun_jsse/build.xml,
        security/ssl/sun_jsse/SSLServerSocketFactory.java.patch,
        security/ssl/sun_jsse/SSLSocketFactory.java.patch: integrated
        patch by Stefan Feder for accessing the peers certs with JSSE
        1.0.2

        * orb/portableInterceptor/ServerInterceptorIterator.java,
        orb/Delegate.java,
        orb/portableInterceptor/ClientInterceptorIterator.java: adapted to
        changes in PortableInterceptor IDL (removed permanent flag of
        ForwardRequest exception)

        * orb/portableInterceptor/ClientRequestInfoImpl.java:
        (forward_reference()) fixed double negation where this op throws a
        BAD_INV_ORDER when it actually shouldn't (BUG 51)

2001-12-20  Steve Osselton  <steve@prismtechnologies.com>

        * orb/Principal.java, orb/Current.java, orb/ORB.java,
        orb/CDRInputStream.java, orb/CDROutputStream.java: Current and
        Principal deprecated

        * orb/Any.java: Bug fixes for #48 and #49

2001-12-17  Steve Osselton  <steve@prismtechnologies.com>

        * poa/POA.java: Fix for bug #37: Missing the_children attribute
        implementation added

        * poa/POA.java: Fix for bug #36: create_reference operations no
        longer cache created reference

2001-12-17  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/TypeDeclaration.java: *** empty log message ***

        * idl/MemberList.java: cosmetics

        * orb/util/PrintIOR.java:
        added a number of print methods for various tagged components

        * idl/ValueDecl.java:
        (setEnclosingSymbol) set this as the enclosing symbol in delegated
        calls

        * idl/StructType.java:
        (setEnclosingSymbol) set this as the enclosingSymbol for delegates

        * idl/Environment.java: cosmetics

2001-12-14  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/Member.java, idl/StructType.java, idl/ValueDecl.java:
        (parse) propagate setEnclosingSymbol to members

2001-12-14  Andre Spiegel  <spiegel@gnu.org>

        * orb/ORBSingleton.java:
        Patch by Francisco Reverbel <reverbel@ime.usp.br>.
        (create_interface_tc): Adapt to new TypeCode constructor.
        (create_abstract_interface_tc): Implemented.

        * orb/ORB.java: Patch by Francisco Reverbel <reverbel@ime.usp.br>.
        (createIOR): Package access.  New parameter policy_overrides.

        * orb/Delegate.java: Patch by Francisco Reverbel <reverbel@ime.usp.br>.
        Extend CORBA_2_3 Delegate.
        (policy_overrides): New field.
        (set_policy_override, get_codebase): Implemented.

        * orb/CDROutputStream.java:
        Patch by Francisco Reverbel <reverbel@ime.usp.br>, adapted AS.
        (codebaseMap): New field.
        (write_TypeCode): Be prepared for non-JacORB TypeCodes.  Handle
        tk_abstract_interface.
        (write_codebase, write_value_header): New method.
        (write_value): Use them.
        (write_abstract_interface): Implemented.

        * orb/CDRInputStream.java:
        Patch by Francisco Reverbel <reverbel@ime.usp.br> (adapted AS.)
        (codebaseMap): New field.
        (read_Object(Class)): Implement for javax.rmi.Remote.
        (read_TypeCode): Handle tk_abstract_interface.
        (read_value): Handle codebases in all variants.
        (read_untyped_value): Add `codebase' parameter.
        (read_special_value): Removed.
        (read_codebase, read_indirect_value): New method.
        (read_abstract_interface): Implemented.

        * orb/Any.java: Patch by Francisco Reverbel <reverbel@ime.usp.br>.
        (read_value, write_value): Handle abstract interfaces.

        * orb/portableInterceptor/IORInfoImpl.java:
        Patch by Francisco Reverbel <reverbel@ime.usp.br>.
        (policy_overrides): New field.
        (IORInfoImpl): New parameter for it.
        (get_effective_policy): Handle overridden policies.

        * orb/util/PrintIOR.java:
        Patch by Francisco Reverbel <reverbel@ime.usp.br>.
        (printIOR): Handle codebases.

        * ir/TypeCodeUtil.java (static initializer):
        Adapt to new constructor for TypeCode tk_objref.

        * util/Environment.java (getORBInitializers):
        Don't use Class.forName().

        * util/ValueHandler.real, util/ValueHandler.dummy (loadClass,
        getCodebase, portableRemoteObject_narrow): New methods.

        * orb/ParsedIOR.java:
        Patch by Francisco Reverbel <reverbel@ime.usp.br>.
        (getCodebaseComponent): New method.

        * orb/TypeCode.java (TypeCode [tk_value]): Handle null member list.
        (TypeCode): Change parameters of constructor for tk_objref; also use it
        for tk_abstract_interface.

        * orb/TypeCode.java (TypeCode [tk_value]): Handle null member list.

        * util/Environment.java (getORBInitializers):
        Don't use Class.forName().

        * orb/util/PrintIOR.java (printIOR): Handle codebases.

        * orb/portableInterceptor/IORInfoImpl.java (policy_overrides):
        New field.
        (IORInfoImpl): New parameter for it.
        (get_effective_policy): Handle overridden policies.

        * orb/TypeCode.java (TypeCode):
        Change parameters of constructor for tk_objref; also use it
        for tk_abstract_interface.

        * orb/ParsedIOR.java (getCodebaseComponent): New method.

2001-12-14  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * ir/gui/typesystem/ModelParticipant.java: cosmetics

        * ir/IRWstring.java: *** empty log message ***

2001-12-13  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/OpDecl.java, idl/RaisesExpr.java, idl/SequenceType.java,
        idl/SwitchBody.java, idl/UnionType.java, idl/AliasTypeSpec.java,
        idl/AttrDecl.java, idl/BaseType.java, idl/ElementSpec.java,
        idl/IdlSymbol.java, idl/Member.java: fixed broken import
        statements for simply types

2001-12-11  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/ParsedIOR.java:
        (init) added two other cases in which clients use SSL, viz. if the
        target's SSL profile required integrity/confidentiality

2001-12-11  Steve Osselton  <steve@prismtechnologies.com>

        * imr/ImplementationRepositoryImpl.java: Fix for bug #41 - imr not
        starting when jacorb.use_imr property is enabled

2001-12-07  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/parser.java, idl/sym.java, idl/StructType.java,
        idl/SwitchBody.java, idl/UnionType.java, idl/lexer.java,
        idl/parser.cup, idl/Interface.java, idl/Member.java,
        idl/MemberList.java, idl/OpDecl.java, idl/RaisesExpr.java,
        idl/SequenceType.java, idl/AliasTypeSpec.java, idl/AttrDecl.java,
        idl/Declaration.java, idl/Definition.java, idl/ElementSpec.java,
        idl/IdlSymbol.java: added code to generate import statements for
        type names in the unnamed package.

2001-12-07  Jason Courage

        * orb/dynany/DynAny.java: Set the default value of a DynAny
        containing an object reference.

2001-12-07  Steve Osselton  <steve@prismtechnologies.com>

        * util/Environment.java: Update to allow log file to be based upon
        implementation name

2001-12-07  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/CDROutputStream.java:
        (write_TypeCode) added missing table entries for
        recursive/repeated TCs

        * orb/CDRInputStream.java:
        (read_TypeCode) added missing table entries for recursive/repeated
        TCs

2001-12-06  Steve Osselton  <steve@prismtechnologies.com>

        * orb/TypeCode.java: Null pointer fix for static initialization of
        _tk_value TypeCode

2001-11-30  Andre Spiegel  <spiegel@gnu.org>

        * orb/TypeCode.java (primitive_tcs): Add another bogus TypeCode
        object for kind _tk_value, to pacify Sun's ValueHandler.

2001-11-30  Jason Courage

        * orb/dynany/DynUnion.java: Fixed initialization of current
        position; fixed iteration operations; fixed implementation of
        set_to_no_active_member operation.

2001-11-29  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * security/build.xml: fixed error in principal_authenticator target

2001-11-28  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * build.xml: *** empty log message ***

        * orb/dynany/DynStruct.java: added new instance variable
        exception_msg for exceptions

        (c'tor, from_any, to_any) for exceptions, read and write exception_msg

2001-11-27  Jason Courage

        * orb/dynany/DynStruct.java: Fixed exception handling in
        current_member_name/kind and set_members operations.

        * orb/dynany/DynArray.java, orb/dynany/DynEnum.java,
        orb/dynany/DynSequence.java, orb/dynany/DynUnion.java,
        orb/dynany/DynAny.java: Added code to test if the dynany has been
        destroyed.

        * orb/dynany/DynStruct.java: Added code to test if the dynany has
        been destroyed; set initial position to zero for all dynstructs
        except empty exceptions; throw TypeMismatch if current_component
        is called on an empty exception.

2001-11-27  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * orb/TypeCode.java:
        (member_label, default_index, discriminitator) only accept unions,
        not structs
        (member_count, member_name, member_type) also handle exceptions

        * idl/StructType.java:
        (getTypeCodeExpression) create exception typeCode with
        "create_exception_tc"

2001-11-26  Gerald Brose  <Gerald.Brose@xtradyne.com>

        * idl/Interface.java:
        (printOperations) inherit from sn + "Operations" rather than from
        sn

        * idl/InterfaceBody.java:
        (parse) added escaping the interface name here also.

2001-11-26  Jason Courage

        * orb/dynany/DynSequence.java, orb/dynany/DynStruct.java,
        orb/dynany/DynUnion.java: Removed System.err statements.

2001-11-23  Jason Courage

        * orb/dynany/DynAny.java: All operations throw OBJECT_NOT_EXIST if
        the DynAny has been destroyed; the get/insert_dyn_any ops have
        been correctly implemented; the get/insert ops now correctly throw
        a TypeMismatch exception if a type-incorrect operation is used.

2001-11-23  Steve Osselton

        * orb/ORB.java: Check for local object added to object_to_string

2001-11-22  Prism

        * transaction/ServerInitializer.java,
        transaction/TransactionCurrentImpl.java,
        util/tracing/ClientTraceInterceptor.java,
        util/tracing/ServerTraceInterceptor.java,
        util/tracing/TraceInitializer.java,
        security/ssl/iaik/SecurityServiceInitializer.java,
        security/ssl/iaik/ServerInvocationInterceptor.java,
        security/ssl/sun_jsse/SecurityServiceInitializer.java,
        security/ssl/sun_jsse/ServerInvocationInterceptor.java,
        transaction/ClientContextTransferInterceptor.java,
        transaction/ClientInitializer.java,
        transaction/ServerContextTransferInterceptor.java,
        security/level2/EstablishTrustPolicyImpl.java,
        security/level2/InvocationCredentialsPolicyImpl.java,
        security/level2/MechanismPolicyImpl.java,
        security/level2/PrincipalAuthenticatorImpl.java,
        security/level2/QOPPolicyImpl.java,
        security/level2/RequiredRightsImpl.java,
        security/level2/ServerAccessDecisionInterceptor.java,
        security/level2/ServerInitializer.java,
        poa/policy/RequestProcessingPolicy.java,
        poa/policy/ServantRetentionPolicy.java,
        poa/policy/ThreadPolicy.java,
        security/level2/AccessDecisionImpl.java,
        security/level2/CredentialsImpl.java,
        security/level2/CurrentImpl.java,
        security/level2/DelegationDirectivePolicyImpl.java,
        poa/POAManager.java, poa/policy/IdAssignmentPolicy.java,
        poa/policy/IdUniquenessPolicy.java,
        poa/policy/ImplicitActivationPolicy.java,
        poa/policy/LifespanPolicy.java,
        poa/policy/MapToDefaultDomainsPolicy.java,
        orb/portableInterceptor/RecursionAwareCI.java,
        orb/portableInterceptor/RequestInfoImpl.java,
        orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SSLComponentInterceptor.java,
        poa/Current.java, poa/POA.java,
        orb/portableInterceptor/CodecFactoryImpl.java,
        orb/portableInterceptor/Codec_CDR_1_0_Impl.java,
        orb/portableInterceptor/DefaultClientInterceptor.java,
        orb/portableInterceptor/DefaultServerInterceptor.java,
        orb/portableInterceptor/IORInfoImpl.java,
        orb/portableInterceptor/ORBInitInfoImpl.java,
        orb/portableInterceptor/PICurrentImpl.java,
        orb/connection/BiDirPolicy.java,
        orb/connection/BiDirPolicyFactory.java, orb/dynany/DynAny.java,
        orb/dynany/DynAnyFactoryImpl.java,
        orb/policies/BiDirPolicyFactoryImpl.java,
        orb/policies/BiDirPolicyImpl.java, orb/Current.java,
        orb/LocalityConstrainedObject.java,
        orb/connection/BiDirConnectionInitializer.java,
        orb/CDROutputStream.java: org.jacorb.orb.LocalityConstrainedObject
        replaced with org.omg.CORBA.LocalObject

2001-11-21  Gerald Brose  <gerald.brose@acm.org>

        * orb/CDRInputStream.java:
        (read_string) added "0xff &" before casting byte to char.

2001-11-20  Gerald Brose  <gerald.brose@acm.org>

        * idl/sym.java, idl/parser.java: *** empty log message ***

        * idl/parser.cup, orb/ORB.java: updated version string

2001-11-20  Gerald Brose  <gerald.brose@acm.org>

        * JacORB 1.4 beta 2 released.

2001-11-20  Andre Spiegel  <spiegel@gnu.org>

        * orb/CDROutputStream.java:
        (write_value (BoxedValueHelper)): Don't write repository id for
        strings.

2001-11-20  Nicolas Noffke  <noffke@inf.fu-berlin.de>

        * build.xml:
        added target valuehandler that wraps valuehandler-dummy and
        valuehandler-real which has to be executed before compiling the orb

        * security/level2/CurrentImpl.java:
        removed reference to PrincipalAuthenticatorImpl, so compile will
        succeed without having iaiks libs present

        * security/build.xml: adapted to iaik /jsse split

        * imr/build.xml: removed JDK 1.1 compatibility

2001-11-20  Gerald Brose  <gerald.brose@acm.org>

        * build.xml, ir/build.xml, orb/build.xml:
        no more JDK 1.1 checks in build files

2001-11-20  Andre Spiegel  <spiegel@gnu.org>

        * orb/CDRInputStream.java (currentValueIndex): New instance field.
        (read_untyped_value): Set it.
        (register_value): New method; registers a value object at
        `currentValueIndex'.

        * orb/ORB.java (JacORBValueFactory): New private class.
        (findValueFactory): Use it, instead of an inlined anonymous class.

2001-11-20  Gerald Brose  <gerald.brose@acm.org>

        * build.xml, ir/build.xml, naming/build.xml: removed JDK version  check

2001-11-20  Andre Spiegel  <spiegel@gnu.org>

        * ChangeLog: Initial revision.

2001-11-19  Nicolas Noffke  <noffke@inf.fu-berlin.de>

        * imr/ImplementationRepositoryImpl.java:
        (main) moved System.setProperty( "jacorb.implname", "the_ImR" );
        to top of method (in front of any other call to Environment)

        * util/Environment.java: removed unused code, replaced op merge()
        by _props.putAll() (dropped jdk1.1 support)

2001-11-19  Andre Spiegel  <spiegel@gnu.org>

        * orb/build.xml (javatest): Check for RMI/IIOP (JDK 1.3).
        (reference-with-rmi, reference-without-rmi): New targets.
        (all): Depend on them.

        * orb/Reference.java: Removed.

        * util/ValueHandler.real: cosmetics

        * util/ValueHandler.java: Removed.

        * util/ValueHandler.dummy: Replace org.omg.SendingContext with
        org.omg.CORBA.portable.IDLEntity.

2001-11-19  jacorb

        * orb/portableInterceptor/build.xml: fixed wrong paths

2001-11-19  Nicolas Noffke  <noffke@inf.fu-berlin.de>

        * util/Environment.java: *** empty log message ***

2001-11-19  Gerald Brose  <gerald.brose@acm.org>

        * orb/Reference.template: new template, generated Reference.java
        as appropriate for the actual JDK version (1.2 or >1.3)

2001-11-19  jacorb

        * security/ssl/sun_jsse/README.jsse1_0_2: *** empty log message ***

        * security/ssl/iaik/SSLServerSocketFactory.java,
         security/ssl/iaik/SSLSocketFactory.java,
         security/ssl/sun_jsse/SSLServerSocketFactory.java,
         security/ssl/sun_jsse/SSLSocketFactory.java,
         security/ssl/sun_jsse/ServerInvocationInterceptor.java,
         security/level2/KeyAndCert.java: adapted to jdk1.4 changes

        * security/ssl/sun_jsse/SecurityServiceInitializer.java:
        *** empty log message ***

        * security/level2/ServerAccessDecisionInterceptor.java,
        security/ssl/iaik/ServerInvocationInterceptor.java,
        security/ssl/sun_jsse/SSLServerSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java: adapted to updated
        IDL (new destroy() op)

        * util/tracing/TraceInitializer.java,
         util/tracing/ClientTraceInterceptor.java,
         util/tracing/ServerTraceInterceptor.java,
         transaction/TransactionCurrentImpl.java,
         transaction/ClientContextTransferInterceptor.java,
         transaction/ClientInitializer.java,
         transaction/ServerContextTransferInterceptor.java,
         transaction/ServerInitializer.java: adapted to updated IDL (new
         destroy() op)

        * orb/standardInterceptors/CodeSetInfoInterceptor.java,
        orb/standardInterceptors/SSLComponentInterceptor.java,
        orb/portableInterceptor/CodecFactoryImpl.java,
        orb/portableInterceptor/Codec_CDR_1_0_Impl.java,
        orb/portableInterceptor/DefaultClientInterceptor.java,
        orb/portableInterceptor/DefaultServerInterceptor.java,
        orb/portableInterceptor/InterceptorManager.java,
        orb/portableInterceptor/ORBInitInfoImpl.java, orb/ORB.java,
        orb/connection/BiDirConnectionClientInterceptor.java,
        orb/connection/BiDirConnectionInitializer.java,
        orb/connection/BiDirConnectionServerInterceptor.java,
        orb/connection/TCP_IP_Transport.java, orb/CDROutputStream.java:
        merged IOP_N into IOP

        * imr/ImplementationRepositoryImpl.java:
        (main) jacorb.implname instead of implName

2001-11-19  Gerald Brose  <gerald.brose@acm.org>

        * orb/CDRInputStream.java: cosmetics

        * orb/CDROutputStream.java: (check) fixed incorrect offset computation

2001-11-16  jacorb

        * util/Assertion.java, util/Debug.java,
        orb/dynany/DynSequence.java, poa/POA.java,
        poa/policy/MapToDefaultDomainsPolicy.java,
        orb/domain/gui/DomainTreeNode.java,
        orb/domain/gui/MemberListRootNode.java,
        orb/domain/gui/PolicyListRootNode.java,
        orb/domain/gui/PopupMenuActivator.java,
        orb/domain/gui/SharedDataImpl.java, orb/dynany/DynAny.java,
        orb/domain/ODMCache.java, orb/domain/ORBDomainImpl.java,
        orb/domain/ParentRulesPolicy.java,
        orb/domain/PolicyFactoryImpl.java, orb/domain/gui/Browser.java,
        orb/domain/gui/BrowserFrame.java,
        orb/domain/ChildRulesPolicy.java,
        orb/domain/DomainFactoryImpl.java, orb/domain/DomainImpl.java,
        orb/domain/FirstConflictResolutionPolicy.java,
        orb/domain/MapToTypeDomainsPolicy.java, orb/CDROutputStream.java,
        orb/TypeCode.java, ir/StructDef.java, ir/UnionDef.java,
        ir/WstringDef.java,
        ir/gui/typesystem/remote/RemoteTypeSystem.java,
        orb/CDRInputStream.java, ir/InterfaceDef.java, ir/ModuleDef.java,
        ir/OperationDef.java, ir/SequenceDef.java, ir/StringDef.java,
        ir/AliasDef.java, ir/ArrayDef.java, ir/AttributeDef.java,
        ir/ConstantDef.java, ir/Contained.java, ir/Container.java,
        ir/ExceptionDef.java: renamed Debug.assert() to myAssert() for
        compatibility with the jdk1.4, because assert is a keyword in that
        jdk

        * orb/connection/Server_TCP_IP_Transport.java:
        (close) replaced socket.shutdown[In|Out]put() by calls to close on
        streams for jdk1.2 compatibility

        * orb/connection/Client_TCP_IP_Transport.java:
        (close) replaced socket.shutdown[In|Out]put() by calles to close
        to the streams for jdk1.2 compatibility

2001-11-16  Andre Spiegel  <spiegel@gnu.org>

        * build.xml (init): Define property `valuehandler.present'.
        (valuehandler-dummy, valuehandler-real): New targets.
        (utils): Depend on them.

2001-11-16  jacorb

        * events/ProxyPullSupplierImpl.java: cosmetics

        * events/ProxyPullConsumerImpl.java: cosmetics (use standard
        indentation)

        * events/EventChannelImpl.java: added Jeff Carlson to the list of
        authors

2001-11-16  Andre Spiegel  <spiegel@gnu.org>

        * util/ValueHandler.real, util/ValueHandler.dummy: Initial revision.

        * idl/BaseType.java (id): Override to return an explicitly bogus id.

        * idl/ConstrTypeSpec.java (getTypeCodeExpression): Add variant
        that passes a Set of known types along.

        * idl/Member.java (member_print): Add hack so that valuetype
        members have only their name printed, not the entire definition.

        * idl/TypeDeclaration.java (getRecursiveTypeCodeExpression): New
        method.
        (getTypeCodeExpression): Add variant that passes a Set of known
        types along.

        * idl/TypeSpec.java (getTypeCodeExpression): Add variant that
        passes a Set of known types along.

        * idl/ValueDecl.java: Support recursive valuetypes.
        (declaration): Overridden to return this.
        (parse): Make NameTable entry before parsing the members, to allow
        recursion.
        (getTypeCodeExpression): Add variant that passes a Set of known types
        around.
        (getValueMemberExpression): New parameter: Set of known types.

2001-11-16  jacorb

        * orb/CDROutputStream.java: cosmetics

        * orb/CDRInputStream.java:
        (read_value) resolve recursive TypeCodes using a global hash table

2001-11-15  jacorb

        * build.xml: target idl: separated compilation of DomainManagemen,
        because this would fail in certain cases

        * imr/ImplementationRepositoryImpl.java: made ImR use user POA
        with USER_ID, so it can be accessed via corbaloc

        * imr/ImRHostInfo.java: changed org.jacorb.orb.ORB to org.omg.CORBA.ORB

        * orb/ORB.java (set_parameters): commented out building of initial
        references. These will be build on demand in
        resolve_initial_references()

        * idl/parser.cup: updated version string

        * util/Debug.java, util/Environment.java, idl/parser.java,
        idl/sym.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        poa/AOM.java, idl/parser.cup: *** empty log message ***

2001-11-14  jacorb

        * orb/TypeCode.java: static initializer: added a primitive TCode
        that is returned when get_primitive_tc is called for tk_object
        (courtesy/workaround to Sun)

        * orb/Any.java, orb/ParsedIOR.java: cosmetics

        * orb/CDROutputStream.java:
        (write_value) removed bug (illegal access to tc.id(), which caused
        exceptions

        * imr/ImplementationRepositoryImpl.java: fixed bug that would
        wrongly treat LocateRequests as "normal" requests

        * orb/ParsedIOR.java:
        (createIOR) redesigned and renamed to "createObjectIOR"

        * orb/connection/LocateRequestInputStream.java:
        *** empty log message ***

2001-11-13  jacorb

        * orb/Delegate.java: removed debug statements

        * orb/Any.java: cosmetics, less debug output

        * orb/CDROutputStream.java: added functionality for
        recursive/repeated TypeCodes

        * orb/CDRInputStream.java: added functionality for reading
        recursive/repeated TypeCodes

        * orb/domain/MapToDefaultDomainPolicy.java,
        orb/domain/MapToTypeDomainsPolicy.java,
        orb/domain/MemberListInserter.java: cosmetics

        * orb/SystemExceptionHelper.java:
        (read) added explanatory string to systems exceptions that are
        re-thrown on the client side.

        * poa/build.xml, security/build.xml: removed echo

        * imr/ServerTable.java: cosmetics

        * orb/CDROutputStream.java:
        (write_wchar(char , boolean)): UTF-16 case: forgot to increment
        index

        * orb/CDRInputStream.java:
        (read_wstring) fixed bug in GIOP 1.2 if branch: return String got
        passed the whole char array instead of the portion used (up to
        "i")

2001-11-12  jacorb

        * poa/POAConstants.java: *** empty log message ***

        * poa/POAConstants.java: cosmetics

2001-11-12  Andre Spiegel  <spiegel@gnu.org>

        * idl/OpDecl.java (printSignature): Add variant with boolean arg
        `printModifiers'.  Simplified parameter-printing code.

        * idl/Method.java, idl/Operation.java (printSignature): Add
        variant with boolean arg `printModifiers'.

        * idl/ValueDecl.java (parse): Convert attributes into operations.
        (printClass): Print signatures of operations.

2001-11-09  jacorb

        * orb/ORB.java, poa/POAMonitorImpl.java: cosmetics

        * orb/TypeCode.java: removed deprecated code for recursive type codes

        * orb/CDROutputStream.java: commented out a number of Debug statements

2001-11-09  Andre Spiegel  <spiegel@gnu.org>

        * idl/ValueAbsDecl.java: Initial revision.

2001-11-09  jacorb

        * orb/CDRInputStream.java: commented out debugging statements for
        performance reasons

        * orb/ORB.java:
        (createIOR) add IIOP 1.0 profiles in 1.2 IORs only if the
        appropriate property is set

        * orb/connection/BiDirConnectionServerInterceptor.java:
        (receive_request_service_contexts) changed marshalling of service
        context

        * orb/connection/BiDirConnectionClientInterceptor.java:
        (send_request) changed marshalling of service context

        * orb/ORB.java: *** empty log message ***

        * imr/build.xml: removed echo statements

        * orb/ORB.java:
        (findPOA) deal with parsing exceptions raised by POA utils

        * poa/util/POAUtil.java: cosmetics

        * security/build.xml: removed echo

        * security/ssl/iaik/ServerInvocationInterceptor.java: cosmetics

        * util/ObjectUtil.java: "added robustness"

        * util/Environment.java: cosmetics

        * idl/parser.java, idl/sym.java, idl/IdlSymbol.java,
        idl/Interface.java, idl/InterfaceBody.java, idl/ScopedName.java,
        idl/SimpleDeclarator.java, idl/parser.cup,
        idl/ArrayDeclarator.java, idl/Environment.java: name scoping fixes

        * ir/SequenceDef.java, ir/StructDef.java, ir/IRServer.java,
        ir/IdlWriter.java, ir/InterfaceDef.java, ir/ModuleDef.java,
        ir/OperationDef.java, ir/RepositoryImpl.java, ir/Contained.java,
        ir/Container.java, ir/EnumDef.java, ir/IDLType.java,
        ir/IRObject.java: various fixes and updates

        * ir/RepositoryID.java:
        (toRepositoryID) added overloaded variant with extra boolean
        parameter to avoid class loading, used from IR classes

        * ir/RepositoryID.java: (loadClass) static again

        * poa/util/POAUtil.java: cosmetics

        * poa/POA.java: (_getQualifiedName) now public for use by ORB
        (isRetain,isUseServantManager,previouslyGeneratedObjectId) now
        public cosmetics

        * poa/Current.java: dunno

        * poa/AOM.java: cosmetics

        * orb/Delegate.java: (is_local) updates and fixes

        * orb/Any.java: (equal) added check for null argument

        * orb/ServantDelegate.java: cosmetics

        * orb/TypeCode.java: removed deprecated code for resolving
        recursive TypeCodes, cosmetics

        * orb/CDROutputStream.java:
        (constructors, write_string, write_wstring) BOM-related fixes

        * orb/CDRInputStream.java:
        (constructors, read_wstring, read_string) BOM-related fixes

        * orb/ORB.java: (findPOA) updated

        * orb/dynany/DynStruct.java, orb/dynany/DynUnion.java,
        orb/dynany/DynAnyFactoryImpl.java, orb/dynany/DynArray.java,
        orb/dynany/DynEnum.java, orb/dynany/DynSequence.java: various
        fixes

2001-11-08  jacorb

        * orb/ORB.java (lookup_value_factory): Avoid name clash (jikes
        problem).

2001-11-08  Andre Spiegel  <spiegel@gnu.org>

        * idl/StructType.java (set_memberlist): Call
        MemberList.setContainingType() instead of setStruct().

        * idl/StateMember.java: Initial revision.

        * idl/Member.java: Extend Declaration rather than IdlSymbol.
        (containingType, setContainingType): Renamed from containing_struct,
        setStruct.  Updated all callers.
        (extractMember): New method.
        (parse): Use it.
        (typeSpec): New method.

        * idl/MemberList.java (containingType): Renamed from containing_struct.
        (setContainingType): Renamed from setStruct.

        * idl/ValueBoxDecl.java: Extend `Value' rather than
        `ValueDeclaration' (which no longer exists).

        * idl/Value.java: Renamed from `ValueDeclaration'.  This is now
        the superclass of both `ValueDecl' (which used to be called
        `Value') and `ValueBoxDecl'.

        * idl/ValueDecl.java: Initial revision.

        * idl/sym.java, idl/parser.java, idl/parser.cup: Add initial
        support for regular valuetypes.

        * idl/ValueDeclaration.java: Removed.

        * orb/ORB.java (valueFactories): New instance field.
        (register_value_factory, unregister_value_factory): Now
        implemented.
        (lookup_value_factory): Replaced dummy implementation with a real
        one.
        (findValueFactory, findClass, instantiate): New internal methods.

        * ir/RepositoryID.java (loadClass): New method.
        (ir2scopes, toRepositoryID): Use it.

        * idl/sym.java, idl/parser.java: Update for OBV.

        * idl/parser.cup: Adapt method names.

        * idl/ValueDecl.java: Working on the wire.

        * orb/CDRInputStream.java (read_untyped_value): Throw MARSHAL if
        there's no value factory.

2001-11-08  jacorb

        * poa/RequestController.java: cosmetics

2001-11-07  jacorb

        * security/level2/ServerAccessDecisionInterceptor.java:
        *** empty log message ***

        * orb/CDROutputStream.java, orb/CDRInputStream.java:
        adapted to GIOP 1.2 changes for wchars

2001-11-07  Andre Spiegel  <spiegel@gnu.org>

        * idl/ValueDecl.java (getTypeCodeExpression, getValueMemberExpression):
        New methods.
        (printClass, printHelper): Use them.

        * idl/Member.java (typeSpec): New method.

2001-11-06  jacorb

        * orb/ParsedIOR.java: added check so IORS without IIOP profiles
        are accepted

2001-11-05  Andre Spiegel  <spiegel@gnu.org>

        * idl/ValueDecl.java: Initially working.

2001-11-02  Andre Spiegel  <spiegel@gnu.org>

        * idl/StructType.java (set_memberlist):
        Use new method MemberList.setContainingType().

        * idl/Member.java (extractMember): New method.
        (parse): Use it.

        * idl/MemberList.java (containingType): Renamed from containing_struct.
        (setContainingType): Renamed from setStruct.

2001-11-02  jacorb

        * orb/ParsedIOR.java: *** empty log message ***

2001-11-02  Andre Spiegel  <spiegel@gnu.org>

        * idl/StateMember.java: Initial revision.

2001-11-02  jacorb

        * orb/Delegate.java:
        (is_local) modified so that check for poa._localStubsSupported()
        is ommitted and that local POAs are looked for first
        (getReference) omitted call to poa._localStubsSupported()
        (servant_preinvoke) modified to work also with servant managers

2001-11-02  Andre Spiegel  <spiegel@gnu.org>

        * idl/parser.cup: Add parse actions for regular value types.

        * idl/ValueDecl.java: Intermediate version.

2001-11-02  jacorb

        * orb/ORB.java:
        (string_to_object) changed call to new ParsedIOR so that "this" is
        passed to te constructor

        * orb/util/PingObject.java: added a check for o == null so that
        only convertable references are pinged

        * orb/util/PrintIOR.java: added acheck t ensure that only "IOR:"
        iors are parsed

        * orb/CDRInputStream.java: *** empty log message ***

        * orb/ORB.java: changed version String to 1.4 beta 1
        (set_parameters) added checks for null arguments

        * poa/POA.java:
        (_localStubsSupported) removed, no longer needed because of
        changes in orb.Delegate made isRetain public so that orb.Delegate
        may use it

2001-10-30  Andre Spiegel  <spiegel@gnu.org>

        * idl/Member.java: Extend Declaration rather than IdlSymbol.
        (containingType, setContainingType): Renamed from containing_struct,
        setStruct.  Updated all callers.

2001-10-29  Andre Spiegel  <spiegel@gnu.org>

        * idl/ValueDeclaration.java: Removed.

2001-10-26  jacorb

        * orb/ParsedIOR.java, orb/connection/ClientConnection.java,
         orb/portableInterceptor/InterceptorManager.java,
         orb/standardInterceptors/CodeSetInfoInterceptor.java,
         orb/CDRInputStream.java, orb/CDROutputStream.java: fixed bug in
         CodeSet support

2001-10-25  Andre Spiegel  <spiegel@gnu.org>

        * idl/ValueBoxDecl.java: New superclass `Value'.

        * idl/Value.java: Renamed from ValueDeclaration.

        * idl/ValueDecl.java: Initial revision.

        * idl/ValueDecl.java: New file.

2001-10-24  jacorb

        * poa/AOM.java:
        (remove) killed line: servant._this_object()._release(), which is
        nonsense

        * orb/connection/MessageReceptor.java:
        (doWork()) set exception output to a higher debug level.

2001-10-17  jacorb

        * orb/connection/RequestOutputStream.java, orb/Delegate.java,
        orb/connection/ClientConnection.java,
        orb/connection/ConnectionManager.java: *** empty log message ***

2001-10-12  jacorb

        * orb/dynany/DynEnum.java:
        (equal) added, to override equal() from DynAny

        * orb/dynany/DynAny.java: cosmetics

        * orb/dynany/DynUnion.java: (has_no_active_member) fixed

        * orb/Delegate.java, poa/Current.java, poa/RPPoolManager.java:
        invocation context management changed

        * poa/RequestController.java, poa/RequestQueue.java,
        poa/util/ByteArrayKey.java: *** empty log message ***

2001-10-11  jacorb

        * orb/Any.java: (insert_Object) added checks for null

        * orb/Delegate.java, orb/connection/ClientConnection.java,
         orb/connection/ConnectionManager.java: fixed sync issue with
         multiple LocationForwards

        * orb/connection/GIOPConnection.java:
         fixed synching bug (IllegalMonitorStateE)

        * orb/ParsedIOR.java: createReference() now also creates a
         ProfileBody1_1 with version 1.2

        * imr/ImplementationRepositoryImpl.java: replyNewLocation() fixed
         creation of faulty profile body

2001-10-10  jacorb

        * poa/POA.java:
        (getReference) use a ByteArrayKey rather than a String as the key
        for hashtable lookup
        (deactivate_object) use a ByteArrayKey rather than a String as the
        key for hashtable lookup

2001-10-09  jacorb

        * orb/Delegate.java: local invocation context management changed
        to fix the problem with local recursive calls

2001-10-08  jacorb

        * poa/POA.java: deactivate_object() remove reference from HT
        createdReferences()

        * poa/RequestProcessor.java: run() moved clear at end of method to
        before the returning of the thread so it can't overwrite data data
        set by a fast init()

        * orb/Delegate.java: invoke() pending_replies were not removed
        correctly so HT grew infinitely

2001-10-07  jcarlson

        * events/ProxyPullConsumerImpl.java,
        events/ProxyPullSupplierImpl.java,
        events/ProxyPushConsumerImpl.java,
        events/ProxyPushSupplierImpl.java: Changed Copyright dates.

2001-10-05  Andre Spiegel  <spiegel@gnu.org>

        * idl/Interface.java (signature): Method removed.

2001-10-04  jacorb

        * orb/connection/NoBiDirServerReplyListener.java,
        orb/connection/ReplyListener.java,
        orb/connection/ReplyPlaceholder.java,
        orb/connection/RequestListener.java,
        orb/connection/ServerRequestListener.java,
        orb/connection/TCP_IP_Transport.java, orb/Delegate.java,
        orb/connection/ClientConnection.java,
        orb/connection/GIOPConnection.java,
        orb/connection/NoBiDirClientRequestListener.java: fixed bug: when
        the server terminated the client connection, the client would hang
        instead of throwing a propert exception

        * poa/RequestProcessor.java: run() - wrapped wait() in while loop
        so unexpected notifies are handled correctly.

        * orb/connection/ConnectionListener.java,
        orb/connection/StreamClosedException.java,
        orb/connection/TimeOutException.java: *** empty log message ***

        * poa/RPPoolManager.java: cosmetics

        * security/ssl/sun_jsse/README.properties: Readme has been
        included into the Programming Guide

        * security/ssl/sun_jsse/SSLServerSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java: some ssl bug fixes
        and documentation updates

2001-10-02  jacorb

        * security/util/LoginWindow.java,
        security/level2/SwingedPAImpl.java, security/util/LoginData.java,
        security/level2/PrincipalAuthenticatorImpl.java,
        orb/connection/LocateRequestInputStream.java,
        orb/connection/LocateRequest.java: *** empty log message ***

        * orb/Any.java: (conflict between identical lines resolved)

        * trading/client/query/README, util/CapsuleThread.java,
        util/Environment.java, util/threadpool/ThreadPool.java,
        security/ssl/sun_jsse/SSLServerSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java,
        security/ssl/sun_jsse/build.xml, security/ssl/iaik/build.xml,
        security/ssl/sun_jsse/KeyStoreUtil.java,
        security/ssl/sun_jsse/README.properties,
        security/ssl/iaik/SecurityServiceInitializer.java,
        security/ssl/iaik/ServerChainVerifier.java,
        security/ssl/iaik/ServerInvocationInterceptor.java,
        security/ssl/iaik/SSLServerSocketFactory.java,
        security/ssl/iaik/SSLSetup.java,
        security/ssl/iaik/SSLSocketFactory.java,
        security/ssl/SecurityServiceInitializer.java,
        security/ssl/ServerInvocationInterceptor.java,
        security/ssl/build.xml, security/ssl/SSLSetup.java,
        security/ssl/SSLSocketFactory.java,
        security/level2/PrincipalAuthenticatorImpl.java,
        security/level2/SwingedPAImpl.java,
        security/ssl/SSLServerSocketFactory.java,
        security/jsse/KeyStoreUtil.java, security/jsse/build.xml,
        security/level2/CurrentImpl.java, poa/Current.java, poa/POA.java,
        poa/RequestProcessor.java, proxy/ForwarderImpl.java,
        security/build.xml, orb/connection/http/ServerConnection.java,
        orb/dsi/ServerRequest.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java,
        orb/portableInterceptor/ServerRequestInfoImpl.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SSLComponentInterceptor.java,
        orb/connection/TimeOutException.java,
        orb/connection/Transport.java,
        orb/connection/http/ClientConnection.java,
        orb/connection/ServiceContextTransportingOutputStream.java,
        orb/connection/TCP_IP_Transport.java,
        orb/connection/ServerRequestListener.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/ServiceContextTransportingInputStream.java,
        orb/connection/RequestListener.java,
        orb/connection/RequestOutputStream.java,
        orb/connection/ServerConnection.java,
        orb/connection/ReplyOutputStream.java,
        orb/connection/ReplyPlaceholder.java,
        orb/connection/ReplyReceptor.java,
        orb/connection/RequestInputStream.java,
        orb/connection/NoBiDirServerReplyListener.java,
        orb/connection/ReplyInputStream.java,
        orb/connection/ReplyListener.java,
        orb/connection/MessageReceptor.java,
        orb/connection/MessageReceptorPool.java,
        orb/connection/Messages.java,
        orb/connection/NoBiDirClientRequestListener.java,
        orb/connection/LocateRequestOutputStream.java,
        orb/connection/MessageInputStream.java,
        orb/connection/MessageOutputStream.java,
        orb/connection/ConnectionManager.java,
        orb/connection/GIOPConnection.java,
        orb/connection/LocateReplyInputStream.java,
        orb/connection/LocateReplyOutputStream.java,
        orb/connection/ClientReplyListener.java,
        orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/CodeSet.java,
        orb/connection/BiDirConnectionServerInterceptor.java,
        orb/connection/BiDirPolicy.java,
        orb/connection/BiDirPolicyFactory.java,
        orb/connection/ClientConnection.java, orb/ParsedIOR.java,
        orb/build.xml,
        orb/connection/BiDirConnectionClientInterceptor.java,
        orb/connection/BiDirConnectionInitializer.java, orb/Delegate.java,
        orb/ORB.java, orb/BasicAdapter.java, orb/BufferManager.java,
        orb/CDRInputStream.java, orb/CDROutputStream.java, build.xml,
        imr/ImplementationRepositoryImpl.java, naming/NameServer.java,
        orb/Any.java: Merged in GIOP 1.2 branch

2001-10-02  Andre Spiegel  <spiegel@gnu.org>

        * ir/gui/typesystem/Value.java: Initial revision, submitted by Ole
        Husgaard <osh@sparre.dk>.

        * ir/gui/typesystem/remote/RemoteTypeSystem.java
        (createTypeSystemNode): Add cases for Value, ValueBox, and
        ValueMember.  Submitted by Ole Husgaard <osh@sparre.dk>.

        * ir/gui/typesystem/remote/IRValue.java,
        ir/gui/typesystem/remote/IRValueBox.java,
        ir/gui/typesystem/remote/IRValueMember.java: Initial revision,
        submitted by Ole Husgaard <osh@sparre.dk>.

        * idl/ValueBoxDecl.java: Implement boxed values correctly
        according to spec.

        * ir/RepositoryID.java: Handle RMI: repository ids.

        * orb/CDROutputStream.java: Add value type support.  Extend
        CORBA_2_3 OutputStream.
        (valueMap, repIdMap): New fields.
        (orb): Method implemented.
        (write_TypeCode): Add cases for tk_value and tk_value_box.
        (write_value): Methods implemented.
        (write_special_value, write_repository_id, write_value_internal):
        New internal methods.

        * orb/CDRInputStream.java: Add value type support.  Extend
        CORBA_2_3 InputStream.
        (valueMap, repIdMap): New fields.
        (orb): Privatized field, implemented accessor method.
        (read_TypeCode): Add cases for tk_value and tk_value_box.
        (read_value): Methods implemented.
        (read_untyped_value, read_typed_value, read_repository_id,
        read_special_value): New internal methods.

        * orb/Reference.java: Extend javax.rmi.CORBA.Stub, implement
        java.rmi.Remote, as suggested by Francisco Reverbel
        <reverbel@ime.usp.br>.

        * orb/Any.java (extract_Value, insert_Value): Implemented.
        (read_value, write_value): Add case for tk_value.

        * orb/TypeCode.java: Add value type support.  Changes in part by
        Ole Husgaard <osh@sparre.dk>.
        (member_visibility, value_modifier): New instance fields.
        (primitive_tcs_map): New static field.
        (put_primitive_tcs): New static method, used in static initializer
        to populate the above.
        (TypeCode [tk_alias]): Add new parameter `_kind'; now works for
        both tk_alias and tk_value_box.
        (TypeCode [tk_value]): New constructor.
        (member_visibility, type_modifier, concrete_base_type): New
        methods.
        (create_tc, getValueMembers, createValueMember): New methods.

        * util/ValueHandler.java: Initial revision.

        * orb/ORBSingleton.java (create_value_tc, create_value_box_tc):
        Implemented.
        (create_alias_tc): Adapt to new TypeCode constructor.

        * orb/ORB.java (object_to_string): Delegate to delegate.
        Suggested by Francisco Reverbel <reverbel@ime.usp.br>.
        (lookup_value_factory): Dummy implementation.

        * orb/TypeCode.java (create_tc): Split into a public version that
        takes only a class, and a private version that passes a set of
        `knownClasses' along.
        (getValueMembers, createValueMember): Pass `knownClasses' through.

        * ir/RepositoryID.java (repId): Use org.jacorb.util.ValueHandler.

        * orb/CDROutputStream.java (write_value_internal): Use
        org.jacorb.util.ValueHandler.

        * orb/CDRInputStream.java (read_untyped_value): Use
        org.jacorb.util.ValueHandler.

        * util/ValueHandler.java: Initial revision.

        * util/ValueHandler.java: New file.

2001-10-01  jacorb

        * orb/connection/ServerRequestListener.java, util/Environment.java:
        *** empty log message ***

        * security/ssl/sun_jsse/build.xml: New file.

        * security/ssl/sun_jsse/build.xml, util/Environment.java:
        reintegrated SSL

        * security/ssl/sun_jsse/SSLServerSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java: New file.

        * security/ssl/sun_jsse/SSLServerSocketFactory.java,
        security/ssl/sun_jsse/SSLSocketFactory.java: reintegrated SSL

        * security/ssl/sun_jsse/KeyStoreUtil.java,
        security/ssl/sun_jsse/README.properties: New file.

        * security/ssl/sun_jsse/KeyStoreUtil.java,
        security/ssl/sun_jsse/README.properties: reintegrated SSL

        * security/ssl/iaik/build.xml: New file.

        * security/ssl/iaik/ServerInvocationInterceptor.java,
        security/ssl/iaik/build.xml: reintegrated SSL

        * security/ssl/iaik/ServerChainVerifier.java,
        security/ssl/iaik/ServerInvocationInterceptor.java: New file.

        * security/ssl/iaik/SecurityServiceInitializer.java,
        security/ssl/iaik/ServerChainVerifier.java: reintegrated SSL

        * security/ssl/iaik/SSLSocketFactory.java,
        security/ssl/iaik/SecurityServiceInitializer.java: New file.

        * security/ssl/iaik/SSLSocketFactory.java: reintegrated SSL

        * security/ssl/iaik/SSLServerSocketFactory.java,
        security/ssl/iaik/SSLSetup.java: New file.

        * security/ssl/iaik/SSLServerSocketFactory.java,
        security/ssl/iaik/SSLSetup.java: reintegrated SSL

        * security/ssl/build.xml: New file.

        * security/ssl/SSLSocketFactory.java,
        security/ssl/SecurityServiceInitializer.java,
        security/ssl/ServerInvocationInterceptor.java,
        security/ssl/build.xml,
        security/level2/PrincipalAuthenticatorImpl.java,
        security/level2/SwingedPAImpl.java,
        security/ssl/SSLServerSocketFactory.java,
        security/ssl/SSLSetup.java, security/jsse/KeyStoreUtil.java,
        security/jsse/README.properties,
        security/jsse/SSLServerSocketFactory.java,
        security/jsse/SSLSocketFactory.java, security/jsse/build.xml,
        security/level2/CurrentImpl.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/standardInterceptors/IORInterceptorInitializer.java,
        orb/standardInterceptors/SSLComponentInterceptor.java,
        security/build.xml, orb/connection/GIOPConnection.java,
        orb/connection/Messages.java,
        orb/connection/ServerRequestListener.java,
        orb/connection/ConnectionManager.java, orb/BasicAdapter.java,
        orb/Delegate.java, build.xml: reintegrated SSL

        * idl/str_token.java, idl/sym.java, idl/parser.cup,
        idl/parser.java, idl/IdlSymbol.java, idl/Literal.java,
        idl/Scope.java, idl/ScopeData.java, idl/StringType.java,
        idl/lexer.java, orb/dynany/DynSequence.java,
        orb/dynany/DynStruct.java, orb/dynany/DynUnion.java, orb/ORB.java,
        orb/ParsedIOR.java, orb/dynany/DynArray.java: *** empty log
        message ***

        * orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/ServiceContextTransportingOutputStream.java,
        orb/connection/TCP_IP_Transport.java,
        orb/connection/ReplyInputStream.java,
        orb/connection/ReplyOutputStream.java,
        orb/connection/RequestInputStream.java, orb/ParsedIOR.java,
        orb/connection/ClientConnection.java, orb/Delegate.java,
        orb/ORB.java, build.xml, imr/ImplementationRepositoryImpl.java:
        reintegrated imr + bug fixes

2001-09-27  jacorb

        * orb/connection/CodeSet.java, orb/connection/GIOPConnection.java,
        orb/connection/ServerRequestListener.java, orb/ParsedIOR.java,
        orb/connection/ClientConnection.java, orb/Delegate.java,
        orb/CDRInputStream.java, orb/CDROutputStream.java: reintegrated
        Codesets

2001-09-21  jacorb

        * orb/CDRInputStream.java (read_TypeCode): Add _tk_wchar in switch.

        * orb/CDROutputStream.java (write_TypeCode):
        Handle the case when concrete_base_type() is null.

        * orb/Any.java (insert_Value, extract_Value): Handle null values.

        * orb/TypeCode.java (primitive_tcs_map): New static variable.
        (put_primitive_tcs): New helper function, used in static initializer.
        (create_tc, getValueMembers, createValueMember): New class methods.

        * orb/CDROutputStream.java (orb): Method rewritten to obey
        singleton pattern.
        (write_repository_id): New method.
        (write_value_internal): Use it.
        (write_value (BoxedValueHelper)): Always write RepositoryID for
        RMI: types.

        * orb/CDRInputStream.java (orb): Instance var privatized, method
        rewritten to obey singleton pattern.
        (read_value (BoxedValueHelper)): Rewrote comment explaining use of
        type information.

        * orb/Any.java (extract_Value, insert_Value): Implemented.
        (read_value, write_value): Add handling of tk_value.

        * orb/connection/TCP_IP_Transport.java,
        orb/connection/Transport.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java,
        orb/connection/RequestListener.java,
        orb/connection/RequestOutputStream.java,
        orb/connection/ServerRequestListener.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/ReplyListener.java,
        orb/connection/ReplyOutputStream.java,
        orb/connection/RequestInputStream.java,
        orb/connection/MessageReceptor.java,
        orb/connection/NoBiDirClientRequestListener.java,
        orb/connection/NoBiDirServerReplyListener.java,
        orb/connection/ReplyInputStream.java, orb/connection/CodeSet.java,
        orb/connection/ConnectionManager.java,
        orb/connection/GIOPConnection.java,
        orb/connection/ClientConnection.java,
        orb/connection/ClientReplyListener.java,
        orb/connection/Client_TCP_IP_Transport.java, orb/ParsedIOR.java,
        orb/connection/BiDirConnectionClientInterceptor.java,
        orb/connection/BiDirConnectionServerInterceptor.java,
        orb/Delegate.java: *** empty log message ***

2001-09-20  jacorb

        Patch by Francisco Reverbel <reverbel@ime.usp.br>.

        * orb/Reference.java: Extend javax.rmi.CORBA.Stub, implement
        java.rmi.Remote.

        * ir/RepositoryID.java:
        (className): Map org.omg/CORBA/WStringValue to java.lang.String.
        (toRepositoryID): Use context class loader instead of
        Class.forName().

        * orb/ORBSingleton.java:
        (get_primitive_tc): Create new TypeCode object, don't delegate.

        * orb/ORB.java: (object_to_string): Delegate.

        * orb/CDRInputStream.java:
        (orb): Implemented.
        (read_value (factory)): Accept type information.
        (read_untyped_value): Add special handling for strings.  Use
        context class loader instead of Class.forName().
        (read_special_value): Better error message.

        * orb/CDROutputStream.java:
        (orb): Implemented.
        (write_value (value, class)): Always write RepositoryID for
        valuetypes.
        (write_value_internal): Use write_wstring for Strings.

2001-09-13  jacorb

        * naming/TestClient.java: *** empty log message ***

2001-09-11  jcarlson

        * events/ProxyPullSupplierImpl.java: Removed typo.

2001-09-10  jcarlson

        * events/ProxyPullSupplierImpl.java,
        events/ProxyPushConsumerImpl.java,
        events/ProxyPushSupplierImpl.java, events/EventChannelImpl.java,
        events/ProxyPullConsumerImpl.java: Modifications to bring Event
        Service into 1.1 specification compliance.

2001-09-09  jacorb

        * ir/RepositoryID.java (className, repId, toRepositoryID): Handle
        RMI: ids.

        * orb/CDROutputStream.java (write_state, write_primtive_field):
        Removed.
        (write_value_internal): For RMI: values, delegate to ValueHandler.

        * orb/CDRInputStream.java (read_untyped_value): New method which
        does the actual reading.
        (read_typed_value): Reimplemented in terms of the above.
        (read_special_value): Don't barf on typed values (which should
        never get here, though, anyway).
        (read_value): Use the above framework.  All versions implemented.

2001-09-07  jacorb

        * orb/dynany/DynSequence.java: (seek) stupid index setting bug removed

        * util/Version.java, poa/POA.java, poa/util/POAUtil.java,
        proxy/ForwarderImpl.java, trading/client/query/Query.java,
        trading/test/ImportThread.java, ir/RepositoryID.java,
        naming/NamingContextImpl.java: *** empty log message ***

        * poa/RequestController.java: cosmetics

        * security/level2/AccessDecisionImpl.java,
        security/level2/SecAttributeManager.java,
        security/level2/ServerAccessDecisionInterceptor.java: *** empty
        log message ***

        * idl/sym.java, idl/lexer.java, idl/parser.cup, idl/parser.java,
        idl/AliasTypeSpec.java, idl/ElementSpec.java,
        idl/GlobalInputStream.java, idl/IdlSymbol.java,
        idl/UnionType.java: UnionType: fixed type() method in helper
        generation (for enum discriminators)

        * orb/portableInterceptor/ORBInitInfoImpl.java, orb/Any.java,
        orb/CDRInputStream.java, orb/CDROutputStream.java,
        orb/ORBSingleton.java: fixed Any.equal()

        * orb/ORB.java: *** empty log message ***

        * orb/dynany/DynAny.java, orb/dynany/DynAnyFactoryImpl.java,
        orb/dynany/DynArray.java, orb/dynany/DynEnum.java,
        orb/dynany/DynSequence.java, orb/dynany/DynStruct.java,
        orb/dynany/DynUnion.java: Enable aliased TCs for dynany creation,
        made all DynAnys purely local objects (without POA involvement),
        fixed bugs

        * orb/TypeCode.java (equivalent): added create an unbounded string
        TypeCode as a "primitive" TC added two assertions,

2001-09-05  jacorb

        * orb/Fields.java: New file.

        * orb/CDROutputStream.java (valueMap, repIdMap): Use Map/HashMap
        instead of Hashtable.
        (write_value_internal): Second parameter is now a RepositoryID;
        updated all callers.
        (write_state, write_primitive_field): New methods.

        * orb/CDRInputStream.java (repIdMap): New field.
        (read_typed_value, read_repository_id): New methods.
        (read_value): Use them.

        * orb/CDROutputStream.java (repIdMap): New field.
        (write_value): Various new overloadings.
        (write_value_internal): New method.

        * orb/Delegate.java: synchronized access to the pending_replies
        hashtable

        * orb/portableInterceptor/DefaultClientInterceptor.java,
        orb/connection/old_conn/TimeOutException.java: *** empty log
        message ***

        * orb/connection/old_conn/TimeOutException.java: New file.

        * orb/connection/old_conn/ReplyReceptor.java,
        orb/connection/old_conn/ServerConnection.java: *** empty log
        message ***

        * orb/connection/old_conn/ServerConnection.java: New file.

        * orb/connection/old_conn/LocateRequestOutputStream.java: ***
        empty log message ***

        * orb/connection/old_conn/LocateRequestOutputStream.java,
        orb/connection/old_conn/ReplyReceptor.java: New file.

        * orb/connection/old_conn/LocateRequest.java,
        orb/connection/old_conn/LocateRequestInputStream.java: *** empty
        log message ***

        * orb/connection/old_conn/LocateRequest.java,
        orb/connection/old_conn/LocateRequestInputStream.java: New file.

        * orb/connection/old_conn/LocateReplyInputStream.java,
        orb/connection/old_conn/LocateReplyOutputStream.java: *** empty
        log message ***

        * orb/connection/old_conn/LocateReplyInputStream.java,
        orb/connection/old_conn/LocateReplyOutputStream.java: New file.

        * orb/connection/old_conn/AbstractConnection.java,
        orb/connection/old_conn/ClientConnection.java: *** empty log
        message ***

        * orb/connection/old_conn/ClientConnection.java,
        orb/connection/old_conn/AbstractConnection.java: New file.

        * orb/connection/ServiceContextTransportingOutputStream.java,
        orb/connection/ServiceContextTransportingInputStream.java: ***
        empty log message ***

        * orb/connection/ServiceContextTransportingInputStream.java,
        orb/connection/ServiceContextTransportingOutputStream.java: New
        file.

        * orb/connection/MessageInputStream.java,
        orb/connection/MessageOutputStream.java: *** empty log message ***

        * orb/connection/MessageInputStream.java,
        orb/connection/MessageOutputStream.java: New file.

        * orb/connection/BiDirPolicy.java,
        orb/connection/BiDirPolicyFactory.java: *** empty log message ***

        * orb/connection/BiDirPolicyFactory.java: New file.

        * orb/connection/BiDirConnectionInitializer.java,
        orb/connection/BiDirConnectionServerInterceptor.java: *** empty
        log message ***

        * orb/connection/BiDirConnectionServerInterceptor.java,
        orb/connection/BiDirPolicy.java: New file.

        * orb/connection/BiDirConnectionClientInterceptor.java: *** empty
        log message ***

        * orb/connection/BiDirConnectionClientInterceptor.java,
        orb/connection/BiDirConnectionInitializer.java: New file.

        * poa/RequestProcessor.java, orb/connection/TCP_IP_Transport.java,
        orb/dsi/ServerRequest.java, poa/POA.java,
        orb/connection/RequestInputStream.java,
        orb/connection/RequestOutputStream.java,
        orb/connection/ServerRequestListener.java,
        orb/connection/LocateRequestOutputStream.java,
        orb/connection/ReplyInputStream.java,
        orb/connection/ReplyOutputStream.java,
        orb/connection/ReplyPlaceholder.java,
        orb/connection/GIOPConnection.java,
        orb/connection/LocateReplyInputStream.java,
        orb/connection/LocateReplyOutputStream.java,
        orb/connection/ClientConnection.java,
        orb/connection/ConnectionManager.java, orb/ORB.java,
        orb/CDROutputStream.java, orb/Delegate.java,
        orb/BasicAdapter.java, orb/CDRInputStream.java: *** empty log
        message ***

2001-08-29  jacorb

        * orb/connection/TCP_IP_Transport.java: *** empty log message ***

        * orb/dynany/DynEnum.java, orb/dynany/DynSequence.java,
        orb/dynany/DynStruct.java, orb/dynany/DynAny.java,
        orb/dynany/DynArray.java: Fixed seek() in DynAny, added
        getRepresentation() to structured Dyns.

        * orb/CDROutputStream.java:
        (write_value) now supports unions with only a discriminator and no
        member values (no explicit default)

        * orb/CDRInputStream.java:
        (read_value) now supports unions with only a discriminator and no
        member values

        * orb/TypeCode.java: cosmetics

2001-08-28  jacorb

        * poa/AOM.java: removed superflous loops

2001-08-22  jacorb

        * util/threadpool/ThreadPool.java, naming/NameServer.java,
        poa/Current.java, poa/RequestProcessor.java, build.xml,
        orb/portableInterceptor/ServerRequestInfoImpl.java,
        orb/connection/new_conn/TCP_IP_GIOPTransport.java,
        orb/dsi/ServerRequest.java,
        orb/portableInterceptor/ClientRequestInfoImpl.java,
        orb/connection/new_conn/GIOPTransport.java,
        orb/connection/new_conn/ReplyListener.java,
        orb/connection/new_conn/RequestListener.java,
        orb/connection/new_conn/ServerRequestListener.java,
        orb/connection/new_conn/Server_TCP_IP_GIOPTransport.java,
        orb/connection/Transport.java,
        orb/connection/new_conn/Client_TCP_IP_GIOPTransport.java,
        orb/connection/new_conn/GIOPConnection.java,
        orb/connection/Server_TCP_IP_Transport.java,
        orb/connection/TCP_IP_Transport.java: *** empty log message ***

        * orb/connection/TCP_IP_Transport.java,
        orb/connection/Transport.java: New file.

        * orb/connection/ServerRequestListener.java: *** empty log message
        ***

        * orb/connection/ServerRequestListener.java,
        orb/connection/Server_TCP_IP_Transport.java: New file.

        * orb/connection/RequestInputStream.java,
        orb/connection/RequestListener.java,
        orb/connection/RequestOutputStream.java: *** empty log message ***

        * orb/connection/RequestListener.java: New file.

        * orb/connection/ReplyListener.java,
        orb/connection/ReplyOutputStream.java,
        orb/connection/ReplyPlaceholder.java: *** empty log message ***

        * orb/connection/ReplyPlaceholder.java: New file.

        * orb/connection/NoBiDirServerReplyListener.java,
        orb/connection/ReplyInputStream.java: *** empty log message ***

        * orb/connection/ReplyListener.java: New file.

        * orb/connection/Messages.java,
        orb/connection/NoBiDirClientRequestListener.java: *** empty log
        message ***

        * orb/connection/NoBiDirClientRequestListener.java,
        orb/connection/NoBiDirServerReplyListener.java: New file.

        * orb/connection/MessageReceptor.java,
        orb/connection/MessageReceptorPool.java: *** empty log message ***

        * orb/connection/MessageReceptor.java,
        orb/connection/MessageReceptorPool.java: New file.

        * orb/connection/GIOPInputStream.java,
        orb/connection/GIOPOutputStream.java: *** empty log message ***

        * orb/connection/GIOPOutputStream.java: New file.

        * orb/connection/GIOPConnection.java: *** empty log message ***

        * orb/connection/GIOPConnection.java,
        orb/connection/GIOPInputStream.java: New file.

        * orb/connection/Client_TCP_IP_Transport.java,
        orb/connection/ConnectionManager.java: *** empty log message ***

        * orb/connection/Client_TCP_IP_Transport.java: New file.

        * orb/connection/ClientConnection.java,
        orb/connection/ClientReplyListener.java: *** empty log message ***

        * orb/connection/ClientReplyListener.java: New file.

        * orb/ORB.java, orb/build.xml, orb/CDROutputStream.java,
        orb/Delegate.java, orb/BasicAdapter.java, orb/CDRInputStream.java,
        imr/ImplementationRepositoryImpl.java,
        security/jsse/SSLServerSocketFactory.java,
        security/jsse/SSLSocketFactory.java: *** empty log message ***

2001-08-15  jacorb

        * proxy/ForwarderImpl.java, imr/ImplementationRepositoryImpl.java,
        poa/RequestProcessor.java, orb/dsi/ServerRequest.java: *** empty
        log message ***

        * imr/ImplementationRepositoryImpl.java: added test that will
        check object liveness for *every* returned object location

        * orb/ParsedIOR.java, orb/ORB.java, orb/Delegate.java,
        orb/CDROutputStream.java, orb/CDRInputStream.java,
        orb/BufferManager.java, orb/connection/http/ServerConnection.java,
        orb/connection/ReplyOutputStream.java,
        orb/connection/RequestInputStream.java,
        orb/connection/RequestOutputStream.java,
        orb/connection/LocateReplyInputStream.java,
        orb/connection/LocateRequest.java, orb/connection/Messages.java,
        orb/connection/ReplyInputStream.java,
        orb/connection/ClientConnection.java: *** empty log message ***

        * orb/connection/new_conn/TCP_IP_GIOPTransport.java: New file.

        * orb/connection/new_conn/TCP_IP_GIOPTransport.java: replacements
        for some of the old connection classes. Kept separate to be able
        to have them in parallel

        * orb/connection/new_conn/Server_TCP_IP_GIOPTransport.java: New file.

        * orb/connection/new_conn/ServerRequestListener.java,
        orb/connection/new_conn/Server_TCP_IP_GIOPTransport.java:
        replacements for some of the old connection classes. Kept separate
        to be able to have them in parallel

        * orb/connection/new_conn/RequestListener.java,
        orb/connection/new_conn/ServerRequestListener.java: New file.

        * orb/connection/new_conn/ReplyListener.java,
        orb/connection/new_conn/RequestListener.java: replacements for
        some of the old connection classes. Kept separate to be able to
        have them in parallel

        * orb/connection/new_conn/GIOPTransport.java,
        orb/connection/new_conn/ReplyListener.java: New file.

        * orb/connection/new_conn/GIOPTransport.java: replacements for
        some of the old connection classes. Kept separate to be able to
        have them in parallel

        * orb/connection/new_conn/Client_TCP_IP_GIOPTransport.java,
        orb/connection/new_conn/GIOPConnection.java: New file.

        * orb/connection/new_conn/Client_TCP_IP_GIOPTransport.java,
        orb/connection/new_conn/GIOPConnection.java: replacements for some
        of the old connection classes. Kept separate to be able to have
        them in parallel

        * orb/BasicAdapter.java, orb/CDRInputStream.java,
        orb/connection/ReplyInputStream.java,
        orb/connection/RequestInputStream.java: fixed buffer management
        bug: having a finalizer in CDRInputstream causes great harm,
        because this returns buffers that are still used. Moved finalizer
        to ReplyInputStream and RequestInputstream, because these buffers
        may safly be returned

2001-08-10  jacorb

        * orb/ORB.java: first working GIOP 1.2 revision

        * orb/BasicAdapter.java, orb/Delegate.java,
        orb/connection/RequestOutputStream.java,
        orb/connection/ServerConnection.java,
        orb/connection/ReplyInputStream.java,
        orb/connection/ReplyOutputStream.java,
        orb/connection/RequestInputStream.java,
        orb/connection/LocateRequest.java,
        orb/connection/LocateRequestInputStream.java,
        orb/connection/LocateRequestOutputStream.java,
        orb/connection/Messages.java,
        orb/connection/ClientConnection.java,
        orb/connection/LocateReplyInputStream.java,
        orb/connection/LocateReplyOutputStream.java: first GIOP 1.2
        working revision

        * orb/connection/ConnectionManager.java,
        orb/connection/ReplyReceptor.java,
        orb/connection/ServerConnection.java,
        orb/connection/http/ClientConnection.java,
        orb/connection/http/ServerConnection.java,
        proxy/ForwarderImpl.java, orb/Delegate.java,
        orb/connection/AbstractConnection.java,
        orb/connection/ClientConnection.java: fixed a synch issue where a
        Delegate was able to get a ClientConnection from the
        ConnectionManager, which was in the process of being released.

        * security/jsse/README.properties: *** empty log message ***

        * orb/standardInterceptors/SSLComponentInterceptor.java: added
        some more default options

        * security/jsse/README.properties,
        security/jsse/SSLServerSocketFactory.java,
        security/jsse/SSLSocketFactory.java: some modifications after
        suggestions from Hugo Ferreira

2001-08-09  jacorb

        * util/Environment.java: set default supported and required
        options to 0. - They are either set manually, or hard-wired by the
        SSLComponentInterceptor.

2001-08-08  jacorb

        * orb/Delegate.java, orb/ParsedIOR.java,
        orb/connection/ConnectionManager.java: some more fixes in the
        Delegate/ClientConnection complex

        * proxy/ForwarderImpl.java,
        security/level2/ServerAccessDecisionInterceptor.java,
        orb/connection/ServerConnection.java,
        orb/connection/http/ClientConnection.java,
        orb/dsi/ServerRequest.java, orb/connection/ReplyInputStream.java,
        orb/connection/ReplyOutputStream.java,
        orb/connection/RequestInputStream.java,
        orb/connection/RequestOutputStream.java,
        orb/connection/LocateRequest.java,
        orb/connection/LocateRequestInputStream.java,
        orb/connection/LocateRequestOutputStream.java,
        orb/connection/Messages.java,
        orb/connection/LocateReplyInputStream.java,
        orb/connection/LocateReplyOutputStream.java,
        orb/BasicAdapter.java, orb/connection/ClientConnection.java,
        imr/ImplementationRepositoryImpl.java: *** empty log message ***

        * orb/connection/http/ClientConnection.java,
        proxy/ForwarderImpl.java, orb/connection/ClientConnection.java:
        stuff left over from the changes in ClientConnecton and Delegate.

        * orb/connection/ClientConnection.java,
        orb/connection/ReplyInputStream.java, orb/Delegate.java: threw
        some old stuff out (keeping of object references for requests),
        revisited access modifiers

2001-08-07  jacorb

        * imr/ImplementationRepositoryImpl.java: *** empty log message ***

        * orb/connection/ConnectionManager.java: did some cleanup

2001-08-06  jacorb

        * imr/ImplementationRepositoryImpl.java: *** empty log message ***

        * orb/connection/ClientConnection.java,
        orb/connection/ConnectionManager.java, orb/ORB.java,
        orb/ParsedIOR.java, orb/Delegate.java: connection: the
        clientconnection will now open the tcp connection when the first
        request is sent, and not when the connection is created by the
        connectionmanager delegate: added synchronization so multiple
        location forwards are handled correctly

2001-08-03  jacorb

        * security/jsse/build.xml: newly created

        * security/build.xml: added target jsse

2001-07-30  jacorb

        * security/jsse/README.properties,
        security/jsse/SSLServerSocketFactory.java,
        security/jsse/SSLSocketFactory.java,
        security/jsse/KeyStoreUtil.java: developed some more

        * orb/TypeCode.java, orb/ORBSingleton.java,
        orb/CDRInputStream.java, orb/CDROutputStream.java,
        ir/gui/typesystem/remote/IRValueMember.java,
        ir/gui/typesystem/remote/RemoteTypeSystem.java,
        ir/gui/typesystem/remote/IRValueMember.java,
        ir/gui/typesystem/remote/IRValueBox.java,
        ir/gui/typesystem/remote/IRValueBox.java,
        ir/gui/typesystem/remote/IRValue.java,
        ir/gui/typesystem/Value.java,
        ir/gui/typesystem/remote/IRValue.java,
        ir/gui/typesystem/Value.java: Patch by Ole Husgaard <osh@sparre.dk>.

        * orb/CDRInputStream.java (CDRInputStream):
        Extend org.omg.CORBA_2_3.portable.InputStream.
        (valueMap): New field.
        (read_value): New methods, according to spec.
        (read_special_value): New internal method.

        * orb/CDROutputStream.java (CDROutputStream): Extend
        org.omg.CORBA_2_3.portable.OutputStream.
        (valueMap): New field.
        (write_value(Serializable, BoxedValueHelper)): New methods,
        according to spec.
        (write_special_value): New internal method.

        * orb/ORB.java (lookup_value_factory): Dummy implementation.

        * orb/ORBSingleton.java (create_alias_tc): Adapted to new TypeCode
        constructor.
        (create_value_box_tc): Implemented.

        * orb/TypeCode.java (TypeCode): The constructor for tk_alias is
        now also used for tk_value_box (new parameter `kind').
        (content_type): Make it work for tk_value_box also.

        * idl/ValueBoxDecl.java (typeName): Changed to return the name of
        the Java type to which the value box is mapped.
        (boxTypeName): New method; returns the Java name of the box type.
        (holderName): Use the above.
        (helperName): New method, dito.
        (printReadExpression, printWriteStatement): Delegate to
        Input/OutputStream, not to the Helper class.
        (getTypeCodeExpression): Let this always be based on the
        boxTypeName.
        (printHolderClass, printHelperClass, printValueClass): Make it
        right.

2001-07-29  jacorb

        * orb/standardInterceptors/SSLComponentInterceptor.java:
        fixed some issues with required/supported options

        * security/ssl/SSLServerSocketFactory.java,
        security/ssl/SSLSocketFactory.java,
        security/ssl/ServerInvocationInterceptor.java,
        security/level2/CurrentImpl.java,
        security/level2/PrincipalAuthenticatorImpl.java: fixed some issues
        with the supported/required options

        * orb/BufferManager.java, orb/CDRInputStream.java,
        orb/CDROutputStream.java: fixed a few minor bugs

2001-07-25  Nicolas Noffke  <noffke@inf.fu-berlin.de>

        * orb/Delegate.java, orb/ParsedIOR.java: added support for IORs
        without IIOP profile

2001-07-24  jacorb

        * idl/AliasTypeSpec.java:
        (holderName) fixed unwinding to original type in case the original
        type is an alias

2001-07-23  jacorb

        * util/ObjectUtil.java, orb/ORB.java: *** empty log message ***

2001-07-20  jacorb

        * orb/ORB.java, security/jsse/SSLServerSocketFactory.java,
        security/jsse/SSLSocketFactory.java, security/build.xml,
        security/jsse/README.properties: *** empty log message ***

2001-07-16  jacorb

        * poa/RequestController.java: else clause added

2001-07-16  Nicolas Noffke  <noffke@inf.fu-berlin.de>

        * security/jsse/X509KeyManagerImpl.java,
        security/jsse/SSLSocketFactory.java,
        security/jsse/SecurityServiceInitializer.java,
        security/jsse/ServerInvocationInterceptor.java,
        security/jsse/PrincipalAuthenticatorImpl.java,
        security/jsse/README.properties,
        security/jsse/SSLServerSocketFactory.java: *** empty log message
        ***

2001-07-14  jacorb

        * idl/NameTable.java:
        (checkScopingRules) only check in the immediately enclosing scope,
        not all outer scopes.

2001-07-06  Nicolas Noffke  <noffke@inf.fu-berlin.de>

        * orb/Delegate.java: _invoke(): removed an else-branch that was
        useless

2001-07-05  Nicolas Noffke  <noffke@inf.fu-berlin.de>

        * orb/standardInterceptors/build.xml: set basedir correctly

        * orb/standardInterceptors/SSLComponentInterceptor.java: hard
        wired the NoDelegation option into the supported options

2001-07-03  Nicolas Noffke  <noffke@inf.fu-berlin.de>

        * security/ssl/SSLSocketFactory.java: *** empty log message ***

        * security/ssl/SSLServerSocketFactory.java,
        security/ssl/SSLSocketFactory.java: will only request credentials
        via current if necessary. this will not try to open any keystores
        if not necessary.

        * security/jsse/README.properties: *** empty log message ***

        * orb/connection/ClientConnection.java: <init> leave client_count
        to 0, because inc'ing is done by Delegate

        * orb/connection/ConnectionManager.java: removed the e.incUsers()
        in getConnection, because inc'ing is done by Delegate

        * imr/ImplementationRepositoryImpl.java: -RequestReceptor now
        closes the connection after finishing an request, so connections
        don't get piled up.  -cosmetics

        * security/jsse/ServerInvocationInterceptor.java,
        security/jsse/PrincipalAuthenticatorImpl.java: *** empty log
        message ***
