<?xml version="1.0"?>

<!DOCTYPE project [ <!ENTITY common SYSTEM "file:../../common.xml"> ]>

<project name="regression-test" default="help" basedir="../../">


  <!-- ==================================================== -->
  <!--             JacORB Tests build file                  -->
  <!-- ==================================================== -->
   <target name="help">
      <exec executable="java" outputproperty="OUTPUT">
         <arg line="-classpath ${java.class.path} org.apache.tools.ant.Main -logger org.apache.tools.ant.NoBannerLogger -projecthelp -buildfile ${basedir}/test/regression/build.xml"/>
      </exec>
      <echo message="${OUTPUT}"/>
   </target>

   &common;

   <!-- Using test-init so we can set different src, class and idl directories -->
   <target name="test-init" depends="ant-version,load-taskdef">
      <property name="debug" value="on"/>
      <!-- This value only used under Ant 1.5 -->
      <property name="debuglevel" value="lines,source"/>
      <property name="testdir" value="${basedir}/test/regression"/>
      <property name="src" value="${testdir}/src"/>
      <property name="idl" value="${testdir}/idl"/>
      <property name="dirs.output" value="${testdir}/output"/>
      <!-- Add JacORB classes -->
      <property name="classdir" value="${basedir}/test/regression/classes"/>
      <property name="classpath" value="${classdir}:${basedir}/classes:${java.class.path}"/>
      <property name="rmic.stubVersion" value="1.2"/>
      <property name="rmic.iiop" value="yes"/>
      <property name="rmic.iiopopts" value="-poa"/>
      <available classname="com.sun.corba.se.internal.iiop.ShutdownUtilDelegate" property="rmi.ShutdownUtilDelegate"/>

      <mkdir dir="${src}/generated"/>
      <mkdir dir="${dirs.output}"/>
      <mkdir dir="${classdir}"/>
   </target>


   <!-- ==================================================== -->
   <!--             compile and run tests                    -->
   <!-- ==================================================== -->


   <target name="build-all" depends="test-init" unless="RTEST.BUILD_DONE">
      <antcall target="compile-idl"/>
      <antcall target="fixup-rmi-14"/>
      <antcall target="compile-src"/>
      <antcall target="compile-rmi"/>
      <antcall target="compile-src2"/>
      <property name="RTEST.BUILD_DONE" value="true"/>
   </target>


   <target name="fixup-rmi-14" if="rmi.ShutdownUtilDelegate">
       <copy file="${src}/rmi/FixSunDelegateBug.java.14" tofile="${src}/rmi/FixSunDelegateBug.java"/>
   </target>


   <target name="compile-src">
      <antcall target="jacorb-javac">
         <param name="javac-includes" value="**"/>
         <param name="javac-excludes" value="generated/**,**/RMITestServant.java"/>
      </antcall>
   </target>


   <target name="compile-rmi" depends="test-init, compile-src">
      <rmic base="${classdir}"
         classname="org.jacorb.test.rmi.RMITestImpl"
         verify="${rmic.verify}"
         iiop="${rmic.iiop}"
         iiopopts="${rmic.iiopopts}"
         debug="${rmic.debug}">
      </rmic>
   </target>


   <target name="compile-src2" depends="compile-rmi">
      <antcall target="jacorb-javac">
         <param name="javac-includes" value="**/RMITestServant.java"/>
      </antcall>
   </target>

   <target name="run" depends="build-all">
      <antcall target="run13" />
      <antcall target="run14" />
   </target>

   <target name="run-no-build" depends="test-init">
      <antcall target="run13-no-build" />
      <antcall target="run14-no-build" />
   </target>

   <target name="run13" depends="build-all" unless="rmi.ShutdownUtilDelegate">
      <junit fork="yes" printsummary="withOutAndErr" showoutput="true">
           <!-- ant 1.4.1 doesn't support showoutput, -->
           <!-- so I removed it for now, AS           -->
         <jvmarg value="-Xbootclasspath/p:${classpath}"/>
         <jvmarg value="-Dtestdir=${testdir}"/>
         <classpath path="${classpath}"/>
         <formatter type="plain"/>
         <test name="${test}" todir="${dirs.output}"/>
      </junit>
   </target>

   <target name="run13-no-build" depends="test-init" unless="rmi.ShutdownUtilDelegate">
      <junit fork="yes" printsummary="withOutAndErr" showoutput="true">
           <!-- ant 1.4.1 doesn't support showoutput, -->
           <!-- so I removed it for now, AS           -->
         <jvmarg value="-Xbootclasspath/p:${classpath}"/>
         <jvmarg value="-Dtestdir=${testdir}"/>
         <classpath path="${classpath}"/>
         <formatter type="plain"/>
         <test name="${test}" todir="${dirs.output}"/>
      </junit>
   </target>

   <target name="run14" depends="build-all" if="rmi.ShutdownUtilDelegate">
      <junit fork="yes" printsummary="withOutAndErr" showoutput="true">
           <!-- ant 1.4.1 doesn't support showoutput, -->
           <!-- so I removed it for now, AS           -->
         <jvmarg value="-Xbootclasspath/p:${classpath}"/>
         <jvmarg value="-Dtestdir=${testdir}"/>
         <jvmarg value="-Djavax.rmi.CORBA.UtilClass=org.jacorb.test.rmi.FixSunDelegateBug"/>
         <classpath path="${classpath}"/>
         <formatter type="plain"/>
         <test name="${test}" todir="${dirs.output}"/>
      </junit>
   </target>

   <target name="run14-no-build" depends="test-init" if="rmi.ShutdownUtilDelegate">
      <junit fork="yes" printsummary="withOutAndErr" showoutput="true">
           <!-- ant 1.4.1 doesn't support showoutput, -->
           <!-- so I removed it for now, AS           -->
         <jvmarg value="-Xbootclasspath/p:${classpath}"/>
         <jvmarg value="-Dtestdir=${testdir}"/>
         <jvmarg value="-Djavax.rmi.CORBA.UtilClass=org.jacorb.test.rmi.FixSunDelegateBug"/>
         <classpath path="${classpath}"/>
         <formatter type="plain"/>
         <test name="${test}" todir="${dirs.output}"/>
      </junit>
   </target>

   <target name="run-jdk-orb-no-build" depends="test-init" if="rmi.ShutdownUtilDelegate">
      <junit fork="yes" printsummary="withOutAndErr">
           <!-- ant 1.4.1 doesn't support showoutput, -->
           <!-- so I removed it for now, AS           -->
         <jvmarg value="-Dtestdir=${testdir}"/>
         <classpath path="${classpath}"/>
         <formatter type="plain"/>
         <test name="${test}" outfile="TEST-${test}-jdkorb" todir="${dirs.output}"/>
      </junit>
   </target>


   <!-- ==================================================== -->
   <!--                  compile idl                         -->
   <!-- ==================================================== -->


   <target name="compile-idl">
      <antcall target="idl-tests"/>
      <antcall target="idl-basicserver"/>
      <antcall target="idl-charserver"/>
      <antcall target="idl-longlongseqserver"/>
      <antcall target="idl-callbackserver"/>
      <antcall target="idl-timingserver"/>
      <antcall target="idl-syncscopeserver"/>
      <antcall target="idl-connectiontimeout"/>
      <antcall target="idl-bidir"/>
      <antcall target="idl-iiopaddress"/>
      <antcall target="idl-recursive"/>
   </target>


   <target name="process-idl">
<!-- This condition doesn't work when we compile multiple IDL
     files to the same directory.  I'm working to find a clean
     solution, AS.

      <condition property="${props.idl}">
         <or>
            <not>
               <available file="${classdir}/${pkg.idl}"/>
            </not>
            <not>
               <available file="${src}/generated/${pkg.idl}"/>
            </not>
            <uptodate targetfile="${idl}/${file.idl}">
               <srcfiles dir="${src}/generated/${pkg.idl}"
                         includes="**/*.java"/>
            </uptodate>
         </or>
      </condition>
-->
      <property name="${props.idl}" value="true"/>
      <antcall target="generate-src"/>
   </target>


   <target name="generate-src" if="${props.idl}">
      <jacidl generateir="true"
              srcdir="${idl}"
              ami_callback="${callback.idl}"
              destdir="${src}/generated"
              includes="${file.idl}"/>
      <antcall target="jacorb-javac">
         <param name="javac-src" value="${src}/generated"/>
         <param name="javac-includes" value="${pkg.idl}/**"/>
      </antcall>
   </target>


   <!-- ==================================================== -->
   <!--                compile Tests.idl                     -->
   <!-- ==================================================== -->


   <target name="idl-tests">
      <property name="props.idl" value="test"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="false"/>
      <property name="file.idl" value="Tests.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-basicserver">
      <property name="props.idl" value="BasicServer"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="false"/>
      <property name="file.idl" value="BasicServer.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-charserver">
      <property name="props.idl" value="CharServer"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="false"/>
      <property name="file.idl" value="CharServer.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-longlongseqserver">
      <property name="props.idl" value="LongLongSeqServer"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="false"/>
      <property name="file.idl" value="LongLongSeqServer.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-callbackserver">
      <property name="props.idl" value="CallbackServer"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="true"/>
      <property name="file.idl" value="CallbackServer.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-timingserver">
      <property name="props.idl" value="TimingServer"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="true"/>
      <property name="file.idl" value="TimingServer.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-syncscopeserver">
      <property name="props.idl" value="SyncScopeServer"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="true"/>
      <property name="file.idl" value="SyncScopeServer.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-connectiontimeout">
      <property name="props.idl" value="ConnectionTimeout"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="false"/>
      <property name="file.idl" value="ConnectionTimeout.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-bidir">
      <property name="props.idl" value="BiDir"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="false"/>
      <property name="file.idl" value="BiDir.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-iiopaddress">
      <property name="props.idl" value="IIOPAddress"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="false"/>
      <property name="file.idl" value="IIOPAddress.idl"/>
      <antcall target="process-idl"/>
  </target>

  <target name="idl-recursive">
      <property name="props.idl" value="RecursiveParamServer"/>
      <property name="pkg.idl" value="org/jacorb/test"/>
      <property name="callback.idl" value="false"/>
      <property name="file.idl" value="RecursiveParamServer.idl"/>
      <antcall target="process-idl"/>
  </target>

   <!-- ==================================================== -->
   <!--                  run all tests                       -->
   <!-- ==================================================== -->


   <target name="run-all"
           description="Run all Jacorb tests">
      <antcall target="run">
         <param name="test" value="org.jacorb.test.AllTest"/>
      </antcall>
      <antcall target="compile-idl-test-generated"/>
  </target>


   <!-- ==================================================== -->
   <!--                  run idl tests                       -->
   <!-- ==================================================== -->

   <target name="run-all-idl"
           description="Run all Jacorb tests in the idl package and its subpackages">
      <antcall target="run">
         <param name="test" value="org.jacorb.test.idl.AllTest"/>
      </antcall>
      <antcall target="compile-idl-test-generated"/>
   </target>

   <target name="compile-idl-test-generated" depends="test-init">
       <!-- Compile the test idl -->
      <antcall target="jacorb-javac">
         <param name="javac-includes" value="generated/**"/>
      </antcall>
      <echo message="Successfully compiled test idl"/>
   </target>


   <!-- ==================================================== -->
   <!--                  run orb tests                       -->
   <!-- ==================================================== -->


   <target name="run-all-orb"
           description="Run all Jacorb tests in the orb package and its subpackages">
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.AllTest"/>
      </antcall>
   </target>


   <target name="run-all-orb-no-build"
           description="Run all Jacorb tests in the orb package and its subpackages">
      <antcall target="run-no-build">
         <param name="test" value="org.jacorb.test.orb.AllTest"/>
      </antcall>
   </target>

   <!-- ==================================================== -->
   <!--                  run rmi tests                       -->
   <!-- ==================================================== -->


   <target name="run-all-rmi"
           description="Run all Jacorb tests in the rmi package and its subpackages">
      <antcall target="run">
         <param name="test" value="org.jacorb.test.rmi.AllTest"/>
      </antcall>
      <antcall target="run-jdk-orb-no-build">
         <param name="test" value="org.jacorb.test.rmi.AllTest"/>
      </antcall>
   </target>


   <target name="run-all-rmi-no-build"
           description="Run all Jacorb tests in the rmi package and its subpackages">
      <antcall target="run-no-build">
         <param name="test" value="org.jacorb.test.rmi.AllTest"/>
      </antcall>
      <antcall target="run-jdk-orb-no-build">
         <param name="test" value="org.jacorb.test.rmi.AllTest"/>
      </antcall>
   </target>


   <!-- ==================================================== -->
   <!--                 run dynany tests                     -->
   <!-- ==================================================== -->


   <target name="run-all-dynany"
           description="Run all Jacorb tests in the dynany package and its subpackages">
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.AllTest"/>
      </antcall>
   </target>


   <target name="run-all-dynany-separate"
           description="Run all Jacorb tests in the dynany package and its subpackages, logging results in separate files">
      <antcall target="run-package-dynany-separate"/>
   </target>


   <!-- Run all Jacorb tests in the dynany package only, logging results in separate files -->
   <target name="run-package-dynany-separate">
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyArrayTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyBaseTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyBoundedSeqTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyEmptyExTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyEnumTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyFixedTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyNonEmptyExTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyStructTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyUnboundedSeqTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyUnionIntTest"/>
      </antcall>
      <antcall target="run">
         <param name="test" value="org.jacorb.test.orb.dynany.DynAnyUnionTest"/>
      </antcall>
   </target>


   <!-- ==================================================== -->
   <!--                   clean up                           -->
   <!-- ==================================================== -->


   <target name="clean"
           depends="test-init"
           description="Remove all generated source files and class files">
      <delete dir="${classdir}/org" failonerror="false"/>
      <delete dir="${src}/generated" failonerror="false"/>
      <delete dir="${classdir}" failonerror="false"/>
      <delete file="${src}/rmi/FixSunDelegateBug.java" failonerror="false"/>
   </target>
</project>
