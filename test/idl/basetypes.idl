// Test suite part 1: base types, constant definitions

module S {
  typedef sequence < string > strings;
};

module basetypes
{
    // definitions

    typedef long ASN1_Integer;
    typedef ASN1_Integer NotificationIdentifierHelper;
    
    const long arrayBound = 011;
    
    const long LEN = 5;
    typedef string<LEN> ls;

    const float f_c1 = 1.11;
    const float f_c2 = 11e-2;
    const float f_c3 = 0.41;
    const float f_c4 = 1;

    const string A = "/*";
    const fixed ff = 1.1d;

    typedef long b[arrayBound];
    typedef octet array[2][3][4];

   

    typedef Object myObject;

    typedef fixed <5,2> first_fixed;
    
    // test uses
    
    struct ArrayContainer {
	long    a1[arrayBound];
	long    a2[7];
	b       a3;
	first_fixed f;
	fixed <3,1> second_f;
	myObject o;
    };
    
    interface N;

    interface Inter
	{
	    oneway void op();
	};
    
};



module TestX
{
    interface M : basetypes::N {
	void op();
	basetypes::first_fixed get_fixed(out basetypes::first_fixed f);
    };
};


module basetypes
{
    interface N {
	void notify();
	TestX::M getM();
    };
    
};


